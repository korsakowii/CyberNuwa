49912d03bb59bf9ff737ab807b5fa0b5
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _react2 = require("@testing-library/react");
var _table = require("../../../components/ui/table");
var _jsxFileName = "/Users/yanxiaoyu/projects/CyberNuwa/tests/components/ui/Table.test.tsx";
var __jsx = _react.default.createElement;
describe('Table Components', () => {
  const mockData = [{
    id: 1,
    name: 'John Doe',
    email: 'john@example.com'
  }, {
    id: 2,
    name: 'Jane Smith',
    email: 'jane@example.com'
  }];
  describe('Table', () => {
    it('renders with default variant', () => {
      (0, _react2.render)(__jsx(_table.Table, {
        "data-testid": "table",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 14,
          columnNumber: 9
        }
      }, __jsx("tbody", {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 15,
          columnNumber: 11
        }
      }, __jsx("tr", {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 16,
          columnNumber: 13
        }
      }, __jsx("td", {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 16,
          columnNumber: 17
        }
      }, "Test")))));
      const table = _react2.screen.getByTestId('table');
      expect(table).toBeInTheDocument();
      expect(table).toHaveClass('w-full', 'border-collapse');
    });
    it('renders with bordered variant', () => {
      (0, _react2.render)(__jsx(_table.Table, {
        variant: "bordered",
        "data-testid": "table",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 28,
          columnNumber: 9
        }
      }, __jsx("tbody", {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 29,
          columnNumber: 11
        }
      }, __jsx("tr", {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 30,
          columnNumber: 13
        }
      }, __jsx("td", {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 30,
          columnNumber: 17
        }
      }, "Test")))));
      const table = _react2.screen.getByTestId('table');
      expect(table).toHaveClass('border', 'border-gray-200');
    });
    it('applies custom className', () => {
      (0, _react2.render)(__jsx(_table.Table, {
        className: "custom-class",
        "data-testid": "table",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 41,
          columnNumber: 9
        }
      }, __jsx("tbody", {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 42,
          columnNumber: 11
        }
      }, __jsx("tr", {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 43,
          columnNumber: 13
        }
      }, __jsx("td", {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 43,
          columnNumber: 17
        }
      }, "Test")))));
      const table = _react2.screen.getByTestId('table');
      expect(table).toHaveClass('custom-class');
    });
  });
  describe('TableHeader', () => {
    it('renders with correct styling', () => {
      (0, _react2.render)(__jsx(_table.Table, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 56,
          columnNumber: 9
        }
      }, __jsx(_table.TableHeader, {
        "data-testid": "header",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 57,
          columnNumber: 11
        }
      }, __jsx("tr", {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 58,
          columnNumber: 13
        }
      }, __jsx("th", {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 58,
          columnNumber: 17
        }
      }, "Header")))));
      const header = _react2.screen.getByTestId('header');
      expect(header).toBeInTheDocument();
      expect(header).toHaveClass('bg-gray-50');
    });
  });
  describe('TableBody', () => {
    it('renders with correct styling', () => {
      (0, _react2.render)(__jsx(_table.Table, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 72,
          columnNumber: 9
        }
      }, __jsx(_table.TableBody, {
        "data-testid": "body",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 73,
          columnNumber: 11
        }
      }, __jsx("tr", {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 74,
          columnNumber: 13
        }
      }, __jsx("td", {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 74,
          columnNumber: 17
        }
      }, "Body")))));
      const body = _react2.screen.getByTestId('body');
      expect(body).toBeInTheDocument();
      expect(body).toHaveClass('divide-y', 'divide-gray-200');
    });
  });
  describe('TableRow', () => {
    it('renders with hover effect by default', () => {
      (0, _react2.render)(__jsx(_table.Table, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 88,
          columnNumber: 9
        }
      }, __jsx(_table.TableBody, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 89,
          columnNumber: 11
        }
      }, __jsx(_table.TableRow, {
        "data-testid": "row",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 90,
          columnNumber: 13
        }
      }, __jsx("td", {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 91,
          columnNumber: 15
        }
      }, "Test")))));
      const row = _react2.screen.getByTestId('row');
      expect(row).toHaveClass('hover:bg-gray-50');
    });
    it('renders without hover effect when disabled', () => {
      (0, _react2.render)(__jsx(_table.Table, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 103,
          columnNumber: 9
        }
      }, __jsx(_table.TableBody, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 104,
          columnNumber: 11
        }
      }, __jsx(_table.TableRow, {
        hover: false,
        "data-testid": "row",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 105,
          columnNumber: 13
        }
      }, __jsx("td", {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 106,
          columnNumber: 15
        }
      }, "Test")))));
      const row = _react2.screen.getByTestId('row');
      expect(row).not.toHaveClass('hover:bg-gray-50');
    });
    it('renders with selected state', () => {
      (0, _react2.render)(__jsx(_table.Table, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 118,
          columnNumber: 9
        }
      }, __jsx(_table.TableBody, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 119,
          columnNumber: 11
        }
      }, __jsx(_table.TableRow, {
        selected: true,
        "data-testid": "row",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 120,
          columnNumber: 13
        }
      }, __jsx("td", {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 121,
          columnNumber: 15
        }
      }, "Test")))));
      const row = _react2.screen.getByTestId('row');
      expect(row).toHaveClass('bg-blue-50');
    });
  });
  describe('TableHead', () => {
    it('renders with default styling', () => {
      (0, _react2.render)(__jsx(_table.Table, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 135,
          columnNumber: 9
        }
      }, __jsx(_table.TableHeader, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 136,
          columnNumber: 11
        }
      }, __jsx("tr", {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 137,
          columnNumber: 13
        }
      }, __jsx(_table.TableHead, {
        "data-testid": "head",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 138,
          columnNumber: 15
        }
      }, "Name")))));
      const head = _react2.screen.getByTestId('head');
      expect(head).toBeInTheDocument();
      expect(head).toHaveClass('px-6', 'py-3', 'text-left');
    });
    it('renders as sortable when specified', () => {
      (0, _react2.render)(__jsx(_table.Table, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 151,
          columnNumber: 9
        }
      }, __jsx(_table.TableHeader, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 152,
          columnNumber: 11
        }
      }, __jsx("tr", {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 153,
          columnNumber: 13
        }
      }, __jsx(_table.TableHead, {
        sortable: true,
        "data-testid": "head",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 154,
          columnNumber: 15
        }
      }, "Name")))));
      const head = _react2.screen.getByTestId('head');
      expect(head).toHaveClass('cursor-pointer', 'select-none');
    });
    it('shows sort direction indicators', () => {
      (0, _react2.render)(__jsx(_table.Table, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 166,
          columnNumber: 9
        }
      }, __jsx(_table.TableHeader, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 167,
          columnNumber: 11
        }
      }, __jsx("tr", {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 168,
          columnNumber: 13
        }
      }, __jsx(_table.TableHead, {
        sortable: true,
        sortDirection: "asc",
        "data-testid": "head",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 169,
          columnNumber: 15
        }
      }, "Name")))));
      const head = _react2.screen.getByTestId('head');
      expect(head).toHaveTextContent('↑');
    });
    it('calls onSort when clicked', () => {
      const mockOnSort = jest.fn();
      (0, _react2.render)(__jsx(_table.Table, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 182,
          columnNumber: 9
        }
      }, __jsx(_table.TableHeader, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 183,
          columnNumber: 11
        }
      }, __jsx("tr", {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 184,
          columnNumber: 13
        }
      }, __jsx(_table.TableHead, {
        sortable: true,
        onSort: mockOnSort,
        "data-testid": "head",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 185,
          columnNumber: 15
        }
      }, "Name")))));
      const head = _react2.screen.getByTestId('head');
      _react2.fireEvent.click(head);
      expect(mockOnSort).toHaveBeenCalledTimes(1);
    });
  });
  describe('TableCell', () => {
    it('renders with default alignment', () => {
      (0, _react2.render)(__jsx(_table.Table, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 200,
          columnNumber: 9
        }
      }, __jsx(_table.TableBody, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 201,
          columnNumber: 11
        }
      }, __jsx(_table.TableRow, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 202,
          columnNumber: 13
        }
      }, __jsx(_table.TableCell, {
        "data-testid": "cell",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 203,
          columnNumber: 15
        }
      }, "Test")))));
      const cell = _react2.screen.getByTestId('cell');
      expect(cell).toBeInTheDocument();
      expect(cell).toHaveClass('text-left');
    });
    it('renders with center alignment', () => {
      (0, _react2.render)(__jsx(_table.Table, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 216,
          columnNumber: 9
        }
      }, __jsx(_table.TableBody, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 217,
          columnNumber: 11
        }
      }, __jsx(_table.TableRow, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 218,
          columnNumber: 13
        }
      }, __jsx(_table.TableCell, {
        align: "center",
        "data-testid": "cell",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 219,
          columnNumber: 15
        }
      }, "Test")))));
      const cell = _react2.screen.getByTestId('cell');
      expect(cell).toHaveClass('text-center');
    });
    it('renders with right alignment', () => {
      (0, _react2.render)(__jsx(_table.Table, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 231,
          columnNumber: 9
        }
      }, __jsx(_table.TableBody, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 232,
          columnNumber: 11
        }
      }, __jsx(_table.TableRow, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 233,
          columnNumber: 13
        }
      }, __jsx(_table.TableCell, {
        align: "right",
        "data-testid": "cell",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 234,
          columnNumber: 15
        }
      }, "Test")))));
      const cell = _react2.screen.getByTestId('cell');
      expect(cell).toHaveClass('text-right');
    });
  });
  describe('TableFooter', () => {
    it('renders with correct styling', () => {
      (0, _react2.render)(__jsx(_table.Table, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 248,
          columnNumber: 9
        }
      }, __jsx(_table.TableFooter, {
        "data-testid": "footer",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 249,
          columnNumber: 11
        }
      }, __jsx("tr", {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 250,
          columnNumber: 13
        }
      }, __jsx("td", {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 250,
          columnNumber: 17
        }
      }, "Footer")))));
      const footer = _react2.screen.getByTestId('footer');
      expect(footer).toBeInTheDocument();
      expect(footer).toHaveClass('bg-gray-50');
    });
  });
  describe('TableCaption', () => {
    it('renders with correct styling', () => {
      (0, _react2.render)(__jsx(_table.Table, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 264,
          columnNumber: 9
        }
      }, __jsx(_table.TableCaption, {
        "data-testid": "caption",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 265,
          columnNumber: 11
        }
      }, "Table Description"), __jsx("tbody", {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 266,
          columnNumber: 11
        }
      }, __jsx("tr", {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 267,
          columnNumber: 13
        }
      }, __jsx("td", {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 267,
          columnNumber: 17
        }
      }, "Test")))));
      const caption = _react2.screen.getByTestId('caption');
      expect(caption).toBeInTheDocument();
      expect(caption).toHaveClass('mt-4', 'text-sm', 'text-gray-500');
    });
  });
  describe('Complete Table Integration', () => {
    it('renders a complete table with all components', () => {
      (0, _react2.render)(__jsx(_table.Table, {
        "data-testid": "table",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 281,
          columnNumber: 9
        }
      }, __jsx(_table.TableCaption, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 282,
          columnNumber: 11
        }
      }, "User List"), __jsx(_table.TableHeader, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 283,
          columnNumber: 11
        }
      }, __jsx(_table.TableRow, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 284,
          columnNumber: 13
        }
      }, __jsx(_table.TableHead, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 285,
          columnNumber: 15
        }
      }, "ID"), __jsx(_table.TableHead, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 286,
          columnNumber: 15
        }
      }, "Name"), __jsx(_table.TableHead, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 287,
          columnNumber: 15
        }
      }, "Email"))), __jsx(_table.TableBody, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 290,
          columnNumber: 11
        }
      }, mockData.map(user => __jsx(_table.TableRow, {
        key: user.id,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 292,
          columnNumber: 15
        }
      }, __jsx(_table.TableCell, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 293,
          columnNumber: 17
        }
      }, user.id), __jsx(_table.TableCell, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 294,
          columnNumber: 17
        }
      }, user.name), __jsx(_table.TableCell, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 295,
          columnNumber: 17
        }
      }, user.email)))), __jsx(_table.TableFooter, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 299,
          columnNumber: 11
        }
      }, __jsx(_table.TableRow, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 300,
          columnNumber: 13
        }
      }, __jsx(_table.TableCell, {
        colSpan: 3,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 301,
          columnNumber: 15
        }
      }, "Total: ", mockData.length, " users")))));
      expect(_react2.screen.getByTestId('table')).toBeInTheDocument();
      expect(_react2.screen.getByText('User List')).toBeInTheDocument();
      expect(_react2.screen.getByText('ID')).toBeInTheDocument();
      expect(_react2.screen.getByText('John Doe')).toBeInTheDocument();
      expect(_react2.screen.getByText('jane@example.com')).toBeInTheDocument();
      expect(_react2.screen.getByText('Total: 2 users')).toBeInTheDocument();
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,