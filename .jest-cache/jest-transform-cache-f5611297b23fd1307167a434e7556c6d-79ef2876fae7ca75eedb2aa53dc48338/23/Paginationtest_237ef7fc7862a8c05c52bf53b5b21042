acaeba1e43abf2b07ed415c7882e01b2
"use strict";

var _jsxFileName = "/Users/yanxiaoyu/projects/CyberNuwa/tests/components/ui/Pagination.test.tsx";
// 模拟Button组件
_getJestObj().mock('../../../components/ui/button', () => {
  return function MockButton(_ref) {
    let {
        children,
        onClick,
        disabled,
        className
      } = _ref,
      props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
    return __jsx("button", (0, _extends2.default)({
      onClick: onClick,
      disabled: disabled,
      className: className,
      "data-testid": "pagination-button"
    }, props, {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 10,
        columnNumber: 7
      }
    }), children);
  };
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = _interopRequireDefault(require("react"));
var _react2 = require("@testing-library/react");
var _pagination = _interopRequireDefault(require("../../../components/ui/pagination"));
const _excluded = ["children", "onClick", "disabled", "className"];
var __jsx = _react.default.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _getJestObj() {
  const {
    jest
  } = require("@jest/globals");
  _getJestObj = () => jest;
  return jest;
}
describe('Pagination Component', () => {
  const mockPaginationInfo = {
    currentPage: 1,
    totalPages: 10,
    totalItems: 100,
    itemsPerPage: 10,
    hasNextPage: true,
    hasPreviousPage: false
  };
  const mockOnPageChange = jest.fn();
  const mockOnItemsPerPageChange = jest.fn();
  beforeEach(() => {
    jest.clearAllMocks();
  });
  describe('Basic Rendering', () => {
    it('renders pagination component', () => {
      (0, _react2.render)(__jsx(_pagination.default, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 43,
          columnNumber: 9
        }
      }));
      expect(_react2.screen.getByText('共 100 条记录')).toBeInTheDocument();
      expect(_react2.screen.getByText('第 1 页，共 10 页')).toBeInTheDocument();
    });
    it('renders with custom className', () => {
      (0, _react2.render)(__jsx(_pagination.default, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange,
        className: "custom-class",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 55,
          columnNumber: 9
        }
      }));
      const pagination = _react2.screen.getByText('共 100 条记录').closest('div');
      expect(pagination).toHaveClass('custom-class');
    });
  });
  describe('Page Navigation', () => {
    it('renders previous and next buttons', () => {
      (0, _react2.render)(__jsx(_pagination.default, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 70,
          columnNumber: 9
        }
      }));
      expect(_react2.screen.getByText('上一页')).toBeInTheDocument();
      expect(_react2.screen.getByText('下一页')).toBeInTheDocument();
    });
    it('disables previous button on first page', () => {
      (0, _react2.render)(__jsx(_pagination.default, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 82,
          columnNumber: 9
        }
      }));
      const prevButton = _react2.screen.getByText('上一页');
      expect(prevButton).toBeDisabled();
    });
    it('enables next button when hasNextPage is true', () => {
      (0, _react2.render)(__jsx(_pagination.default, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 94,
          columnNumber: 9
        }
      }));
      const nextButton = _react2.screen.getByText('下一页');
      expect(nextButton).not.toBeDisabled();
    });
    it('calls onPageChange when next button is clicked', () => {
      (0, _react2.render)(__jsx(_pagination.default, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 106,
          columnNumber: 9
        }
      }));
      const nextButton = _react2.screen.getByText('下一页');
      _react2.fireEvent.click(nextButton);
      expect(mockOnPageChange).toHaveBeenCalledWith(2);
    });
    it('calls onPageChange when previous button is clicked', () => {
      const infoWithPrevious = _objectSpread(_objectSpread({}, mockPaginationInfo), {}, {
        currentPage: 2,
        hasPreviousPage: true
      });
      (0, _react2.render)(__jsx(_pagination.default, {
        info: infoWithPrevious,
        onPageChange: mockOnPageChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 126,
          columnNumber: 9
        }
      }));
      const prevButton = _react2.screen.getByText('上一页');
      _react2.fireEvent.click(prevButton);
      expect(mockOnPageChange).toHaveBeenCalledWith(1);
    });
  });
  describe('Page Numbers', () => {
    it('renders page numbers for small total pages', () => {
      const smallPaginationInfo = _objectSpread(_objectSpread({}, mockPaginationInfo), {}, {
        totalPages: 5
      });
      (0, _react2.render)(__jsx(_pagination.default, {
        info: smallPaginationInfo,
        onPageChange: mockOnPageChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 147,
          columnNumber: 9
        }
      }));
      expect(_react2.screen.getByText('1')).toBeInTheDocument();
      expect(_react2.screen.getByText('2')).toBeInTheDocument();
      expect(_react2.screen.getByText('3')).toBeInTheDocument();
      expect(_react2.screen.getByText('4')).toBeInTheDocument();
      expect(_react2.screen.getByText('5')).toBeInTheDocument();
    });
    it('renders ellipsis for large total pages', () => {
      const largePaginationInfo = _objectSpread(_objectSpread({}, mockPaginationInfo), {}, {
        totalPages: 20,
        currentPage: 10
      });
      (0, _react2.render)(__jsx(_pagination.default, {
        info: largePaginationInfo,
        onPageChange: mockOnPageChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 168,
          columnNumber: 9
        }
      }));
      expect(_react2.screen.getByText('1')).toBeInTheDocument();
      expect(_react2.screen.getByText('...')).toBeInTheDocument();
      expect(_react2.screen.getByText('9')).toBeInTheDocument();
      expect(_react2.screen.getByText('10')).toBeInTheDocument();
      expect(_react2.screen.getByText('11')).toBeInTheDocument();
      expect(_react2.screen.getByText('...')).toBeInTheDocument();
      expect(_react2.screen.getByText('20')).toBeInTheDocument();
    });
    it('highlights current page', () => {
      (0, _react2.render)(__jsx(_pagination.default, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 185,
          columnNumber: 9
        }
      }));
      const currentPageButton = _react2.screen.getByText('1');
      expect(currentPageButton).toHaveClass('bg-primary');
    });
    it('calls onPageChange when page number is clicked', () => {
      (0, _react2.render)(__jsx(_pagination.default, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 197,
          columnNumber: 9
        }
      }));
      const pageButton = _react2.screen.getByText('2');
      _react2.fireEvent.click(pageButton);
      expect(mockOnPageChange).toHaveBeenCalledWith(2);
    });
  });
  describe('Items Per Page', () => {
    it('renders items per page selector when enabled', () => {
      (0, _react2.render)(__jsx(_pagination.default, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange,
        onItemsPerPageChange: mockOnItemsPerPageChange,
        showItemsPerPage: true,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 213,
          columnNumber: 9
        }
      }));
      expect(_react2.screen.getByText('每页')).toBeInTheDocument();
      expect(_react2.screen.getByDisplayValue('10')).toBeInTheDocument();
      expect(_react2.screen.getByText('条')).toBeInTheDocument();
    });
    it('does not render items per page selector when disabled', () => {
      (0, _react2.render)(__jsx(_pagination.default, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange,
        showItemsPerPage: false,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 228,
          columnNumber: 9
        }
      }));
      expect(_react2.screen.queryByText('每页')).not.toBeInTheDocument();
      expect(_react2.screen.queryByDisplayValue('10')).not.toBeInTheDocument();
    });
    it('calls onItemsPerPageChange when selection changes', () => {
      (0, _react2.render)(__jsx(_pagination.default, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange,
        onItemsPerPageChange: mockOnItemsPerPageChange,
        showItemsPerPage: true,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 241,
          columnNumber: 9
        }
      }));
      const select = _react2.screen.getByDisplayValue('10');
      _react2.fireEvent.change(select, {
        target: {
          value: '20'
        }
      });
      expect(mockOnItemsPerPageChange).toHaveBeenCalledWith(20);
    });
    it('uses custom items per page options', () => {
      const customOptions = [5, 15, 25, 50];
      (0, _react2.render)(__jsx(_pagination.default, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange,
        onItemsPerPageChange: mockOnItemsPerPageChange,
        showItemsPerPage: true,
        itemsPerPageOptions: customOptions,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 259,
          columnNumber: 9
        }
      }));
      customOptions.forEach(option => {
        expect(_react2.screen.getByDisplayValue(option.toString())).toBeInTheDocument();
      });
    });
  });
  describe('Display Options', () => {
    it('hides total count when showTotal is false', () => {
      (0, _react2.render)(__jsx(_pagination.default, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange,
        showTotal: false,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 277,
          columnNumber: 9
        }
      }));
      expect(_react2.screen.queryByText('共 100 条记录')).not.toBeInTheDocument();
    });
    it('hides page info when showPageInfo is false', () => {
      (0, _react2.render)(__jsx(_pagination.default, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange,
        showPageInfo: false,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 289,
          columnNumber: 9
        }
      }));
      expect(_react2.screen.queryByText('第 1 页，共 10 页')).not.toBeInTheDocument();
    });
    it('hides pagination when only one page', () => {
      const singlePageInfo = _objectSpread(_objectSpread({}, mockPaginationInfo), {}, {
        totalPages: 1,
        hasNextPage: false
      });
      (0, _react2.render)(__jsx(_pagination.default, {
        info: singlePageInfo,
        onPageChange: mockOnPageChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 307,
          columnNumber: 9
        }
      }));
      expect(_react2.screen.queryByText('上一页')).not.toBeInTheDocument();
      expect(_react2.screen.queryByText('下一页')).not.toBeInTheDocument();
      expect(_react2.screen.queryByText('1')).not.toBeInTheDocument();
    });
  });
  describe('Edge Cases', () => {
    it('handles zero total items', () => {
      const zeroItemsInfo = _objectSpread(_objectSpread({}, mockPaginationInfo), {}, {
        totalItems: 0,
        totalPages: 0,
        hasNextPage: false
      });
      (0, _react2.render)(__jsx(_pagination.default, {
        info: zeroItemsInfo,
        onPageChange: mockOnPageChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 329,
          columnNumber: 9
        }
      }));
      expect(_react2.screen.getByText('共 0 条记录')).toBeInTheDocument();
      expect(_react2.screen.getByText('第 1 页，共 0 页')).toBeInTheDocument();
    });
    it('handles current page greater than total pages', () => {
      const invalidPageInfo = _objectSpread(_objectSpread({}, mockPaginationInfo), {}, {
        currentPage: 15,
        totalPages: 10
      });
      (0, _react2.render)(__jsx(_pagination.default, {
        info: invalidPageInfo,
        onPageChange: mockOnPageChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 347,
          columnNumber: 9
        }
      }));

      // Should still render without crashing
      expect(_react2.screen.getByText('共 100 条记录')).toBeInTheDocument();
    });
  });
  describe('Responsive Design', () => {
    it('applies responsive classes', () => {
      (0, _react2.render)(__jsx(_pagination.default, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 361,
          columnNumber: 9
        }
      }));
      const container = _react2.screen.getByText('共 100 条记录').closest('div');
      expect(container).toHaveClass('flex-col', 'sm:flex-row');
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,