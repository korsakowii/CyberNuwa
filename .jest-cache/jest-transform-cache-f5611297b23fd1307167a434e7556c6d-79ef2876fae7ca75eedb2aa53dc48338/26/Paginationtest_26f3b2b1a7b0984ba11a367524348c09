f661e84c5f691d1612ce512b48bff2df
"use strict";

// 模拟Button组件
_getJestObj().mock('../../../components/ui/button', () => {
  const MockButton = ({
    children,
    onClick,
    disabled,
    className,
    ...props
  }) => {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
      onClick: onClick,
      disabled: disabled,
      className: className,
      "data-testid": "pagination-button",
      ...props,
      children: children
    });
  };
  return {
    Button: MockButton
  };
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _react2 = require("@testing-library/react");
var _pagination = require("../../../components/ui/pagination");
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  const {
    jest
  } = require("@jest/globals");
  _getJestObj = () => jest;
  return jest;
}
describe('Pagination Component', () => {
  const mockPaginationInfo = {
    currentPage: 1,
    totalPages: 10,
    totalItems: 100,
    itemsPerPage: 10,
    hasNextPage: true,
    hasPreviousPage: false
  };
  const mockOnPageChange = jest.fn();
  const mockOnItemsPerPageChange = jest.fn();
  beforeEach(() => {
    jest.clearAllMocks();
  });
  describe('Basic Rendering', () => {
    it('renders pagination component', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange
      }));
      expect(_react2.screen.getByText('共 100 条记录')).toBeInTheDocument();
      expect(_react2.screen.getByText('第 1 页，共 10 页')).toBeInTheDocument();
    });
    it('renders with custom className', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange,
        className: "custom-class"
      }));
      const pagination = _react2.screen.getByText('共 100 条记录').closest('div')?.parentElement?.parentElement;
      expect(pagination).toHaveClass('custom-class');
    });
  });
  describe('Page Navigation', () => {
    it('renders previous and next buttons', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange
      }));
      expect(_react2.screen.getByText('上一页')).toBeInTheDocument();
      expect(_react2.screen.getByText('下一页')).toBeInTheDocument();
    });
    it('disables previous button on first page', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange
      }));
      const prevButton = _react2.screen.getByText('上一页');
      expect(prevButton).toBeDisabled();
    });
    it('enables next button when hasNextPage is true', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange
      }));
      const nextButton = _react2.screen.getByText('下一页');
      expect(nextButton).not.toBeDisabled();
    });
    it('calls onPageChange when next button is clicked', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange
      }));
      const nextButton = _react2.screen.getByText('下一页');
      _react2.fireEvent.click(nextButton);
      expect(mockOnPageChange).toHaveBeenCalledWith(2);
    });
    it('calls onPageChange when previous button is clicked', () => {
      const infoWithPrevious = {
        ...mockPaginationInfo,
        currentPage: 2,
        hasPreviousPage: true
      };
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: infoWithPrevious,
        onPageChange: mockOnPageChange
      }));
      const prevButton = _react2.screen.getByText('上一页');
      _react2.fireEvent.click(prevButton);
      expect(mockOnPageChange).toHaveBeenCalledWith(1);
    });
  });
  describe('Page Numbers', () => {
    it('renders page numbers for small total pages', () => {
      const smallPaginationInfo = {
        ...mockPaginationInfo,
        totalPages: 5
      };
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: smallPaginationInfo,
        onPageChange: mockOnPageChange
      }));
      expect(_react2.screen.getByText('1')).toBeInTheDocument();
      expect(_react2.screen.getByText('2')).toBeInTheDocument();
      expect(_react2.screen.getByText('3')).toBeInTheDocument();
      expect(_react2.screen.getByText('4')).toBeInTheDocument();
      expect(_react2.screen.getByText('5')).toBeInTheDocument();
    });
    it('renders ellipsis for large total pages', () => {
      const largePaginationInfo = {
        ...mockPaginationInfo,
        totalPages: 20,
        currentPage: 10
      };
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: largePaginationInfo,
        onPageChange: mockOnPageChange
      }));
      expect(_react2.screen.getByText('1')).toBeInTheDocument();
      expect(_react2.screen.getAllByText('...')).toHaveLength(2);
      expect(_react2.screen.getByText('9')).toBeInTheDocument();
      expect(_react2.screen.getByText('10')).toBeInTheDocument();
      expect(_react2.screen.getByText('11')).toBeInTheDocument();
      expect(_react2.screen.getByText('20')).toBeInTheDocument();
    });
    it('highlights current page', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange
      }));
      const currentPageButton = _react2.screen.getByText('1');
      expect(currentPageButton).toHaveClass('bg-primary');
    });
    it('calls onPageChange when page number is clicked', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange
      }));
      const pageButton = _react2.screen.getByText('2');
      _react2.fireEvent.click(pageButton);
      expect(mockOnPageChange).toHaveBeenCalledWith(2);
    });
  });
  describe('Items Per Page', () => {
    it('renders items per page selector when enabled', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange,
        onItemsPerPageChange: mockOnItemsPerPageChange,
        showItemsPerPage: true
      }));
      expect(_react2.screen.getByText('每页')).toBeInTheDocument();
      expect(_react2.screen.getByDisplayValue('10')).toBeInTheDocument();
      expect(_react2.screen.getByText('条')).toBeInTheDocument();
    });
    it('does not render items per page selector when disabled', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange,
        showItemsPerPage: false
      }));
      expect(_react2.screen.queryByText('每页')).not.toBeInTheDocument();
      expect(_react2.screen.queryByDisplayValue('10')).not.toBeInTheDocument();
    });
    it('calls onItemsPerPageChange when selection changes', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange,
        onItemsPerPageChange: mockOnItemsPerPageChange,
        showItemsPerPage: true
      }));
      const select = _react2.screen.getByDisplayValue('10');
      _react2.fireEvent.change(select, {
        target: {
          value: '20'
        }
      });
      expect(mockOnItemsPerPageChange).toHaveBeenCalledWith(20);
    });
    it('uses custom items per page options', () => {
      const customOptions = [5, 15, 25, 50];
      const customPaginationInfo = {
        ...mockPaginationInfo,
        itemsPerPage: 5
      };
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: customPaginationInfo,
        onPageChange: mockOnPageChange,
        onItemsPerPageChange: mockOnItemsPerPageChange,
        showItemsPerPage: true,
        itemsPerPageOptions: customOptions
      }));

      // 检查所有选项都在下拉菜单中
      customOptions.forEach(option => {
        const optionElement = _react2.screen.getByRole('option', {
          name: option.toString()
        });
        expect(optionElement).toBeInTheDocument();
      });
    });
  });
  describe('Display Options', () => {
    it('hides total count when showTotal is false', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange,
        showTotal: false
      }));
      expect(_react2.screen.queryByText('共 100 条记录')).not.toBeInTheDocument();
    });
    it('hides page info when showPageInfo is false', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange,
        showPageInfo: false
      }));
      expect(_react2.screen.queryByText('第 1 页，共 10 页')).not.toBeInTheDocument();
    });
    it('hides pagination when only one page', () => {
      const singlePageInfo = {
        ...mockPaginationInfo,
        totalPages: 1,
        hasNextPage: false
      };
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: singlePageInfo,
        onPageChange: mockOnPageChange
      }));
      expect(_react2.screen.queryByText('上一页')).not.toBeInTheDocument();
      expect(_react2.screen.queryByText('下一页')).not.toBeInTheDocument();
      expect(_react2.screen.queryByText('1')).not.toBeInTheDocument();
    });
  });
  describe('Edge Cases', () => {
    it('handles zero total items', () => {
      const zeroItemsInfo = {
        ...mockPaginationInfo,
        totalItems: 0,
        totalPages: 0,
        hasNextPage: false
      };
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: zeroItemsInfo,
        onPageChange: mockOnPageChange
      }));
      expect(_react2.screen.getByText('共 0 条记录')).toBeInTheDocument();
      expect(_react2.screen.getByText('第 1 页，共 0 页')).toBeInTheDocument();
    });
    it('handles current page greater than total pages', () => {
      const invalidPageInfo = {
        ...mockPaginationInfo,
        currentPage: 15,
        totalPages: 10
      };
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: invalidPageInfo,
        onPageChange: mockOnPageChange
      }));

      // Should still render without crashing
      expect(_react2.screen.getByText('共 100 条记录')).toBeInTheDocument();
    });
  });
  describe('Responsive Design', () => {
    it('applies responsive classes', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange
      }));
      const container = _react2.screen.getByText('共 100 条记录').closest('div')?.parentElement?.parentElement;
      expect(container).toHaveClass('flex-col', 'sm:flex-row');
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,