d93c98f611c66e54124a25537139a428
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _react2 = require("@testing-library/react");
var _button = require("@/components/ui/button");
var _jsxRuntime = require("react/jsx-runtime");
describe('Button', () => {
  it('renders with default props', () => {
    (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_button.Button, {
      children: "Click me"
    }));
    expect(_react2.screen.getByRole('button', {
      name: /click me/i
    })).toBeInTheDocument();
  });
  it('renders with different variants', () => {
    const {
      rerender
    } = (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_button.Button, {
      variant: "primary",
      children: "Primary"
    }));
    expect(_react2.screen.getByRole('button')).toHaveClass('bg-blue-600');
    rerender(/*#__PURE__*/(0, _jsxRuntime.jsx)(_button.Button, {
      variant: "secondary",
      children: "Secondary"
    }));
    expect(_react2.screen.getByRole('button')).toHaveClass('bg-zinc-700');
    rerender(/*#__PURE__*/(0, _jsxRuntime.jsx)(_button.Button, {
      variant: "outline",
      children: "Outline"
    }));
    expect(_react2.screen.getByRole('button')).toHaveClass('bg-transparent');
    rerender(/*#__PURE__*/(0, _jsxRuntime.jsx)(_button.Button, {
      variant: "ghost",
      children: "Ghost"
    }));
    expect(_react2.screen.getByRole('button')).toHaveClass('bg-transparent');
  });
  it('renders with different sizes', () => {
    const {
      rerender
    } = (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_button.Button, {
      size: "sm",
      children: "Small"
    }));
    const smallButton = _react2.screen.getByRole('button');
    expect(smallButton.className).toContain('px-3 py-1.5');
    rerender(/*#__PURE__*/(0, _jsxRuntime.jsx)(_button.Button, {
      size: "md",
      children: "Medium"
    }));
    const mediumButton = _react2.screen.getByRole('button');
    expect(mediumButton.className).toContain('px-4 py-2');
    rerender(/*#__PURE__*/(0, _jsxRuntime.jsx)(_button.Button, {
      size: "lg",
      children: "Large"
    }));
    const largeButton = _react2.screen.getByRole('button');
    expect(largeButton.className).toContain('px-6 py-3');
  });
  it('shows loading state', () => {
    (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_button.Button, {
      loading: true,
      children: "Loading"
    }));
    expect(_react2.screen.getByRole('button')).toBeDisabled();
    expect(_react2.screen.getByRole('button')).toHaveClass('disabled:opacity-50');
  });
  it('handles click events', () => {
    const handleClick = jest.fn();
    (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_button.Button, {
      onClick: handleClick,
      children: "Click me"
    }));
    _react2.fireEvent.click(_react2.screen.getByRole('button'));
    expect(handleClick).toHaveBeenCalledTimes(1);
  });
  it('does not call onClick when disabled', () => {
    const handleClick = jest.fn();
    (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_button.Button, {
      onClick: handleClick,
      disabled: true,
      children: "Disabled"
    }));
    _react2.fireEvent.click(_react2.screen.getByRole('button'));
    expect(handleClick).not.toHaveBeenCalled();
  });
  it('does not call onClick when loading', () => {
    const handleClick = jest.fn();
    (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_button.Button, {
      onClick: handleClick,
      loading: true,
      children: "Loading"
    }));
    _react2.fireEvent.click(_react2.screen.getByRole('button'));
    expect(handleClick).not.toHaveBeenCalled();
  });
  it('applies custom className', () => {
    (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_button.Button, {
      className: "custom-class",
      children: "Custom"
    }));
    expect(_react2.screen.getByRole('button')).toHaveClass('custom-class');
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,