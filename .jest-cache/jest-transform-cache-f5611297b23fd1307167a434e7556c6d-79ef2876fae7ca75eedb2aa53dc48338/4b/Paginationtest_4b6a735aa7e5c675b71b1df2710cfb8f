321a96eff9ea11273c63277068b58072
"use strict";

// 模拟Button组件
_getJestObj().mock('../../../components/ui/button', () => {
  const MockButton = ({
    children,
    onClick,
    disabled,
    className,
    ...props
  }) => {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
      onClick: onClick,
      disabled: disabled,
      className: className,
      "data-testid": "pagination-button",
      ...props,
      children: children
    });
  };
  return {
    Button: MockButton
  };
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _react2 = require("@testing-library/react");
var _pagination = require("../../../components/ui/pagination");
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  const {
    jest
  } = require("@jest/globals");
  _getJestObj = () => jest;
  return jest;
}
describe('Pagination Component', () => {
  const mockPaginationInfo = {
    currentPage: 1,
    totalPages: 10,
    totalItems: 100,
    itemsPerPage: 10,
    hasNextPage: true,
    hasPreviousPage: false
  };
  const mockOnPageChange = jest.fn();
  const mockOnItemsPerPageChange = jest.fn();
  beforeEach(() => {
    jest.clearAllMocks();
  });
  describe('Basic Rendering', () => {
    it('renders pagination component', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange
      }));
      expect(_react2.screen.getByText('共 100 条记录')).toBeInTheDocument();
      expect(_react2.screen.getByText('第 1 页，共 10 页')).toBeInTheDocument();
    });
    it('renders with custom className', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange,
        className: "custom-class"
      }));
      const pagination = _react2.screen.getByText('共 100 条记录').closest('div')?.parentElement;
      expect(pagination).toHaveClass('custom-class');
    });
  });
  describe('Page Navigation', () => {
    it('renders previous and next buttons', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange
      }));
      expect(_react2.screen.getByText('上一页')).toBeInTheDocument();
      expect(_react2.screen.getByText('下一页')).toBeInTheDocument();
    });
    it('disables previous button on first page', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange
      }));
      const prevButton = _react2.screen.getByText('上一页');
      expect(prevButton).toBeDisabled();
    });
    it('enables next button when hasNextPage is true', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange
      }));
      const nextButton = _react2.screen.getByText('下一页');
      expect(nextButton).not.toBeDisabled();
    });
    it('calls onPageChange when next button is clicked', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange
      }));
      const nextButton = _react2.screen.getByText('下一页');
      _react2.fireEvent.click(nextButton);
      expect(mockOnPageChange).toHaveBeenCalledWith(2);
    });
    it('calls onPageChange when previous button is clicked', () => {
      const infoWithPrevious = {
        ...mockPaginationInfo,
        currentPage: 2,
        hasPreviousPage: true
      };
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: infoWithPrevious,
        onPageChange: mockOnPageChange
      }));
      const prevButton = _react2.screen.getByText('上一页');
      _react2.fireEvent.click(prevButton);
      expect(mockOnPageChange).toHaveBeenCalledWith(1);
    });
  });
  describe('Page Numbers', () => {
    it('renders page numbers for small total pages', () => {
      const smallPaginationInfo = {
        ...mockPaginationInfo,
        totalPages: 5
      };
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: smallPaginationInfo,
        onPageChange: mockOnPageChange
      }));
      expect(_react2.screen.getByText('1')).toBeInTheDocument();
      expect(_react2.screen.getByText('2')).toBeInTheDocument();
      expect(_react2.screen.getByText('3')).toBeInTheDocument();
      expect(_react2.screen.getByText('4')).toBeInTheDocument();
      expect(_react2.screen.getByText('5')).toBeInTheDocument();
    });
    it('renders ellipsis for large total pages', () => {
      const largePaginationInfo = {
        ...mockPaginationInfo,
        totalPages: 20,
        currentPage: 10
      };
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: largePaginationInfo,
        onPageChange: mockOnPageChange
      }));
      expect(_react2.screen.getByText('1')).toBeInTheDocument();
      expect(_react2.screen.getAllByText('...')).toHaveLength(2);
      expect(_react2.screen.getByText('9')).toBeInTheDocument();
      expect(_react2.screen.getByText('10')).toBeInTheDocument();
      expect(_react2.screen.getByText('11')).toBeInTheDocument();
      expect(_react2.screen.getByText('20')).toBeInTheDocument();
    });
    it('highlights current page', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange
      }));
      const currentPageButton = _react2.screen.getByText('1');
      expect(currentPageButton).toHaveClass('bg-primary');
    });
    it('calls onPageChange when page number is clicked', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange
      }));
      const pageButton = _react2.screen.getByText('2');
      _react2.fireEvent.click(pageButton);
      expect(mockOnPageChange).toHaveBeenCalledWith(2);
    });
  });
  describe('Items Per Page', () => {
    it('renders items per page selector when enabled', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange,
        onItemsPerPageChange: mockOnItemsPerPageChange,
        showItemsPerPage: true
      }));
      expect(_react2.screen.getByText('每页')).toBeInTheDocument();
      expect(_react2.screen.getByDisplayValue('10')).toBeInTheDocument();
      expect(_react2.screen.getByText('条')).toBeInTheDocument();
    });
    it('does not render items per page selector when disabled', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange,
        showItemsPerPage: false
      }));
      expect(_react2.screen.queryByText('每页')).not.toBeInTheDocument();
      expect(_react2.screen.queryByDisplayValue('10')).not.toBeInTheDocument();
    });
    it('calls onItemsPerPageChange when selection changes', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange,
        onItemsPerPageChange: mockOnItemsPerPageChange,
        showItemsPerPage: true
      }));
      const select = _react2.screen.getByDisplayValue('10');
      _react2.fireEvent.change(select, {
        target: {
          value: '20'
        }
      });
      expect(mockOnItemsPerPageChange).toHaveBeenCalledWith(20);
    });
    it('uses custom items per page options', () => {
      const customOptions = [5, 15, 25, 50];
      const customPaginationInfo = {
        ...mockPaginationInfo,
        itemsPerPage: 5
      };
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: customPaginationInfo,
        onPageChange: mockOnPageChange,
        onItemsPerPageChange: mockOnItemsPerPageChange,
        showItemsPerPage: true,
        itemsPerPageOptions: customOptions
      }));
      customOptions.forEach(option => {
        expect(_react2.screen.getByDisplayValue(option.toString())).toBeInTheDocument();
      });
    });
  });
  describe('Display Options', () => {
    it('hides total count when showTotal is false', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange,
        showTotal: false
      }));
      expect(_react2.screen.queryByText('共 100 条记录')).not.toBeInTheDocument();
    });
    it('hides page info when showPageInfo is false', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange,
        showPageInfo: false
      }));
      expect(_react2.screen.queryByText('第 1 页，共 10 页')).not.toBeInTheDocument();
    });
    it('hides pagination when only one page', () => {
      const singlePageInfo = {
        ...mockPaginationInfo,
        totalPages: 1,
        hasNextPage: false
      };
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: singlePageInfo,
        onPageChange: mockOnPageChange
      }));
      expect(_react2.screen.queryByText('上一页')).not.toBeInTheDocument();
      expect(_react2.screen.queryByText('下一页')).not.toBeInTheDocument();
      expect(_react2.screen.queryByText('1')).not.toBeInTheDocument();
    });
  });
  describe('Edge Cases', () => {
    it('handles zero total items', () => {
      const zeroItemsInfo = {
        ...mockPaginationInfo,
        totalItems: 0,
        totalPages: 0,
        hasNextPage: false
      };
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: zeroItemsInfo,
        onPageChange: mockOnPageChange
      }));
      expect(_react2.screen.getByText('共 0 条记录')).toBeInTheDocument();
      expect(_react2.screen.getByText('第 1 页，共 0 页')).toBeInTheDocument();
    });
    it('handles current page greater than total pages', () => {
      const invalidPageInfo = {
        ...mockPaginationInfo,
        currentPage: 15,
        totalPages: 10
      };
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: invalidPageInfo,
        onPageChange: mockOnPageChange
      }));

      // Should still render without crashing
      expect(_react2.screen.getByText('共 100 条记录')).toBeInTheDocument();
    });
  });
  describe('Responsive Design', () => {
    it('applies responsive classes', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_pagination.Pagination, {
        info: mockPaginationInfo,
        onPageChange: mockOnPageChange
      }));
      const container = _react2.screen.getByText('共 100 条记录').closest('div')?.parentElement;
      expect(container).toHaveClass('flex-col', 'sm:flex-row');
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJNb2NrQnV0dG9uIiwiY2hpbGRyZW4iLCJvbkNsaWNrIiwiZGlzYWJsZWQiLCJjbGFzc05hbWUiLCJwcm9wcyIsIl9qc3hSdW50aW1lIiwianN4IiwiQnV0dG9uIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfcmVhY3QiLCJfcmVhY3QyIiwiX3BhZ2luYXRpb24iLCJqZXN0IiwiZGVzY3JpYmUiLCJtb2NrUGFnaW5hdGlvbkluZm8iLCJjdXJyZW50UGFnZSIsInRvdGFsUGFnZXMiLCJ0b3RhbEl0ZW1zIiwiaXRlbXNQZXJQYWdlIiwiaGFzTmV4dFBhZ2UiLCJoYXNQcmV2aW91c1BhZ2UiLCJtb2NrT25QYWdlQ2hhbmdlIiwiZm4iLCJtb2NrT25JdGVtc1BlclBhZ2VDaGFuZ2UiLCJiZWZvcmVFYWNoIiwiY2xlYXJBbGxNb2NrcyIsIml0IiwicmVuZGVyIiwiUGFnaW5hdGlvbiIsImluZm8iLCJvblBhZ2VDaGFuZ2UiLCJleHBlY3QiLCJzY3JlZW4iLCJnZXRCeVRleHQiLCJ0b0JlSW5UaGVEb2N1bWVudCIsInBhZ2luYXRpb24iLCJjbG9zZXN0IiwicGFyZW50RWxlbWVudCIsInRvSGF2ZUNsYXNzIiwicHJldkJ1dHRvbiIsInRvQmVEaXNhYmxlZCIsIm5leHRCdXR0b24iLCJub3QiLCJmaXJlRXZlbnQiLCJjbGljayIsInRvSGF2ZUJlZW5DYWxsZWRXaXRoIiwiaW5mb1dpdGhQcmV2aW91cyIsInNtYWxsUGFnaW5hdGlvbkluZm8iLCJsYXJnZVBhZ2luYXRpb25JbmZvIiwiZ2V0QWxsQnlUZXh0IiwidG9IYXZlTGVuZ3RoIiwiY3VycmVudFBhZ2VCdXR0b24iLCJwYWdlQnV0dG9uIiwib25JdGVtc1BlclBhZ2VDaGFuZ2UiLCJzaG93SXRlbXNQZXJQYWdlIiwiZ2V0QnlEaXNwbGF5VmFsdWUiLCJxdWVyeUJ5VGV4dCIsInF1ZXJ5QnlEaXNwbGF5VmFsdWUiLCJzZWxlY3QiLCJjaGFuZ2UiLCJ0YXJnZXQiLCJ2YWx1ZSIsImN1c3RvbU9wdGlvbnMiLCJjdXN0b21QYWdpbmF0aW9uSW5mbyIsIml0ZW1zUGVyUGFnZU9wdGlvbnMiLCJmb3JFYWNoIiwib3B0aW9uIiwidG9TdHJpbmciLCJzaG93VG90YWwiLCJzaG93UGFnZUluZm8iLCJzaW5nbGVQYWdlSW5mbyIsInplcm9JdGVtc0luZm8iLCJpbnZhbGlkUGFnZUluZm8iLCJjb250YWluZXIiXSwic291cmNlcyI6WyJQYWdpbmF0aW9uLnRlc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyByZW5kZXIsIHNjcmVlbiwgZmlyZUV2ZW50IH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdCc7XG5pbXBvcnQgeyBQYWdpbmF0aW9uIH0gZnJvbSAnLi4vLi4vLi4vY29tcG9uZW50cy91aS9wYWdpbmF0aW9uJztcbmltcG9ydCB0eXBlIHsgUGFnaW5hdGlvbkluZm8gfSBmcm9tICcuLi8uLi8uLi9jb21wb25lbnRzL3VpL3BhZ2luYXRpb24nO1xuXG4vLyDmqKHmi59CdXR0b27nu4Tku7Zcbmplc3QubW9jaygnLi4vLi4vLi4vY29tcG9uZW50cy91aS9idXR0b24nLCAoKSA9PiB7XG4gIGNvbnN0IE1vY2tCdXR0b24gPSAoeyBjaGlsZHJlbiwgb25DbGljaywgZGlzYWJsZWQsIGNsYXNzTmFtZSwgLi4ucHJvcHMgfTogYW55KSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxidXR0b25cbiAgICAgICAgb25DbGljaz17b25DbGlja31cbiAgICAgICAgZGlzYWJsZWQ9e2Rpc2FibGVkfVxuICAgICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZX1cbiAgICAgICAgZGF0YS10ZXN0aWQ9XCJwYWdpbmF0aW9uLWJ1dHRvblwiXG4gICAgICAgIHsuLi5wcm9wc31cbiAgICAgID5cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgPC9idXR0b24+XG4gICAgKTtcbiAgfTtcbiAgcmV0dXJuIHsgQnV0dG9uOiBNb2NrQnV0dG9uIH07XG59KTtcblxuZGVzY3JpYmUoJ1BhZ2luYXRpb24gQ29tcG9uZW50JywgKCkgPT4ge1xuICBjb25zdCBtb2NrUGFnaW5hdGlvbkluZm86IFBhZ2luYXRpb25JbmZvID0ge1xuICAgIGN1cnJlbnRQYWdlOiAxLFxuICAgIHRvdGFsUGFnZXM6IDEwLFxuICAgIHRvdGFsSXRlbXM6IDEwMCxcbiAgICBpdGVtc1BlclBhZ2U6IDEwLFxuICAgIGhhc05leHRQYWdlOiB0cnVlLFxuICAgIGhhc1ByZXZpb3VzUGFnZTogZmFsc2VcbiAgfTtcblxuICBjb25zdCBtb2NrT25QYWdlQ2hhbmdlID0gamVzdC5mbigpO1xuICBjb25zdCBtb2NrT25JdGVtc1BlclBhZ2VDaGFuZ2UgPSBqZXN0LmZuKCk7XG5cbiAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgamVzdC5jbGVhckFsbE1vY2tzKCk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCdCYXNpYyBSZW5kZXJpbmcnLCAoKSA9PiB7XG4gICAgaXQoJ3JlbmRlcnMgcGFnaW5hdGlvbiBjb21wb25lbnQnLCAoKSA9PiB7XG4gICAgICByZW5kZXIoXG4gICAgICAgIDxQYWdpbmF0aW9uXG4gICAgICAgICAgaW5mbz17bW9ja1BhZ2luYXRpb25JbmZvfVxuICAgICAgICAgIG9uUGFnZUNoYW5nZT17bW9ja09uUGFnZUNoYW5nZX1cbiAgICAgICAgLz5cbiAgICAgICk7XG4gICAgICBcbiAgICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCflhbEgMTAwIOadoeiusOW9lScpKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ+esrCAxIOmhte+8jOWFsSAxMCDpobUnKSkudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgICB9KTtcblxuICAgIGl0KCdyZW5kZXJzIHdpdGggY3VzdG9tIGNsYXNzTmFtZScsICgpID0+IHtcbiAgICAgIHJlbmRlcihcbiAgICAgICAgPFBhZ2luYXRpb25cbiAgICAgICAgICBpbmZvPXttb2NrUGFnaW5hdGlvbkluZm99XG4gICAgICAgICAgb25QYWdlQ2hhbmdlPXttb2NrT25QYWdlQ2hhbmdlfVxuICAgICAgICAgIGNsYXNzTmFtZT1cImN1c3RvbS1jbGFzc1wiXG4gICAgICAgIC8+XG4gICAgICApO1xuICAgICAgXG4gICAgICBjb25zdCBwYWdpbmF0aW9uID0gc2NyZWVuLmdldEJ5VGV4dCgn5YWxIDEwMCDmnaHorrDlvZUnKS5jbG9zZXN0KCdkaXYnKT8ucGFyZW50RWxlbWVudDtcbiAgICAgIGV4cGVjdChwYWdpbmF0aW9uKS50b0hhdmVDbGFzcygnY3VzdG9tLWNsYXNzJyk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCdQYWdlIE5hdmlnYXRpb24nLCAoKSA9PiB7XG4gICAgaXQoJ3JlbmRlcnMgcHJldmlvdXMgYW5kIG5leHQgYnV0dG9ucycsICgpID0+IHtcbiAgICAgIHJlbmRlcihcbiAgICAgICAgPFBhZ2luYXRpb25cbiAgICAgICAgICBpbmZvPXttb2NrUGFnaW5hdGlvbkluZm99XG4gICAgICAgICAgb25QYWdlQ2hhbmdlPXttb2NrT25QYWdlQ2hhbmdlfVxuICAgICAgICAvPlxuICAgICAgKTtcbiAgICAgIFxuICAgICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ+S4iuS4gOmhtScpKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ+S4i+S4gOmhtScpKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgIH0pO1xuXG4gICAgaXQoJ2Rpc2FibGVzIHByZXZpb3VzIGJ1dHRvbiBvbiBmaXJzdCBwYWdlJywgKCkgPT4ge1xuICAgICAgcmVuZGVyKFxuICAgICAgICA8UGFnaW5hdGlvblxuICAgICAgICAgIGluZm89e21vY2tQYWdpbmF0aW9uSW5mb31cbiAgICAgICAgICBvblBhZ2VDaGFuZ2U9e21vY2tPblBhZ2VDaGFuZ2V9XG4gICAgICAgIC8+XG4gICAgICApO1xuICAgICAgXG4gICAgICBjb25zdCBwcmV2QnV0dG9uID0gc2NyZWVuLmdldEJ5VGV4dCgn5LiK5LiA6aG1Jyk7XG4gICAgICBleHBlY3QocHJldkJ1dHRvbikudG9CZURpc2FibGVkKCk7XG4gICAgfSk7XG5cbiAgICBpdCgnZW5hYmxlcyBuZXh0IGJ1dHRvbiB3aGVuIGhhc05leHRQYWdlIGlzIHRydWUnLCAoKSA9PiB7XG4gICAgICByZW5kZXIoXG4gICAgICAgIDxQYWdpbmF0aW9uXG4gICAgICAgICAgaW5mbz17bW9ja1BhZ2luYXRpb25JbmZvfVxuICAgICAgICAgIG9uUGFnZUNoYW5nZT17bW9ja09uUGFnZUNoYW5nZX1cbiAgICAgICAgLz5cbiAgICAgICk7XG4gICAgICBcbiAgICAgIGNvbnN0IG5leHRCdXR0b24gPSBzY3JlZW4uZ2V0QnlUZXh0KCfkuIvkuIDpobUnKTtcbiAgICAgIGV4cGVjdChuZXh0QnV0dG9uKS5ub3QudG9CZURpc2FibGVkKCk7XG4gICAgfSk7XG5cbiAgICBpdCgnY2FsbHMgb25QYWdlQ2hhbmdlIHdoZW4gbmV4dCBidXR0b24gaXMgY2xpY2tlZCcsICgpID0+IHtcbiAgICAgIHJlbmRlcihcbiAgICAgICAgPFBhZ2luYXRpb25cbiAgICAgICAgICBpbmZvPXttb2NrUGFnaW5hdGlvbkluZm99XG4gICAgICAgICAgb25QYWdlQ2hhbmdlPXttb2NrT25QYWdlQ2hhbmdlfVxuICAgICAgICAvPlxuICAgICAgKTtcbiAgICAgIFxuICAgICAgY29uc3QgbmV4dEJ1dHRvbiA9IHNjcmVlbi5nZXRCeVRleHQoJ+S4i+S4gOmhtScpO1xuICAgICAgZmlyZUV2ZW50LmNsaWNrKG5leHRCdXR0b24pO1xuICAgICAgXG4gICAgICBleHBlY3QobW9ja09uUGFnZUNoYW5nZSkudG9IYXZlQmVlbkNhbGxlZFdpdGgoMik7XG4gICAgfSk7XG5cbiAgICBpdCgnY2FsbHMgb25QYWdlQ2hhbmdlIHdoZW4gcHJldmlvdXMgYnV0dG9uIGlzIGNsaWNrZWQnLCAoKSA9PiB7XG4gICAgICBjb25zdCBpbmZvV2l0aFByZXZpb3VzID0ge1xuICAgICAgICAuLi5tb2NrUGFnaW5hdGlvbkluZm8sXG4gICAgICAgIGN1cnJlbnRQYWdlOiAyLFxuICAgICAgICBoYXNQcmV2aW91c1BhZ2U6IHRydWVcbiAgICAgIH07XG4gICAgICBcbiAgICAgIHJlbmRlcihcbiAgICAgICAgPFBhZ2luYXRpb25cbiAgICAgICAgICBpbmZvPXtpbmZvV2l0aFByZXZpb3VzfVxuICAgICAgICAgIG9uUGFnZUNoYW5nZT17bW9ja09uUGFnZUNoYW5nZX1cbiAgICAgICAgLz5cbiAgICAgICk7XG4gICAgICBcbiAgICAgIGNvbnN0IHByZXZCdXR0b24gPSBzY3JlZW4uZ2V0QnlUZXh0KCfkuIrkuIDpobUnKTtcbiAgICAgIGZpcmVFdmVudC5jbGljayhwcmV2QnV0dG9uKTtcbiAgICAgIFxuICAgICAgZXhwZWN0KG1vY2tPblBhZ2VDaGFuZ2UpLnRvSGF2ZUJlZW5DYWxsZWRXaXRoKDEpO1xuICAgIH0pO1xuICB9KTtcblxuICBkZXNjcmliZSgnUGFnZSBOdW1iZXJzJywgKCkgPT4ge1xuICAgIGl0KCdyZW5kZXJzIHBhZ2UgbnVtYmVycyBmb3Igc21hbGwgdG90YWwgcGFnZXMnLCAoKSA9PiB7XG4gICAgICBjb25zdCBzbWFsbFBhZ2luYXRpb25JbmZvID0ge1xuICAgICAgICAuLi5tb2NrUGFnaW5hdGlvbkluZm8sXG4gICAgICAgIHRvdGFsUGFnZXM6IDVcbiAgICAgIH07XG4gICAgICBcbiAgICAgIHJlbmRlcihcbiAgICAgICAgPFBhZ2luYXRpb25cbiAgICAgICAgICBpbmZvPXtzbWFsbFBhZ2luYXRpb25JbmZvfVxuICAgICAgICAgIG9uUGFnZUNoYW5nZT17bW9ja09uUGFnZUNoYW5nZX1cbiAgICAgICAgLz5cbiAgICAgICk7XG4gICAgICBcbiAgICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCcxJykpLnRvQmVJblRoZURvY3VtZW50KCk7XG4gICAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnMicpKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJzMnKSkudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCc0JykpLnRvQmVJblRoZURvY3VtZW50KCk7XG4gICAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnNScpKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3JlbmRlcnMgZWxsaXBzaXMgZm9yIGxhcmdlIHRvdGFsIHBhZ2VzJywgKCkgPT4ge1xuICAgICAgY29uc3QgbGFyZ2VQYWdpbmF0aW9uSW5mbyA9IHtcbiAgICAgICAgLi4ubW9ja1BhZ2luYXRpb25JbmZvLFxuICAgICAgICB0b3RhbFBhZ2VzOiAyMCxcbiAgICAgICAgY3VycmVudFBhZ2U6IDEwXG4gICAgICB9O1xuICAgICAgXG4gICAgICByZW5kZXIoXG4gICAgICAgIDxQYWdpbmF0aW9uXG4gICAgICAgICAgaW5mbz17bGFyZ2VQYWdpbmF0aW9uSW5mb31cbiAgICAgICAgICBvblBhZ2VDaGFuZ2U9e21vY2tPblBhZ2VDaGFuZ2V9XG4gICAgICAgIC8+XG4gICAgICApO1xuICAgICAgXG4gICAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnMScpKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgICAgZXhwZWN0KHNjcmVlbi5nZXRBbGxCeVRleHQoJy4uLicpKS50b0hhdmVMZW5ndGgoMik7XG4gICAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnOScpKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJzEwJykpLnRvQmVJblRoZURvY3VtZW50KCk7XG4gICAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnMTEnKSkudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCcyMCcpKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgIH0pO1xuXG4gICAgaXQoJ2hpZ2hsaWdodHMgY3VycmVudCBwYWdlJywgKCkgPT4ge1xuICAgICAgcmVuZGVyKFxuICAgICAgICA8UGFnaW5hdGlvblxuICAgICAgICAgIGluZm89e21vY2tQYWdpbmF0aW9uSW5mb31cbiAgICAgICAgICBvblBhZ2VDaGFuZ2U9e21vY2tPblBhZ2VDaGFuZ2V9XG4gICAgICAgIC8+XG4gICAgICApO1xuICAgICAgXG4gICAgICBjb25zdCBjdXJyZW50UGFnZUJ1dHRvbiA9IHNjcmVlbi5nZXRCeVRleHQoJzEnKTtcbiAgICAgIGV4cGVjdChjdXJyZW50UGFnZUJ1dHRvbikudG9IYXZlQ2xhc3MoJ2JnLXByaW1hcnknKTtcbiAgICB9KTtcblxuICAgIGl0KCdjYWxscyBvblBhZ2VDaGFuZ2Ugd2hlbiBwYWdlIG51bWJlciBpcyBjbGlja2VkJywgKCkgPT4ge1xuICAgICAgcmVuZGVyKFxuICAgICAgICA8UGFnaW5hdGlvblxuICAgICAgICAgIGluZm89e21vY2tQYWdpbmF0aW9uSW5mb31cbiAgICAgICAgICBvblBhZ2VDaGFuZ2U9e21vY2tPblBhZ2VDaGFuZ2V9XG4gICAgICAgIC8+XG4gICAgICApO1xuICAgICAgXG4gICAgICBjb25zdCBwYWdlQnV0dG9uID0gc2NyZWVuLmdldEJ5VGV4dCgnMicpO1xuICAgICAgZmlyZUV2ZW50LmNsaWNrKHBhZ2VCdXR0b24pO1xuICAgICAgXG4gICAgICBleHBlY3QobW9ja09uUGFnZUNoYW5nZSkudG9IYXZlQmVlbkNhbGxlZFdpdGgoMik7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCdJdGVtcyBQZXIgUGFnZScsICgpID0+IHtcbiAgICBpdCgncmVuZGVycyBpdGVtcyBwZXIgcGFnZSBzZWxlY3RvciB3aGVuIGVuYWJsZWQnLCAoKSA9PiB7XG4gICAgICByZW5kZXIoXG4gICAgICAgIDxQYWdpbmF0aW9uXG4gICAgICAgICAgaW5mbz17bW9ja1BhZ2luYXRpb25JbmZvfVxuICAgICAgICAgIG9uUGFnZUNoYW5nZT17bW9ja09uUGFnZUNoYW5nZX1cbiAgICAgICAgICBvbkl0ZW1zUGVyUGFnZUNoYW5nZT17bW9ja09uSXRlbXNQZXJQYWdlQ2hhbmdlfVxuICAgICAgICAgIHNob3dJdGVtc1BlclBhZ2U9e3RydWV9XG4gICAgICAgIC8+XG4gICAgICApO1xuICAgICAgXG4gICAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgn5q+P6aG1JykpLnRvQmVJblRoZURvY3VtZW50KCk7XG4gICAgICBleHBlY3Qoc2NyZWVuLmdldEJ5RGlzcGxheVZhbHVlKCcxMCcpKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ+adoScpKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgIH0pO1xuXG4gICAgaXQoJ2RvZXMgbm90IHJlbmRlciBpdGVtcyBwZXIgcGFnZSBzZWxlY3RvciB3aGVuIGRpc2FibGVkJywgKCkgPT4ge1xuICAgICAgcmVuZGVyKFxuICAgICAgICA8UGFnaW5hdGlvblxuICAgICAgICAgIGluZm89e21vY2tQYWdpbmF0aW9uSW5mb31cbiAgICAgICAgICBvblBhZ2VDaGFuZ2U9e21vY2tPblBhZ2VDaGFuZ2V9XG4gICAgICAgICAgc2hvd0l0ZW1zUGVyUGFnZT17ZmFsc2V9XG4gICAgICAgIC8+XG4gICAgICApO1xuICAgICAgXG4gICAgICBleHBlY3Qoc2NyZWVuLnF1ZXJ5QnlUZXh0KCfmr4/pobUnKSkubm90LnRvQmVJblRoZURvY3VtZW50KCk7XG4gICAgICBleHBlY3Qoc2NyZWVuLnF1ZXJ5QnlEaXNwbGF5VmFsdWUoJzEwJykpLm5vdC50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgIH0pO1xuXG4gICAgaXQoJ2NhbGxzIG9uSXRlbXNQZXJQYWdlQ2hhbmdlIHdoZW4gc2VsZWN0aW9uIGNoYW5nZXMnLCAoKSA9PiB7XG4gICAgICByZW5kZXIoXG4gICAgICAgIDxQYWdpbmF0aW9uXG4gICAgICAgICAgaW5mbz17bW9ja1BhZ2luYXRpb25JbmZvfVxuICAgICAgICAgIG9uUGFnZUNoYW5nZT17bW9ja09uUGFnZUNoYW5nZX1cbiAgICAgICAgICBvbkl0ZW1zUGVyUGFnZUNoYW5nZT17bW9ja09uSXRlbXNQZXJQYWdlQ2hhbmdlfVxuICAgICAgICAgIHNob3dJdGVtc1BlclBhZ2U9e3RydWV9XG4gICAgICAgIC8+XG4gICAgICApO1xuICAgICAgXG4gICAgICBjb25zdCBzZWxlY3QgPSBzY3JlZW4uZ2V0QnlEaXNwbGF5VmFsdWUoJzEwJyk7XG4gICAgICBmaXJlRXZlbnQuY2hhbmdlKHNlbGVjdCwgeyB0YXJnZXQ6IHsgdmFsdWU6ICcyMCcgfSB9KTtcbiAgICAgIFxuICAgICAgZXhwZWN0KG1vY2tPbkl0ZW1zUGVyUGFnZUNoYW5nZSkudG9IYXZlQmVlbkNhbGxlZFdpdGgoMjApO1xuICAgIH0pO1xuXG4gICAgaXQoJ3VzZXMgY3VzdG9tIGl0ZW1zIHBlciBwYWdlIG9wdGlvbnMnLCAoKSA9PiB7XG4gICAgICBjb25zdCBjdXN0b21PcHRpb25zID0gWzUsIDE1LCAyNSwgNTBdO1xuICAgICAgY29uc3QgY3VzdG9tUGFnaW5hdGlvbkluZm8gPSB7XG4gICAgICAgIC4uLm1vY2tQYWdpbmF0aW9uSW5mbyxcbiAgICAgICAgaXRlbXNQZXJQYWdlOiA1XG4gICAgICB9O1xuICAgICAgXG4gICAgICByZW5kZXIoXG4gICAgICAgIDxQYWdpbmF0aW9uXG4gICAgICAgICAgaW5mbz17Y3VzdG9tUGFnaW5hdGlvbkluZm99XG4gICAgICAgICAgb25QYWdlQ2hhbmdlPXttb2NrT25QYWdlQ2hhbmdlfVxuICAgICAgICAgIG9uSXRlbXNQZXJQYWdlQ2hhbmdlPXttb2NrT25JdGVtc1BlclBhZ2VDaGFuZ2V9XG4gICAgICAgICAgc2hvd0l0ZW1zUGVyUGFnZT17dHJ1ZX1cbiAgICAgICAgICBpdGVtc1BlclBhZ2VPcHRpb25zPXtjdXN0b21PcHRpb25zfVxuICAgICAgICAvPlxuICAgICAgKTtcbiAgICAgIFxuICAgICAgY3VzdG9tT3B0aW9ucy5mb3JFYWNoKG9wdGlvbiA9PiB7XG4gICAgICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlEaXNwbGF5VmFsdWUob3B0aW9uLnRvU3RyaW5nKCkpKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCdEaXNwbGF5IE9wdGlvbnMnLCAoKSA9PiB7XG4gICAgaXQoJ2hpZGVzIHRvdGFsIGNvdW50IHdoZW4gc2hvd1RvdGFsIGlzIGZhbHNlJywgKCkgPT4ge1xuICAgICAgcmVuZGVyKFxuICAgICAgICA8UGFnaW5hdGlvblxuICAgICAgICAgIGluZm89e21vY2tQYWdpbmF0aW9uSW5mb31cbiAgICAgICAgICBvblBhZ2VDaGFuZ2U9e21vY2tPblBhZ2VDaGFuZ2V9XG4gICAgICAgICAgc2hvd1RvdGFsPXtmYWxzZX1cbiAgICAgICAgLz5cbiAgICAgICk7XG4gICAgICBcbiAgICAgIGV4cGVjdChzY3JlZW4ucXVlcnlCeVRleHQoJ+WFsSAxMDAg5p2h6K6w5b2VJykpLm5vdC50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgIH0pO1xuXG4gICAgaXQoJ2hpZGVzIHBhZ2UgaW5mbyB3aGVuIHNob3dQYWdlSW5mbyBpcyBmYWxzZScsICgpID0+IHtcbiAgICAgIHJlbmRlcihcbiAgICAgICAgPFBhZ2luYXRpb25cbiAgICAgICAgICBpbmZvPXttb2NrUGFnaW5hdGlvbkluZm99XG4gICAgICAgICAgb25QYWdlQ2hhbmdlPXttb2NrT25QYWdlQ2hhbmdlfVxuICAgICAgICAgIHNob3dQYWdlSW5mbz17ZmFsc2V9XG4gICAgICAgIC8+XG4gICAgICApO1xuICAgICAgXG4gICAgICBleHBlY3Qoc2NyZWVuLnF1ZXJ5QnlUZXh0KCfnrKwgMSDpobXvvIzlhbEgMTAg6aG1JykpLm5vdC50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgIH0pO1xuXG4gICAgaXQoJ2hpZGVzIHBhZ2luYXRpb24gd2hlbiBvbmx5IG9uZSBwYWdlJywgKCkgPT4ge1xuICAgICAgY29uc3Qgc2luZ2xlUGFnZUluZm8gPSB7XG4gICAgICAgIC4uLm1vY2tQYWdpbmF0aW9uSW5mbyxcbiAgICAgICAgdG90YWxQYWdlczogMSxcbiAgICAgICAgaGFzTmV4dFBhZ2U6IGZhbHNlXG4gICAgICB9O1xuICAgICAgXG4gICAgICByZW5kZXIoXG4gICAgICAgIDxQYWdpbmF0aW9uXG4gICAgICAgICAgaW5mbz17c2luZ2xlUGFnZUluZm99XG4gICAgICAgICAgb25QYWdlQ2hhbmdlPXttb2NrT25QYWdlQ2hhbmdlfVxuICAgICAgICAvPlxuICAgICAgKTtcbiAgICAgIFxuICAgICAgZXhwZWN0KHNjcmVlbi5xdWVyeUJ5VGV4dCgn5LiK5LiA6aG1JykpLm5vdC50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgICAgZXhwZWN0KHNjcmVlbi5xdWVyeUJ5VGV4dCgn5LiL5LiA6aG1JykpLm5vdC50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgICAgZXhwZWN0KHNjcmVlbi5xdWVyeUJ5VGV4dCgnMScpKS5ub3QudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgZGVzY3JpYmUoJ0VkZ2UgQ2FzZXMnLCAoKSA9PiB7XG4gICAgaXQoJ2hhbmRsZXMgemVybyB0b3RhbCBpdGVtcycsICgpID0+IHtcbiAgICAgIGNvbnN0IHplcm9JdGVtc0luZm8gPSB7XG4gICAgICAgIC4uLm1vY2tQYWdpbmF0aW9uSW5mbyxcbiAgICAgICAgdG90YWxJdGVtczogMCxcbiAgICAgICAgdG90YWxQYWdlczogMCxcbiAgICAgICAgaGFzTmV4dFBhZ2U6IGZhbHNlXG4gICAgICB9O1xuICAgICAgXG4gICAgICByZW5kZXIoXG4gICAgICAgIDxQYWdpbmF0aW9uXG4gICAgICAgICAgaW5mbz17emVyb0l0ZW1zSW5mb31cbiAgICAgICAgICBvblBhZ2VDaGFuZ2U9e21vY2tPblBhZ2VDaGFuZ2V9XG4gICAgICAgIC8+XG4gICAgICApO1xuICAgICAgXG4gICAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgn5YWxIDAg5p2h6K6w5b2VJykpLnRvQmVJblRoZURvY3VtZW50KCk7XG4gICAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgn56ysIDEg6aG177yM5YWxIDAg6aG1JykpLnRvQmVJblRoZURvY3VtZW50KCk7XG4gICAgfSk7XG5cbiAgICBpdCgnaGFuZGxlcyBjdXJyZW50IHBhZ2UgZ3JlYXRlciB0aGFuIHRvdGFsIHBhZ2VzJywgKCkgPT4ge1xuICAgICAgY29uc3QgaW52YWxpZFBhZ2VJbmZvID0ge1xuICAgICAgICAuLi5tb2NrUGFnaW5hdGlvbkluZm8sXG4gICAgICAgIGN1cnJlbnRQYWdlOiAxNSxcbiAgICAgICAgdG90YWxQYWdlczogMTBcbiAgICAgIH07XG4gICAgICBcbiAgICAgIHJlbmRlcihcbiAgICAgICAgPFBhZ2luYXRpb25cbiAgICAgICAgICBpbmZvPXtpbnZhbGlkUGFnZUluZm99XG4gICAgICAgICAgb25QYWdlQ2hhbmdlPXttb2NrT25QYWdlQ2hhbmdlfVxuICAgICAgICAvPlxuICAgICAgKTtcbiAgICAgIFxuICAgICAgLy8gU2hvdWxkIHN0aWxsIHJlbmRlciB3aXRob3V0IGNyYXNoaW5nXG4gICAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgn5YWxIDEwMCDmnaHorrDlvZUnKSkudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgZGVzY3JpYmUoJ1Jlc3BvbnNpdmUgRGVzaWduJywgKCkgPT4ge1xuICAgIGl0KCdhcHBsaWVzIHJlc3BvbnNpdmUgY2xhc3NlcycsICgpID0+IHtcbiAgICAgIHJlbmRlcihcbiAgICAgICAgPFBhZ2luYXRpb25cbiAgICAgICAgICBpbmZvPXttb2NrUGFnaW5hdGlvbkluZm99XG4gICAgICAgICAgb25QYWdlQ2hhbmdlPXttb2NrT25QYWdlQ2hhbmdlfVxuICAgICAgICAvPlxuICAgICAgKTtcbiAgICAgIFxuICAgICAgY29uc3QgY29udGFpbmVyID0gc2NyZWVuLmdldEJ5VGV4dCgn5YWxIDEwMCDmnaHorrDlvZUnKS5jbG9zZXN0KCdkaXYnKT8ucGFyZW50RWxlbWVudDtcbiAgICAgIGV4cGVjdChjb250YWluZXIpLnRvSGF2ZUNsYXNzKCdmbGV4LWNvbCcsICdzbTpmbGV4LXJvdycpO1xuICAgIH0pO1xuICB9KTtcbn0pO1xuIl0sIm1hcHBpbmdzIjoiOztBQUtBO0FBQ0FBLFdBQUEsR0FBS0MsSUFBSSxDQUFDLCtCQUErQixFQUFFLE1BQU07RUFDL0MsTUFBTUMsVUFBVSxHQUFHQSxDQUFDO0lBQUVDLFFBQVE7SUFBRUMsT0FBTztJQUFFQyxRQUFRO0lBQUVDLFNBQVM7SUFBRSxHQUFHQztFQUFXLENBQUMsS0FBSztJQUNoRixvQkFDRSxJQUFBQyxXQUFBLENBQUFDLEdBQUE7TUFDRUwsT0FBTyxFQUFFQSxPQUFRO01BQ2pCQyxRQUFRLEVBQUVBLFFBQVM7TUFDbkJDLFNBQVMsRUFBRUEsU0FBVTtNQUNyQixlQUFZLG1CQUFtQjtNQUFBLEdBQzNCQyxLQUFLO01BQUFKLFFBQUEsRUFFUkE7SUFBUSxDQUNILENBQUM7RUFFYixDQUFDO0VBQ0QsT0FBTztJQUFFTyxNQUFNLEVBQUVSO0VBQVcsQ0FBQztBQUMvQixDQUFDLENBQUM7QUFBQyxJQUFBUyxzQkFBQSxHQUFBQyxPQUFBO0FBckJILElBQUFDLE1BQUEsR0FBQUYsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFFLE9BQUEsR0FBQUYsT0FBQTtBQUNBLElBQUFHLFdBQUEsR0FBQUgsT0FBQTtBQUErRCxJQUFBSixXQUFBLEdBQUFJLE9BQUE7QUFBQSxTQUFBWixZQUFBO0VBQUE7SUFBQWdCO0VBQUEsSUFBQUosT0FBQTtFQUFBWixXQUFBLEdBQUFBLENBQUEsS0FBQWdCLElBQUE7RUFBQSxPQUFBQSxJQUFBO0FBQUE7QUFxQi9EQyxRQUFRLENBQUMsc0JBQXNCLEVBQUUsTUFBTTtFQUNyQyxNQUFNQyxrQkFBa0MsR0FBRztJQUN6Q0MsV0FBVyxFQUFFLENBQUM7SUFDZEMsVUFBVSxFQUFFLEVBQUU7SUFDZEMsVUFBVSxFQUFFLEdBQUc7SUFDZkMsWUFBWSxFQUFFLEVBQUU7SUFDaEJDLFdBQVcsRUFBRSxJQUFJO0lBQ2pCQyxlQUFlLEVBQUU7RUFDbkIsQ0FBQztFQUVELE1BQU1DLGdCQUFnQixHQUFHVCxJQUFJLENBQUNVLEVBQUUsQ0FBQyxDQUFDO0VBQ2xDLE1BQU1DLHdCQUF3QixHQUFHWCxJQUFJLENBQUNVLEVBQUUsQ0FBQyxDQUFDO0VBRTFDRSxVQUFVLENBQUMsTUFBTTtJQUNmWixJQUFJLENBQUNhLGFBQWEsQ0FBQyxDQUFDO0VBQ3RCLENBQUMsQ0FBQztFQUVGWixRQUFRLENBQUMsaUJBQWlCLEVBQUUsTUFBTTtJQUNoQ2EsRUFBRSxDQUFDLDhCQUE4QixFQUFFLE1BQU07TUFDdkMsSUFBQUMsY0FBTSxlQUNKLElBQUF2QixXQUFBLENBQUFDLEdBQUEsRUFBQ00sV0FBQSxDQUFBaUIsVUFBVTtRQUNUQyxJQUFJLEVBQUVmLGtCQUFtQjtRQUN6QmdCLFlBQVksRUFBRVQ7TUFBaUIsQ0FDaEMsQ0FDSCxDQUFDO01BRURVLE1BQU0sQ0FBQ0MsY0FBTSxDQUFDQyxTQUFTLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQ0MsaUJBQWlCLENBQUMsQ0FBQztNQUN6REgsTUFBTSxDQUFDQyxjQUFNLENBQUNDLFNBQVMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDQyxpQkFBaUIsQ0FBQyxDQUFDO0lBQzlELENBQUMsQ0FBQztJQUVGUixFQUFFLENBQUMsK0JBQStCLEVBQUUsTUFBTTtNQUN4QyxJQUFBQyxjQUFNLGVBQ0osSUFBQXZCLFdBQUEsQ0FBQUMsR0FBQSxFQUFDTSxXQUFBLENBQUFpQixVQUFVO1FBQ1RDLElBQUksRUFBRWYsa0JBQW1CO1FBQ3pCZ0IsWUFBWSxFQUFFVCxnQkFBaUI7UUFDL0JuQixTQUFTLEVBQUM7TUFBYyxDQUN6QixDQUNILENBQUM7TUFFRCxNQUFNaUMsVUFBVSxHQUFHSCxjQUFNLENBQUNDLFNBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQ0csT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFQyxhQUFhO01BQzlFTixNQUFNLENBQUNJLFVBQVUsQ0FBQyxDQUFDRyxXQUFXLENBQUMsY0FBYyxDQUFDO0lBQ2hELENBQUMsQ0FBQztFQUNKLENBQUMsQ0FBQztFQUVGekIsUUFBUSxDQUFDLGlCQUFpQixFQUFFLE1BQU07SUFDaENhLEVBQUUsQ0FBQyxtQ0FBbUMsRUFBRSxNQUFNO01BQzVDLElBQUFDLGNBQU0sZUFDSixJQUFBdkIsV0FBQSxDQUFBQyxHQUFBLEVBQUNNLFdBQUEsQ0FBQWlCLFVBQVU7UUFDVEMsSUFBSSxFQUFFZixrQkFBbUI7UUFDekJnQixZQUFZLEVBQUVUO01BQWlCLENBQ2hDLENBQ0gsQ0FBQztNQUVEVSxNQUFNLENBQUNDLGNBQU0sQ0FBQ0MsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUNDLGlCQUFpQixDQUFDLENBQUM7TUFDbkRILE1BQU0sQ0FBQ0MsY0FBTSxDQUFDQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQ0MsaUJBQWlCLENBQUMsQ0FBQztJQUNyRCxDQUFDLENBQUM7SUFFRlIsRUFBRSxDQUFDLHdDQUF3QyxFQUFFLE1BQU07TUFDakQsSUFBQUMsY0FBTSxlQUNKLElBQUF2QixXQUFBLENBQUFDLEdBQUEsRUFBQ00sV0FBQSxDQUFBaUIsVUFBVTtRQUNUQyxJQUFJLEVBQUVmLGtCQUFtQjtRQUN6QmdCLFlBQVksRUFBRVQ7TUFBaUIsQ0FDaEMsQ0FDSCxDQUFDO01BRUQsTUFBTWtCLFVBQVUsR0FBR1AsY0FBTSxDQUFDQyxTQUFTLENBQUMsS0FBSyxDQUFDO01BQzFDRixNQUFNLENBQUNRLFVBQVUsQ0FBQyxDQUFDQyxZQUFZLENBQUMsQ0FBQztJQUNuQyxDQUFDLENBQUM7SUFFRmQsRUFBRSxDQUFDLDhDQUE4QyxFQUFFLE1BQU07TUFDdkQsSUFBQUMsY0FBTSxlQUNKLElBQUF2QixXQUFBLENBQUFDLEdBQUEsRUFBQ00sV0FBQSxDQUFBaUIsVUFBVTtRQUNUQyxJQUFJLEVBQUVmLGtCQUFtQjtRQUN6QmdCLFlBQVksRUFBRVQ7TUFBaUIsQ0FDaEMsQ0FDSCxDQUFDO01BRUQsTUFBTW9CLFVBQVUsR0FBR1QsY0FBTSxDQUFDQyxTQUFTLENBQUMsS0FBSyxDQUFDO01BQzFDRixNQUFNLENBQUNVLFVBQVUsQ0FBQyxDQUFDQyxHQUFHLENBQUNGLFlBQVksQ0FBQyxDQUFDO0lBQ3ZDLENBQUMsQ0FBQztJQUVGZCxFQUFFLENBQUMsZ0RBQWdELEVBQUUsTUFBTTtNQUN6RCxJQUFBQyxjQUFNLGVBQ0osSUFBQXZCLFdBQUEsQ0FBQUMsR0FBQSxFQUFDTSxXQUFBLENBQUFpQixVQUFVO1FBQ1RDLElBQUksRUFBRWYsa0JBQW1CO1FBQ3pCZ0IsWUFBWSxFQUFFVDtNQUFpQixDQUNoQyxDQUNILENBQUM7TUFFRCxNQUFNb0IsVUFBVSxHQUFHVCxjQUFNLENBQUNDLFNBQVMsQ0FBQyxLQUFLLENBQUM7TUFDMUNVLGlCQUFTLENBQUNDLEtBQUssQ0FBQ0gsVUFBVSxDQUFDO01BRTNCVixNQUFNLENBQUNWLGdCQUFnQixDQUFDLENBQUN3QixvQkFBb0IsQ0FBQyxDQUFDLENBQUM7SUFDbEQsQ0FBQyxDQUFDO0lBRUZuQixFQUFFLENBQUMsb0RBQW9ELEVBQUUsTUFBTTtNQUM3RCxNQUFNb0IsZ0JBQWdCLEdBQUc7UUFDdkIsR0FBR2hDLGtCQUFrQjtRQUNyQkMsV0FBVyxFQUFFLENBQUM7UUFDZEssZUFBZSxFQUFFO01BQ25CLENBQUM7TUFFRCxJQUFBTyxjQUFNLGVBQ0osSUFBQXZCLFdBQUEsQ0FBQUMsR0FBQSxFQUFDTSxXQUFBLENBQUFpQixVQUFVO1FBQ1RDLElBQUksRUFBRWlCLGdCQUFpQjtRQUN2QmhCLFlBQVksRUFBRVQ7TUFBaUIsQ0FDaEMsQ0FDSCxDQUFDO01BRUQsTUFBTWtCLFVBQVUsR0FBR1AsY0FBTSxDQUFDQyxTQUFTLENBQUMsS0FBSyxDQUFDO01BQzFDVSxpQkFBUyxDQUFDQyxLQUFLLENBQUNMLFVBQVUsQ0FBQztNQUUzQlIsTUFBTSxDQUFDVixnQkFBZ0IsQ0FBQyxDQUFDd0Isb0JBQW9CLENBQUMsQ0FBQyxDQUFDO0lBQ2xELENBQUMsQ0FBQztFQUNKLENBQUMsQ0FBQztFQUVGaEMsUUFBUSxDQUFDLGNBQWMsRUFBRSxNQUFNO0lBQzdCYSxFQUFFLENBQUMsNENBQTRDLEVBQUUsTUFBTTtNQUNyRCxNQUFNcUIsbUJBQW1CLEdBQUc7UUFDMUIsR0FBR2pDLGtCQUFrQjtRQUNyQkUsVUFBVSxFQUFFO01BQ2QsQ0FBQztNQUVELElBQUFXLGNBQU0sZUFDSixJQUFBdkIsV0FBQSxDQUFBQyxHQUFBLEVBQUNNLFdBQUEsQ0FBQWlCLFVBQVU7UUFDVEMsSUFBSSxFQUFFa0IsbUJBQW9CO1FBQzFCakIsWUFBWSxFQUFFVDtNQUFpQixDQUNoQyxDQUNILENBQUM7TUFFRFUsTUFBTSxDQUFDQyxjQUFNLENBQUNDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDQyxpQkFBaUIsQ0FBQyxDQUFDO01BQ2pESCxNQUFNLENBQUNDLGNBQU0sQ0FBQ0MsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUNDLGlCQUFpQixDQUFDLENBQUM7TUFDakRILE1BQU0sQ0FBQ0MsY0FBTSxDQUFDQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQ0MsaUJBQWlCLENBQUMsQ0FBQztNQUNqREgsTUFBTSxDQUFDQyxjQUFNLENBQUNDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDQyxpQkFBaUIsQ0FBQyxDQUFDO01BQ2pESCxNQUFNLENBQUNDLGNBQU0sQ0FBQ0MsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUNDLGlCQUFpQixDQUFDLENBQUM7SUFDbkQsQ0FBQyxDQUFDO0lBRUZSLEVBQUUsQ0FBQyx3Q0FBd0MsRUFBRSxNQUFNO01BQ2pELE1BQU1zQixtQkFBbUIsR0FBRztRQUMxQixHQUFHbEMsa0JBQWtCO1FBQ3JCRSxVQUFVLEVBQUUsRUFBRTtRQUNkRCxXQUFXLEVBQUU7TUFDZixDQUFDO01BRUQsSUFBQVksY0FBTSxlQUNKLElBQUF2QixXQUFBLENBQUFDLEdBQUEsRUFBQ00sV0FBQSxDQUFBaUIsVUFBVTtRQUNUQyxJQUFJLEVBQUVtQixtQkFBb0I7UUFDMUJsQixZQUFZLEVBQUVUO01BQWlCLENBQ2hDLENBQ0gsQ0FBQztNQUVEVSxNQUFNLENBQUNDLGNBQU0sQ0FBQ0MsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUNDLGlCQUFpQixDQUFDLENBQUM7TUFDakRILE1BQU0sQ0FBQ0MsY0FBTSxDQUFDaUIsWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUNDLFlBQVksQ0FBQyxDQUFDLENBQUM7TUFDbERuQixNQUFNLENBQUNDLGNBQU0sQ0FBQ0MsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUNDLGlCQUFpQixDQUFDLENBQUM7TUFDakRILE1BQU0sQ0FBQ0MsY0FBTSxDQUFDQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQ0MsaUJBQWlCLENBQUMsQ0FBQztNQUNsREgsTUFBTSxDQUFDQyxjQUFNLENBQUNDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDQyxpQkFBaUIsQ0FBQyxDQUFDO01BQ2xESCxNQUFNLENBQUNDLGNBQU0sQ0FBQ0MsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUNDLGlCQUFpQixDQUFDLENBQUM7SUFDcEQsQ0FBQyxDQUFDO0lBRUZSLEVBQUUsQ0FBQyx5QkFBeUIsRUFBRSxNQUFNO01BQ2xDLElBQUFDLGNBQU0sZUFDSixJQUFBdkIsV0FBQSxDQUFBQyxHQUFBLEVBQUNNLFdBQUEsQ0FBQWlCLFVBQVU7UUFDVEMsSUFBSSxFQUFFZixrQkFBbUI7UUFDekJnQixZQUFZLEVBQUVUO01BQWlCLENBQ2hDLENBQ0gsQ0FBQztNQUVELE1BQU04QixpQkFBaUIsR0FBR25CLGNBQU0sQ0FBQ0MsU0FBUyxDQUFDLEdBQUcsQ0FBQztNQUMvQ0YsTUFBTSxDQUFDb0IsaUJBQWlCLENBQUMsQ0FBQ2IsV0FBVyxDQUFDLFlBQVksQ0FBQztJQUNyRCxDQUFDLENBQUM7SUFFRlosRUFBRSxDQUFDLGdEQUFnRCxFQUFFLE1BQU07TUFDekQsSUFBQUMsY0FBTSxlQUNKLElBQUF2QixXQUFBLENBQUFDLEdBQUEsRUFBQ00sV0FBQSxDQUFBaUIsVUFBVTtRQUNUQyxJQUFJLEVBQUVmLGtCQUFtQjtRQUN6QmdCLFlBQVksRUFBRVQ7TUFBaUIsQ0FDaEMsQ0FDSCxDQUFDO01BRUQsTUFBTStCLFVBQVUsR0FBR3BCLGNBQU0sQ0FBQ0MsU0FBUyxDQUFDLEdBQUcsQ0FBQztNQUN4Q1UsaUJBQVMsQ0FBQ0MsS0FBSyxDQUFDUSxVQUFVLENBQUM7TUFFM0JyQixNQUFNLENBQUNWLGdCQUFnQixDQUFDLENBQUN3QixvQkFBb0IsQ0FBQyxDQUFDLENBQUM7SUFDbEQsQ0FBQyxDQUFDO0VBQ0osQ0FBQyxDQUFDO0VBRUZoQyxRQUFRLENBQUMsZ0JBQWdCLEVBQUUsTUFBTTtJQUMvQmEsRUFBRSxDQUFDLDhDQUE4QyxFQUFFLE1BQU07TUFDdkQsSUFBQUMsY0FBTSxlQUNKLElBQUF2QixXQUFBLENBQUFDLEdBQUEsRUFBQ00sV0FBQSxDQUFBaUIsVUFBVTtRQUNUQyxJQUFJLEVBQUVmLGtCQUFtQjtRQUN6QmdCLFlBQVksRUFBRVQsZ0JBQWlCO1FBQy9CZ0Msb0JBQW9CLEVBQUU5Qix3QkFBeUI7UUFDL0MrQixnQkFBZ0IsRUFBRTtNQUFLLENBQ3hCLENBQ0gsQ0FBQztNQUVEdkIsTUFBTSxDQUFDQyxjQUFNLENBQUNDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDQyxpQkFBaUIsQ0FBQyxDQUFDO01BQ2xESCxNQUFNLENBQUNDLGNBQU0sQ0FBQ3VCLGlCQUFpQixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUNyQixpQkFBaUIsQ0FBQyxDQUFDO01BQzFESCxNQUFNLENBQUNDLGNBQU0sQ0FBQ0MsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUNDLGlCQUFpQixDQUFDLENBQUM7SUFDbkQsQ0FBQyxDQUFDO0lBRUZSLEVBQUUsQ0FBQyx1REFBdUQsRUFBRSxNQUFNO01BQ2hFLElBQUFDLGNBQU0sZUFDSixJQUFBdkIsV0FBQSxDQUFBQyxHQUFBLEVBQUNNLFdBQUEsQ0FBQWlCLFVBQVU7UUFDVEMsSUFBSSxFQUFFZixrQkFBbUI7UUFDekJnQixZQUFZLEVBQUVULGdCQUFpQjtRQUMvQmlDLGdCQUFnQixFQUFFO01BQU0sQ0FDekIsQ0FDSCxDQUFDO01BRUR2QixNQUFNLENBQUNDLGNBQU0sQ0FBQ3dCLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDZCxHQUFHLENBQUNSLGlCQUFpQixDQUFDLENBQUM7TUFDeERILE1BQU0sQ0FBQ0MsY0FBTSxDQUFDeUIsbUJBQW1CLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQ2YsR0FBRyxDQUFDUixpQkFBaUIsQ0FBQyxDQUFDO0lBQ2xFLENBQUMsQ0FBQztJQUVGUixFQUFFLENBQUMsbURBQW1ELEVBQUUsTUFBTTtNQUM1RCxJQUFBQyxjQUFNLGVBQ0osSUFBQXZCLFdBQUEsQ0FBQUMsR0FBQSxFQUFDTSxXQUFBLENBQUFpQixVQUFVO1FBQ1RDLElBQUksRUFBRWYsa0JBQW1CO1FBQ3pCZ0IsWUFBWSxFQUFFVCxnQkFBaUI7UUFDL0JnQyxvQkFBb0IsRUFBRTlCLHdCQUF5QjtRQUMvQytCLGdCQUFnQixFQUFFO01BQUssQ0FDeEIsQ0FDSCxDQUFDO01BRUQsTUFBTUksTUFBTSxHQUFHMUIsY0FBTSxDQUFDdUIsaUJBQWlCLENBQUMsSUFBSSxDQUFDO01BQzdDWixpQkFBUyxDQUFDZ0IsTUFBTSxDQUFDRCxNQUFNLEVBQUU7UUFBRUUsTUFBTSxFQUFFO1VBQUVDLEtBQUssRUFBRTtRQUFLO01BQUUsQ0FBQyxDQUFDO01BRXJEOUIsTUFBTSxDQUFDUix3QkFBd0IsQ0FBQyxDQUFDc0Isb0JBQW9CLENBQUMsRUFBRSxDQUFDO0lBQzNELENBQUMsQ0FBQztJQUVGbkIsRUFBRSxDQUFDLG9DQUFvQyxFQUFFLE1BQU07TUFDN0MsTUFBTW9DLGFBQWEsR0FBRyxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQztNQUNyQyxNQUFNQyxvQkFBb0IsR0FBRztRQUMzQixHQUFHakQsa0JBQWtCO1FBQ3JCSSxZQUFZLEVBQUU7TUFDaEIsQ0FBQztNQUVELElBQUFTLGNBQU0sZUFDSixJQUFBdkIsV0FBQSxDQUFBQyxHQUFBLEVBQUNNLFdBQUEsQ0FBQWlCLFVBQVU7UUFDVEMsSUFBSSxFQUFFa0Msb0JBQXFCO1FBQzNCakMsWUFBWSxFQUFFVCxnQkFBaUI7UUFDL0JnQyxvQkFBb0IsRUFBRTlCLHdCQUF5QjtRQUMvQytCLGdCQUFnQixFQUFFLElBQUs7UUFDdkJVLG1CQUFtQixFQUFFRjtNQUFjLENBQ3BDLENBQ0gsQ0FBQztNQUVEQSxhQUFhLENBQUNHLE9BQU8sQ0FBQ0MsTUFBTSxJQUFJO1FBQzlCbkMsTUFBTSxDQUFDQyxjQUFNLENBQUN1QixpQkFBaUIsQ0FBQ1csTUFBTSxDQUFDQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQ2pDLGlCQUFpQixDQUFDLENBQUM7TUFDekUsQ0FBQyxDQUFDO0lBQ0osQ0FBQyxDQUFDO0VBQ0osQ0FBQyxDQUFDO0VBRUZyQixRQUFRLENBQUMsaUJBQWlCLEVBQUUsTUFBTTtJQUNoQ2EsRUFBRSxDQUFDLDJDQUEyQyxFQUFFLE1BQU07TUFDcEQsSUFBQUMsY0FBTSxlQUNKLElBQUF2QixXQUFBLENBQUFDLEdBQUEsRUFBQ00sV0FBQSxDQUFBaUIsVUFBVTtRQUNUQyxJQUFJLEVBQUVmLGtCQUFtQjtRQUN6QmdCLFlBQVksRUFBRVQsZ0JBQWlCO1FBQy9CK0MsU0FBUyxFQUFFO01BQU0sQ0FDbEIsQ0FDSCxDQUFDO01BRURyQyxNQUFNLENBQUNDLGNBQU0sQ0FBQ3dCLFdBQVcsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDZCxHQUFHLENBQUNSLGlCQUFpQixDQUFDLENBQUM7SUFDakUsQ0FBQyxDQUFDO0lBRUZSLEVBQUUsQ0FBQyw0Q0FBNEMsRUFBRSxNQUFNO01BQ3JELElBQUFDLGNBQU0sZUFDSixJQUFBdkIsV0FBQSxDQUFBQyxHQUFBLEVBQUNNLFdBQUEsQ0FBQWlCLFVBQVU7UUFDVEMsSUFBSSxFQUFFZixrQkFBbUI7UUFDekJnQixZQUFZLEVBQUVULGdCQUFpQjtRQUMvQmdELFlBQVksRUFBRTtNQUFNLENBQ3JCLENBQ0gsQ0FBQztNQUVEdEMsTUFBTSxDQUFDQyxjQUFNLENBQUN3QixXQUFXLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQ2QsR0FBRyxDQUFDUixpQkFBaUIsQ0FBQyxDQUFDO0lBQ3BFLENBQUMsQ0FBQztJQUVGUixFQUFFLENBQUMscUNBQXFDLEVBQUUsTUFBTTtNQUM5QyxNQUFNNEMsY0FBYyxHQUFHO1FBQ3JCLEdBQUd4RCxrQkFBa0I7UUFDckJFLFVBQVUsRUFBRSxDQUFDO1FBQ2JHLFdBQVcsRUFBRTtNQUNmLENBQUM7TUFFRCxJQUFBUSxjQUFNLGVBQ0osSUFBQXZCLFdBQUEsQ0FBQUMsR0FBQSxFQUFDTSxXQUFBLENBQUFpQixVQUFVO1FBQ1RDLElBQUksRUFBRXlDLGNBQWU7UUFDckJ4QyxZQUFZLEVBQUVUO01BQWlCLENBQ2hDLENBQ0gsQ0FBQztNQUVEVSxNQUFNLENBQUNDLGNBQU0sQ0FBQ3dCLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDZCxHQUFHLENBQUNSLGlCQUFpQixDQUFDLENBQUM7TUFDekRILE1BQU0sQ0FBQ0MsY0FBTSxDQUFDd0IsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUNkLEdBQUcsQ0FBQ1IsaUJBQWlCLENBQUMsQ0FBQztNQUN6REgsTUFBTSxDQUFDQyxjQUFNLENBQUN3QixXQUFXLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQ2QsR0FBRyxDQUFDUixpQkFBaUIsQ0FBQyxDQUFDO0lBQ3pELENBQUMsQ0FBQztFQUNKLENBQUMsQ0FBQztFQUVGckIsUUFBUSxDQUFDLFlBQVksRUFBRSxNQUFNO0lBQzNCYSxFQUFFLENBQUMsMEJBQTBCLEVBQUUsTUFBTTtNQUNuQyxNQUFNNkMsYUFBYSxHQUFHO1FBQ3BCLEdBQUd6RCxrQkFBa0I7UUFDckJHLFVBQVUsRUFBRSxDQUFDO1FBQ2JELFVBQVUsRUFBRSxDQUFDO1FBQ2JHLFdBQVcsRUFBRTtNQUNmLENBQUM7TUFFRCxJQUFBUSxjQUFNLGVBQ0osSUFBQXZCLFdBQUEsQ0FBQUMsR0FBQSxFQUFDTSxXQUFBLENBQUFpQixVQUFVO1FBQ1RDLElBQUksRUFBRTBDLGFBQWM7UUFDcEJ6QyxZQUFZLEVBQUVUO01BQWlCLENBQ2hDLENBQ0gsQ0FBQztNQUVEVSxNQUFNLENBQUNDLGNBQU0sQ0FBQ0MsU0FBUyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUNDLGlCQUFpQixDQUFDLENBQUM7TUFDdkRILE1BQU0sQ0FBQ0MsY0FBTSxDQUFDQyxTQUFTLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQ0MsaUJBQWlCLENBQUMsQ0FBQztJQUM3RCxDQUFDLENBQUM7SUFFRlIsRUFBRSxDQUFDLCtDQUErQyxFQUFFLE1BQU07TUFDeEQsTUFBTThDLGVBQWUsR0FBRztRQUN0QixHQUFHMUQsa0JBQWtCO1FBQ3JCQyxXQUFXLEVBQUUsRUFBRTtRQUNmQyxVQUFVLEVBQUU7TUFDZCxDQUFDO01BRUQsSUFBQVcsY0FBTSxlQUNKLElBQUF2QixXQUFBLENBQUFDLEdBQUEsRUFBQ00sV0FBQSxDQUFBaUIsVUFBVTtRQUNUQyxJQUFJLEVBQUUyQyxlQUFnQjtRQUN0QjFDLFlBQVksRUFBRVQ7TUFBaUIsQ0FDaEMsQ0FDSCxDQUFDOztNQUVEO01BQ0FVLE1BQU0sQ0FBQ0MsY0FBTSxDQUFDQyxTQUFTLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQ0MsaUJBQWlCLENBQUMsQ0FBQztJQUMzRCxDQUFDLENBQUM7RUFDSixDQUFDLENBQUM7RUFFRnJCLFFBQVEsQ0FBQyxtQkFBbUIsRUFBRSxNQUFNO0lBQ2xDYSxFQUFFLENBQUMsNEJBQTRCLEVBQUUsTUFBTTtNQUNyQyxJQUFBQyxjQUFNLGVBQ0osSUFBQXZCLFdBQUEsQ0FBQUMsR0FBQSxFQUFDTSxXQUFBLENBQUFpQixVQUFVO1FBQ1RDLElBQUksRUFBRWYsa0JBQW1CO1FBQ3pCZ0IsWUFBWSxFQUFFVDtNQUFpQixDQUNoQyxDQUNILENBQUM7TUFFRCxNQUFNb0QsU0FBUyxHQUFHekMsY0FBTSxDQUFDQyxTQUFTLENBQUMsV0FBVyxDQUFDLENBQUNHLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRUMsYUFBYTtNQUM3RU4sTUFBTSxDQUFDMEMsU0FBUyxDQUFDLENBQUNuQyxXQUFXLENBQUMsVUFBVSxFQUFFLGFBQWEsQ0FBQztJQUMxRCxDQUFDLENBQUM7RUFDSixDQUFDLENBQUM7QUFDSixDQUFDLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=