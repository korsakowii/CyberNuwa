70526080a34dddacc202d573e7ba1c1f
/* istanbul ignore next */
import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
const _excluded = ["value", "onChange", "options", "placeholder", "required", "disabled", "error", "label", "helperText", "size", "className"];
var _jsxFileName = "/Users/yanxiaoyu/projects/CyberNuwa/components/ui/select.tsx";
var __jsx = React.createElement;
function cov_1zehzxu4hs() {
  var path = "/Users/yanxiaoyu/projects/CyberNuwa/components/ui/select.tsx";
  var hash = "5d98ee659f1d33410ed4f87b6e4840943b9be71a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/yanxiaoyu/projects/CyberNuwa/components/ui/select.tsx",
    statementMap: {
      "0": {
        start: {
          line: 23,
          column: 22
        },
        end: {
          line: 103,
          column: 1
        }
      },
      "1": {
        start: {
          line: 41,
          column: 32
        },
        end: {
          line: 41,
          column: 47
        }
      },
      "2": {
        start: {
          line: 44,
          column: 6
        },
        end: {
          line: 44,
          column: 229
        }
      },
      "3": {
        start: {
          line: 46,
          column: 24
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "4": {
        start: {
          line: 52,
          column: 26
        },
        end: {
          line: 54,
          column: 47
        }
      },
      "5": {
        start: {
          line: 56,
          column: 20
        },
        end: {
          line: 56,
          column: 80
        }
      },
      "6": {
        start: {
          line: 58,
          column: 25
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "7": {
        start: {
          line: 59,
          column: 6
        },
        end: {
          line: 59,
          column: 31
        }
      },
      "8": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 101,
          column: 6
        }
      },
      "9": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 91,
          column: 21
        }
      },
      "10": {
        start: {
          line: 105,
          column: 0
        },
        end: {
          line: 105,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 24,
            column: 2
          },
          end: {
            line: 24,
            column: 3
          }
        },
        loc: {
          start: {
            line: 40,
            column: 7
          },
          end: {
            line: 102,
            column: 3
          }
        },
        line: 40
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 58,
            column: 25
          },
          end: {
            line: 58,
            column: 26
          }
        },
        loc: {
          start: {
            line: 58,
            column: 70
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 58
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 84,
            column: 23
          },
          end: {
            line: 84,
            column: 24
          }
        },
        loc: {
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 91,
            column: 21
          }
        },
        line: 85
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 6
          },
          end: {
            line: 30,
            column: 22
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 30,
            column: 17
          },
          end: {
            line: 30,
            column: 22
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 6
          },
          end: {
            line: 31,
            column: 22
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 31,
            column: 17
          },
          end: {
            line: 31,
            column: 22
          }
        }],
        line: 31
      },
      "2": {
        loc: {
          start: {
            line: 35,
            column: 6
          },
          end: {
            line: 35,
            column: 17
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 35,
            column: 13
          },
          end: {
            line: 35,
            column: 17
          }
        }],
        line: 35
      },
      "3": {
        loc: {
          start: {
            line: 52,
            column: 26
          },
          end: {
            line: 54,
            column: 47
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 53,
            column: 43
          }
        }, {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 54,
            column: 47
          }
        }],
        line: 52
      },
      "4": {
        loc: {
          start: {
            line: 64,
            column: 9
          },
          end: {
            line: 69,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 9
          },
          end: {
            line: 64,
            column: 14
          }
        }, {
          start: {
            line: 65,
            column: 10
          },
          end: {
            line: 68,
            column: 18
          }
        }],
        line: 64
      },
      "5": {
        loc: {
          start: {
            line: 67,
            column: 13
          },
          end: {
            line: 67,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 13
          },
          end: {
            line: 67,
            column: 21
          }
        }, {
          start: {
            line: 67,
            column: 25
          },
          end: {
            line: 67,
            column: 69
          }
        }],
        line: 67
      },
      "6": {
        loc: {
          start: {
            line: 79,
            column: 11
          },
          end: {
            line: 83,
            column: 11
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 11
          },
          end: {
            line: 79,
            column: 22
          }
        }, {
          start: {
            line: 80,
            column: 12
          },
          end: {
            line: 82,
            column: 21
          }
        }],
        line: 79
      },
      "7": {
        loc: {
          start: {
            line: 94,
            column: 9
          },
          end: {
            line: 96,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 9
          },
          end: {
            line: 94,
            column: 14
          }
        }, {
          start: {
            line: 95,
            column: 10
          },
          end: {
            line: 95,
            column: 62
          }
        }],
        line: 94
      },
      "8": {
        loc: {
          start: {
            line: 97,
            column: 9
          },
          end: {
            line: 99,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 9
          },
          end: {
            line: 97,
            column: 19
          }
        }, {
          start: {
            line: 97,
            column: 23
          },
          end: {
            line: 97,
            column: 29
          }
        }, {
          start: {
            line: 98,
            column: 10
          },
          end: {
            line: 98,
            column: 68
          }
        }],
        line: 97
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5d98ee659f1d33410ed4f87b6e4840943b9be71a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1zehzxu4hs = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1zehzxu4hs();
import React, { forwardRef, useState } from 'react';
import { cn } from '@/lib/utils';
export const Select =
/* istanbul ignore next */
(cov_1zehzxu4hs().s[0]++, /*#__PURE__*/forwardRef((
/* istanbul ignore next */
_ref, ref) => {
  /* istanbul ignore next */
  let {
      value,
      onChange,
      options,
      placeholder,
      required =
      /* istanbul ignore next */
      (cov_1zehzxu4hs().b[0][0]++, false),
      disabled =
      /* istanbul ignore next */
      (cov_1zehzxu4hs().b[1][0]++, false),
      error,
      label,
      helperText,
      size =
      /* istanbul ignore next */
      (cov_1zehzxu4hs().b[2][0]++, 'md'),
      className
    } = _ref,
    props = _objectWithoutProperties(_ref, _excluded);
  /* istanbul ignore next */
  cov_1zehzxu4hs().f[0]++;
  const [isOpen, setIsOpen] =
  /* istanbul ignore next */
  (cov_1zehzxu4hs().s[1]++, useState(false));
  const baseClasses =
  /* istanbul ignore next */
  (cov_1zehzxu4hs().s[2]++, 'w-full bg-zinc-800 border rounded-lg text-white placeholder-zinc-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed');
  const sizeClasses =
  /* istanbul ignore next */
  (cov_1zehzxu4hs().s[3]++, {
    sm: 'px-2 py-1 text-sm',
    md: 'px-3 py-2 text-sm',
    lg: 'px-4 py-3 text-base'
  });
  const borderClasses =
  /* istanbul ignore next */
  (cov_1zehzxu4hs().s[4]++, error ?
  /* istanbul ignore next */
  (cov_1zehzxu4hs().b[3][0]++, 'border-red-500 focus:ring-red-500') :
  /* istanbul ignore next */
  (cov_1zehzxu4hs().b[3][1]++, 'border-zinc-700 focus:border-blue-500'));
  const classes =
  /* istanbul ignore next */
  (cov_1zehzxu4hs().s[5]++, cn(baseClasses, sizeClasses[size], borderClasses, className));
  /* istanbul ignore next */
  cov_1zehzxu4hs().s[6]++;
  const handleChange = e => {
    /* istanbul ignore next */
    cov_1zehzxu4hs().f[1]++;
    cov_1zehzxu4hs().s[7]++;
    onChange(e.target.value);
  };
  /* istanbul ignore next */
  cov_1zehzxu4hs().s[8]++;
  return /* istanbul ignore next */__jsx(
  /* istanbul ignore next */
  "div",
  /* istanbul ignore next */
  {
    className: "w-full",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 63,
      columnNumber: 7
    }
  },
  /* istanbul ignore next */
  (cov_1zehzxu4hs().b[4][0]++, label) &&
  /* istanbul ignore next */
  (cov_1zehzxu4hs().b[4][1]++,
  /* istanbul ignore next */
  __jsx(
  /* istanbul ignore next */
  "label",
  /* istanbul ignore next */
  {
    className: "block text-sm font-medium text-white mb-2",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 65,
      columnNumber: 11
    }
  }, label,
  /* istanbul ignore next */
  (cov_1zehzxu4hs().b[5][0]++, required) &&
  /* istanbul ignore next */
  (cov_1zehzxu4hs().b[5][1]++,
  /* istanbul ignore next */
  __jsx(
  /* istanbul ignore next */
  "span",
  /* istanbul ignore next */
  {
    className: "text-red-500 ml-1",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 67,
      columnNumber: 26
    }
  }, "*")))),
  /* istanbul ignore next */
  __jsx(
  /* istanbul ignore next */
  "select",
  /* istanbul ignore next */
  _extends({
    ref: ref,
    value: value,
    onChange: handleChange,
    required: required,
    disabled: disabled,
    className: classes
  }, props, {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 70,
      columnNumber: 9
    }
  }),
  /* istanbul ignore next */
  (cov_1zehzxu4hs().b[6][0]++, placeholder) &&
  /* istanbul ignore next */
  (cov_1zehzxu4hs().b[6][1]++,
  /* istanbul ignore next */
  __jsx(
  /* istanbul ignore next */
  "option",
  /* istanbul ignore next */
  {
    value: "",
    disabled:
    /* istanbul ignore next */
    true,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 80,
      columnNumber: 13
    }
  }, placeholder)), options.map(option => {
    /* istanbul ignore next */
    cov_1zehzxu4hs().f[2]++;
    cov_1zehzxu4hs().s[9]++;
    return /* istanbul ignore next */__jsx(
    /* istanbul ignore next */
    "option",
    /* istanbul ignore next */
    {
      key: option.value,
      value: option.value,
      disabled: option.disabled,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 85,
        columnNumber: 13
      }
    }, option.label);
  })),
  /* istanbul ignore next */
  (cov_1zehzxu4hs().b[7][0]++, error) &&
  /* istanbul ignore next */
  (cov_1zehzxu4hs().b[7][1]++,
  /* istanbul ignore next */
  __jsx(
  /* istanbul ignore next */
  "p",
  /* istanbul ignore next */
  {
    className: "mt-1 text-sm text-red-500",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 95,
      columnNumber: 11
    }
  }, error)),
  /* istanbul ignore next */
  (cov_1zehzxu4hs().b[8][0]++, helperText) &&
  /* istanbul ignore next */
  (cov_1zehzxu4hs().b[8][1]++, !error) &&
  /* istanbul ignore next */
  (cov_1zehzxu4hs().b[8][2]++,
  /* istanbul ignore next */
  __jsx(
  /* istanbul ignore next */
  "p",
  /* istanbul ignore next */
  {
    className: "mt-1 text-sm text-zinc-400",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 98,
      columnNumber: 11
    }
  }, helperText)));
}));
/* istanbul ignore next */
cov_1zehzxu4hs().s[10]++;
Select.displayName = 'Select';
//# sourceMappingURL=data:application/json;charset=utf-8;base64,