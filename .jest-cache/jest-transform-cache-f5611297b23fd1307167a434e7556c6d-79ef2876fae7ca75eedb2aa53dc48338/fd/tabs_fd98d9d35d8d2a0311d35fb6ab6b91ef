6ceb429555aa6c2976824dbd7f4f55cc
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.TabsTrigger = exports.TabsTab = exports.TabsRoot = exports.TabsPanel = exports.TabsList = exports.TabsGroup = exports.TabsContent = exports.Tabs = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = _interopRequireWildcard(require("react"));
var _utils = require("../../lib/utils");
const _excluded = ["value", "disabled", "className", "children"],
  _excluded2 = ["value", "className", "children"];
var _jsxFileName = "/Users/yanxiaoyu/projects/CyberNuwa/components/ui/tabs.tsx";
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
var __jsx = _react.default.createElement;
// 类型定义

// Context
const TabsContext = /*#__PURE__*/(0, _react.createContext)(undefined);
const useTabsContext = () => {
  const context = (0, _react.useContext)(TabsContext);
  if (!context) {
    throw new Error('Tabs components must be used within a Tabs component');
  }
  return context;
};

// 主组件
const Tabs = ({
  value,
  defaultValue,
  onValueChange,
  orientation = 'horizontal',
  className,
  children
}) => {
  const {
    0: internalValue,
    1: setInternalValue
  } = (0, _react.useState)(defaultValue || '');
  const controlledValue = value !== undefined ? value : internalValue;
  const activeTab = controlledValue || _react.default.Children.toArray(children)[0]?.props?.value || '';
  const setActiveTab = newValue => {
    if (value === undefined) {
      setInternalValue(newValue);
    }
    onValueChange?.(newValue);
  };
  return __jsx(TabsContext.Provider, {
    value: {
      activeTab,
      setActiveTab,
      orientation
    },
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 76,
      columnNumber: 5
    }
  }, __jsx("div", {
    className: (0, _utils.cn)('w-full block', className),
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 77,
      columnNumber: 7
    }
  }, children));
};

// TabsList 组件
exports.Tabs = Tabs;
const TabsList = ({
  className,
  children
}) => {
  const {
    orientation
  } = useTabsContext();
  return __jsx("div", {
    className: (0, _utils.cn)('inline-flex h-10 items-center justify-center rounded-md bg-gray-100 p-1 text-gray-500', orientation === 'vertical' && 'flex-col h-auto w-40', className),
    role: "tablist",
    "aria-orientation": orientation,
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 89,
      columnNumber: 5
    }
  }, children);
};

// TabsTrigger 组件
exports.TabsList = TabsList;
const TabsTrigger = _ref => {
  let {
      value,
      disabled = false,
      className,
      children
    } = _ref,
    props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  const {
    activeTab,
    setActiveTab,
    orientation
  } = useTabsContext();
  const isActive = activeTab === value;
  const handleKeyDown = event => {
    if (disabled) return;
    switch (event.key) {
      case 'ArrowRight':
      case 'ArrowDown':
        event.preventDefault();
        // 这里可以实现下一个标签页的逻辑
        break;
      case 'ArrowLeft':
      case 'ArrowUp':
        event.preventDefault();
        // 这里可以实现上一个标签页的逻辑
        break;
      case 'Enter':
      case ' ':
        event.preventDefault();
        setActiveTab(value);
        break;
    }
  };
  return __jsx("button", (0, _extends2.default)({
    className: (0, _utils.cn)('inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-white transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-400 focus-visible:ring-offset-2', isActive ? 'bg-white text-gray-950 shadow-sm' : 'text-gray-600 hover:text-gray-950', disabled && 'pointer-events-none opacity-50', orientation === 'vertical' && 'w-full justify-start', className),
    disabled: disabled,
    onClick: () => setActiveTab(value),
    onKeyDown: handleKeyDown,
    role: "tab",
    "aria-selected": isActive,
    "data-state": isActive ? 'active' : 'inactive'
  }, props, {
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 137,
      columnNumber: 5
    }
  }), children);
};

// TabsContent 组件
exports.TabsTrigger = TabsTrigger;
const TabsContent = _ref2 => {
  let {
      value,
      className,
      children
    } = _ref2,
    props = (0, _objectWithoutProperties2.default)(_ref2, _excluded2);
  const {
    activeTab
  } = useTabsContext();
  const isActive = activeTab === value;
  if (!isActive) {
    return null;
  }
  return __jsx("div", (0, _extends2.default)({
    className: (0, _utils.cn)('mt-2 ring-offset-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-400 focus-visible:ring-offset-2', className),
    role: "tabpanel",
    "data-state": isActive ? 'active' : 'inactive',
    "data-testid": `${value}-content`
  }, props, {
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 175,
      columnNumber: 5
    }
  }), children);
};

// TabsGroup 组件
exports.TabsContent = TabsContent;
const TabsGroup = ({
  label,
  className,
  children
}) => {
  const {
    orientation
  } = useTabsContext();
  return __jsx("div", {
    className: (0, _utils.cn)(orientation === 'vertical' ? 'mb-4' : 'space-y-4', className),
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 199,
      columnNumber: 5
    }
  }, label && __jsx("h3", {
    className: "mb-2 text-sm font-medium text-gray-700",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 204,
      columnNumber: 9
    }
  }, label), __jsx("div", {
    className: (0, _utils.cn)(orientation === 'horizontal' ? 'flex space-x-4 space-y-0' : 'flex flex-col space-y-4 space-x-0'),
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 206,
      columnNumber: 7
    }
  }, children));
};

// 组合组件
exports.TabsGroup = TabsGroup;
const TabsRoot = exports.TabsRoot = Tabs;
const TabsTab = exports.TabsTab = TabsTrigger;
const TabsPanel = exports.TabsPanel = TabsContent;

// 默认导出
var _default = exports.default = Tabs;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfdXRpbHMiLCJfZXhjbHVkZWQiLCJfZXhjbHVkZWQyIiwiX2pzeEZpbGVOYW1lIiwiZSIsInQiLCJXZWFrTWFwIiwiciIsIm4iLCJfX2VzTW9kdWxlIiwibyIsImkiLCJmIiwiX19wcm90b19fIiwiZGVmYXVsdCIsImhhcyIsImdldCIsInNldCIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiX19qc3giLCJjcmVhdGVFbGVtZW50IiwiVGFic0NvbnRleHQiLCJjcmVhdGVDb250ZXh0IiwidW5kZWZpbmVkIiwidXNlVGFic0NvbnRleHQiLCJjb250ZXh0IiwidXNlQ29udGV4dCIsIkVycm9yIiwiVGFicyIsInZhbHVlIiwiZGVmYXVsdFZhbHVlIiwib25WYWx1ZUNoYW5nZSIsIm9yaWVudGF0aW9uIiwiY2xhc3NOYW1lIiwiY2hpbGRyZW4iLCJpbnRlcm5hbFZhbHVlIiwic2V0SW50ZXJuYWxWYWx1ZSIsInVzZVN0YXRlIiwiY29udHJvbGxlZFZhbHVlIiwiYWN0aXZlVGFiIiwiUmVhY3QiLCJDaGlsZHJlbiIsInRvQXJyYXkiLCJwcm9wcyIsInNldEFjdGl2ZVRhYiIsIm5ld1ZhbHVlIiwiUHJvdmlkZXIiLCJfX3NlbGYiLCJfX3NvdXJjZSIsImZpbGVOYW1lIiwibGluZU51bWJlciIsImNvbHVtbk51bWJlciIsImNuIiwiZXhwb3J0cyIsIlRhYnNMaXN0Iiwicm9sZSIsIlRhYnNUcmlnZ2VyIiwiX3JlZiIsImRpc2FibGVkIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzMiIsImlzQWN0aXZlIiwiaGFuZGxlS2V5RG93biIsImV2ZW50Iiwia2V5IiwicHJldmVudERlZmF1bHQiLCJfZXh0ZW5kczIiLCJvbkNsaWNrIiwib25LZXlEb3duIiwiVGFic0NvbnRlbnQiLCJfcmVmMiIsIlRhYnNHcm91cCIsImxhYmVsIiwiVGFic1Jvb3QiLCJUYWJzVGFiIiwiVGFic1BhbmVsIiwiX2RlZmF1bHQiXSwic291cmNlcyI6WyJ0YWJzLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgdXNlU3RhdGUsIFJlYWN0Tm9kZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNuIH0gZnJvbSAnLi4vLi4vbGliL3V0aWxzJztcblxuLy8g57G75Z6L5a6a5LmJXG5pbnRlcmZhY2UgVGFic0NvbnRleHRUeXBlIHtcbiAgYWN0aXZlVGFiOiBzdHJpbmc7XG4gIHNldEFjdGl2ZVRhYjogKHZhbHVlOiBzdHJpbmcpID0+IHZvaWQ7XG4gIG9yaWVudGF0aW9uOiAnaG9yaXpvbnRhbCcgfCAndmVydGljYWwnO1xufVxuXG5pbnRlcmZhY2UgVGFic1Byb3BzIHtcbiAgdmFsdWU/OiBzdHJpbmc7XG4gIGRlZmF1bHRWYWx1ZT86IHN0cmluZztcbiAgb25WYWx1ZUNoYW5nZT86ICh2YWx1ZTogc3RyaW5nKSA9PiB2b2lkO1xuICBvcmllbnRhdGlvbj86ICdob3Jpem9udGFsJyB8ICd2ZXJ0aWNhbCc7XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbiAgY2hpbGRyZW46IFJlYWN0Tm9kZTtcbn1cblxuaW50ZXJmYWNlIFRhYnNMaXN0UHJvcHMge1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG4gIGNoaWxkcmVuOiBSZWFjdE5vZGU7XG59XG5cbmludGVyZmFjZSBUYWJzVHJpZ2dlclByb3BzIHtcbiAgdmFsdWU6IHN0cmluZztcbiAgZGlzYWJsZWQ/OiBib29sZWFuO1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG4gIGNoaWxkcmVuOiBSZWFjdE5vZGU7XG59XG5cbmludGVyZmFjZSBUYWJzQ29udGVudFByb3BzIHtcbiAgdmFsdWU6IHN0cmluZztcbiAgY2xhc3NOYW1lPzogc3RyaW5nO1xuICBjaGlsZHJlbjogUmVhY3ROb2RlO1xufVxuXG5pbnRlcmZhY2UgVGFic0dyb3VwUHJvcHMge1xuICBsYWJlbD86IHN0cmluZztcbiAgY2xhc3NOYW1lPzogc3RyaW5nO1xuICBjaGlsZHJlbjogUmVhY3ROb2RlO1xufVxuXG4vLyBDb250ZXh0XG5jb25zdCBUYWJzQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQ8VGFic0NvbnRleHRUeXBlIHwgdW5kZWZpbmVkPih1bmRlZmluZWQpO1xuXG5jb25zdCB1c2VUYWJzQ29udGV4dCA9ICgpID0+IHtcbiAgY29uc3QgY29udGV4dCA9IHVzZUNvbnRleHQoVGFic0NvbnRleHQpO1xuICBpZiAoIWNvbnRleHQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1RhYnMgY29tcG9uZW50cyBtdXN0IGJlIHVzZWQgd2l0aGluIGEgVGFicyBjb21wb25lbnQnKTtcbiAgfVxuICByZXR1cm4gY29udGV4dDtcbn07XG5cbi8vIOS4u+e7hOS7tlxuZXhwb3J0IGNvbnN0IFRhYnM6IFJlYWN0LkZDPFRhYnNQcm9wcz4gPSAoe1xuICB2YWx1ZSxcbiAgZGVmYXVsdFZhbHVlLFxuICBvblZhbHVlQ2hhbmdlLFxuICBvcmllbnRhdGlvbiA9ICdob3Jpem9udGFsJyxcbiAgY2xhc3NOYW1lLFxuICBjaGlsZHJlbixcbn0pID0+IHtcbiAgY29uc3QgW2ludGVybmFsVmFsdWUsIHNldEludGVybmFsVmFsdWVdID0gdXNlU3RhdGUoZGVmYXVsdFZhbHVlIHx8ICcnKTtcbiAgY29uc3QgY29udHJvbGxlZFZhbHVlID0gdmFsdWUgIT09IHVuZGVmaW5lZCA/IHZhbHVlIDogaW50ZXJuYWxWYWx1ZTtcbiAgY29uc3QgYWN0aXZlVGFiID0gY29udHJvbGxlZFZhbHVlIHx8IChSZWFjdC5DaGlsZHJlbi50b0FycmF5KGNoaWxkcmVuKVswXSBhcyBhbnkpPy5wcm9wcz8udmFsdWUgfHwgJyc7XG5cbiAgY29uc3Qgc2V0QWN0aXZlVGFiID0gKG5ld1ZhbHVlOiBzdHJpbmcpID0+IHtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgc2V0SW50ZXJuYWxWYWx1ZShuZXdWYWx1ZSk7XG4gICAgfVxuICAgIG9uVmFsdWVDaGFuZ2U/LihuZXdWYWx1ZSk7XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8VGFic0NvbnRleHQuUHJvdmlkZXIgdmFsdWU9e3sgYWN0aXZlVGFiLCBzZXRBY3RpdmVUYWIsIG9yaWVudGF0aW9uIH19PlxuICAgICAgPGRpdiBjbGFzc05hbWU9e2NuKCd3LWZ1bGwgYmxvY2snLCBjbGFzc05hbWUpfT5cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgPC9kaXY+XG4gICAgPC9UYWJzQ29udGV4dC5Qcm92aWRlcj5cbiAgKTtcbn07XG5cbi8vIFRhYnNMaXN0IOe7hOS7tlxuZXhwb3J0IGNvbnN0IFRhYnNMaXN0OiBSZWFjdC5GQzxUYWJzTGlzdFByb3BzPiA9ICh7IGNsYXNzTmFtZSwgY2hpbGRyZW4gfSkgPT4ge1xuICBjb25zdCB7IG9yaWVudGF0aW9uIH0gPSB1c2VUYWJzQ29udGV4dCgpO1xuICBcbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICBjbGFzc05hbWU9e2NuKFxuICAgICAgICAnaW5saW5lLWZsZXggaC0xMCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgcm91bmRlZC1tZCBiZy1ncmF5LTEwMCBwLTEgdGV4dC1ncmF5LTUwMCcsXG4gICAgICAgIG9yaWVudGF0aW9uID09PSAndmVydGljYWwnICYmICdmbGV4LWNvbCBoLWF1dG8gdy00MCcsXG4gICAgICAgIGNsYXNzTmFtZVxuICAgICAgKX1cbiAgICAgIHJvbGU9XCJ0YWJsaXN0XCJcbiAgICAgIGFyaWEtb3JpZW50YXRpb249e29yaWVudGF0aW9ufVxuICAgID5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbi8vIFRhYnNUcmlnZ2VyIOe7hOS7tlxuZXhwb3J0IGNvbnN0IFRhYnNUcmlnZ2VyOiBSZWFjdC5GQzxUYWJzVHJpZ2dlclByb3BzPiA9ICh7XG4gIHZhbHVlLFxuICBkaXNhYmxlZCA9IGZhbHNlLFxuICBjbGFzc05hbWUsXG4gIGNoaWxkcmVuLFxuICAuLi5wcm9wc1xufSkgPT4ge1xuICBjb25zdCB7IGFjdGl2ZVRhYiwgc2V0QWN0aXZlVGFiLCBvcmllbnRhdGlvbiB9ID0gdXNlVGFic0NvbnRleHQoKTtcbiAgY29uc3QgaXNBY3RpdmUgPSBhY3RpdmVUYWIgPT09IHZhbHVlO1xuXG4gIGNvbnN0IGhhbmRsZUtleURvd24gPSAoZXZlbnQ6IFJlYWN0LktleWJvYXJkRXZlbnQpID0+IHtcbiAgICBpZiAoZGlzYWJsZWQpIHJldHVybjtcblxuICAgIHN3aXRjaCAoZXZlbnQua2V5KSB7XG4gICAgICBjYXNlICdBcnJvd1JpZ2h0JzpcbiAgICAgIGNhc2UgJ0Fycm93RG93bic6XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIC8vIOi/memHjOWPr+S7peWunueOsOS4i+S4gOS4quagh+etvumhteeahOmAu+i+kVxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ0Fycm93TGVmdCc6XG4gICAgICBjYXNlICdBcnJvd1VwJzpcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgLy8g6L+Z6YeM5Y+v5Lul5a6e546w5LiK5LiA5Liq5qCH562+6aG155qE6YC76L6RXG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnRW50ZXInOlxuICAgICAgY2FzZSAnICc6XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHNldEFjdGl2ZVRhYih2YWx1ZSk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxidXR0b25cbiAgICAgIGNsYXNzTmFtZT17Y24oXG4gICAgICAgICdpbmxpbmUtZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgd2hpdGVzcGFjZS1ub3dyYXAgcm91bmRlZC1zbSBweC0zIHB5LTEuNSB0ZXh0LXNtIGZvbnQtbWVkaXVtIHJpbmctb2Zmc2V0LXdoaXRlIHRyYW5zaXRpb24tYWxsIGZvY3VzLXZpc2libGU6b3V0bGluZS1ub25lIGZvY3VzLXZpc2libGU6cmluZy0yIGZvY3VzLXZpc2libGU6cmluZy1ncmF5LTQwMCBmb2N1cy12aXNpYmxlOnJpbmctb2Zmc2V0LTInLFxuICAgICAgICBpc0FjdGl2ZVxuICAgICAgICAgID8gJ2JnLXdoaXRlIHRleHQtZ3JheS05NTAgc2hhZG93LXNtJ1xuICAgICAgICAgIDogJ3RleHQtZ3JheS02MDAgaG92ZXI6dGV4dC1ncmF5LTk1MCcsXG4gICAgICAgIGRpc2FibGVkICYmICdwb2ludGVyLWV2ZW50cy1ub25lIG9wYWNpdHktNTAnLFxuICAgICAgICBvcmllbnRhdGlvbiA9PT0gJ3ZlcnRpY2FsJyAmJiAndy1mdWxsIGp1c3RpZnktc3RhcnQnLFxuICAgICAgICBjbGFzc05hbWVcbiAgICAgICl9XG4gICAgICBkaXNhYmxlZD17ZGlzYWJsZWR9XG4gICAgICBvbkNsaWNrPXsoKSA9PiBzZXRBY3RpdmVUYWIodmFsdWUpfVxuICAgICAgb25LZXlEb3duPXtoYW5kbGVLZXlEb3dufVxuICAgICAgcm9sZT1cInRhYlwiXG4gICAgICBhcmlhLXNlbGVjdGVkPXtpc0FjdGl2ZX1cbiAgICAgIGRhdGEtc3RhdGU9e2lzQWN0aXZlID8gJ2FjdGl2ZScgOiAnaW5hY3RpdmUnfVxuICAgICAgey4uLnByb3BzfVxuICAgID5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L2J1dHRvbj5cbiAgKTtcbn07XG5cbi8vIFRhYnNDb250ZW50IOe7hOS7tlxuZXhwb3J0IGNvbnN0IFRhYnNDb250ZW50OiBSZWFjdC5GQzxUYWJzQ29udGVudFByb3BzPiA9ICh7XG4gIHZhbHVlLFxuICBjbGFzc05hbWUsXG4gIGNoaWxkcmVuLFxuICAuLi5wcm9wc1xufSkgPT4ge1xuICBjb25zdCB7IGFjdGl2ZVRhYiB9ID0gdXNlVGFic0NvbnRleHQoKTtcbiAgY29uc3QgaXNBY3RpdmUgPSBhY3RpdmVUYWIgPT09IHZhbHVlO1xuXG4gIGlmICghaXNBY3RpdmUpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgY2xhc3NOYW1lPXtjbihcbiAgICAgICAgJ210LTIgcmluZy1vZmZzZXQtd2hpdGUgZm9jdXMtdmlzaWJsZTpvdXRsaW5lLW5vbmUgZm9jdXMtdmlzaWJsZTpyaW5nLTIgZm9jdXMtdmlzaWJsZTpyaW5nLWdyYXktNDAwIGZvY3VzLXZpc2libGU6cmluZy1vZmZzZXQtMicsXG4gICAgICAgIGNsYXNzTmFtZVxuICAgICAgKX1cbiAgICAgIHJvbGU9XCJ0YWJwYW5lbFwiXG4gICAgICBkYXRhLXN0YXRlPXtpc0FjdGl2ZSA/ICdhY3RpdmUnIDogJ2luYWN0aXZlJ31cbiAgICAgIGRhdGEtdGVzdGlkPXtgJHt2YWx1ZX0tY29udGVudGB9XG4gICAgICB7Li4ucHJvcHN9XG4gICAgPlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvZGl2PlxuICApO1xufTtcblxuLy8gVGFic0dyb3VwIOe7hOS7tlxuZXhwb3J0IGNvbnN0IFRhYnNHcm91cDogUmVhY3QuRkM8VGFic0dyb3VwUHJvcHM+ID0gKHtcbiAgbGFiZWwsXG4gIGNsYXNzTmFtZSxcbiAgY2hpbGRyZW4sXG59KSA9PiB7XG4gIGNvbnN0IHsgb3JpZW50YXRpb24gfSA9IHVzZVRhYnNDb250ZXh0KCk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT17Y24oXG4gICAgICBvcmllbnRhdGlvbiA9PT0gJ3ZlcnRpY2FsJyA/ICdtYi00JyA6ICdzcGFjZS15LTQnLFxuICAgICAgY2xhc3NOYW1lXG4gICAgKX0+XG4gICAgICB7bGFiZWwgJiYgKFxuICAgICAgICA8aDMgY2xhc3NOYW1lPVwibWItMiB0ZXh0LXNtIGZvbnQtbWVkaXVtIHRleHQtZ3JheS03MDBcIj57bGFiZWx9PC9oMz5cbiAgICAgICl9XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y24oXG4gICAgICAgIG9yaWVudGF0aW9uID09PSAnaG9yaXpvbnRhbCcgPyAnZmxleCBzcGFjZS14LTQgc3BhY2UteS0wJyA6ICdmbGV4IGZsZXgtY29sIHNwYWNlLXktNCBzcGFjZS14LTAnXG4gICAgICApfT5cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG4vLyDnu4TlkIjnu4Tku7ZcbmV4cG9ydCBjb25zdCBUYWJzUm9vdCA9IFRhYnM7XG5leHBvcnQgY29uc3QgVGFic1RhYiA9IFRhYnNUcmlnZ2VyO1xuZXhwb3J0IGNvbnN0IFRhYnNQYW5lbCA9IFRhYnNDb250ZW50O1xuXG4vLyDpu5jorqTlr7zlh7pcbmV4cG9ydCBkZWZhdWx0IFRhYnM7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLElBQUFBLE1BQUEsR0FBQUMsdUJBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLE1BQUEsR0FBQUQsT0FBQTtBQUFxQyxNQUFBRSxTQUFBO0VBQUFDLFVBQUE7QUFBQSxJQUFBQyxZQUFBO0FBQUEsU0FBQUwsd0JBQUFNLENBQUEsRUFBQUMsQ0FBQSw2QkFBQUMsT0FBQSxNQUFBQyxDQUFBLE9BQUFELE9BQUEsSUFBQUUsQ0FBQSxPQUFBRixPQUFBLFlBQUFSLHVCQUFBLFlBQUFBLENBQUFNLENBQUEsRUFBQUMsQ0FBQSxTQUFBQSxDQUFBLElBQUFELENBQUEsSUFBQUEsQ0FBQSxDQUFBSyxVQUFBLFNBQUFMLENBQUEsTUFBQU0sQ0FBQSxFQUFBQyxDQUFBLEVBQUFDLENBQUEsS0FBQUMsU0FBQSxRQUFBQyxPQUFBLEVBQUFWLENBQUEsaUJBQUFBLENBQUEsdUJBQUFBLENBQUEseUJBQUFBLENBQUEsU0FBQVEsQ0FBQSxNQUFBRixDQUFBLEdBQUFMLENBQUEsR0FBQUcsQ0FBQSxHQUFBRCxDQUFBLFFBQUFHLENBQUEsQ0FBQUssR0FBQSxDQUFBWCxDQUFBLFVBQUFNLENBQUEsQ0FBQU0sR0FBQSxDQUFBWixDQUFBLEdBQUFNLENBQUEsQ0FBQU8sR0FBQSxDQUFBYixDQUFBLEVBQUFRLENBQUEsZ0JBQUFQLENBQUEsSUFBQUQsQ0FBQSxn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SSxNQUFBO0lBQUFDLFFBQUE7TUFBQUMsUUFBQSxFQUFBbEQsWUFBQTtNQUFBbUQsVUFBQTtNQUFBQyxZQUFBO0lBQUE7RUFBQSxJQUVSakIsUUFDRSxDQUFDO0FBRVYsQ0FBQzs7QUFFRDtBQUFBbUIsT0FBQSxDQUFBZSxXQUFBLEdBQUFBLFdBQUE7QUFDTyxNQUFNRSxTQUFtQyxHQUFHQSxDQUFDO0VBQ2xEQyxLQUFLO0VBQ0x0QyxTQUFTO0VBQ1RDO0FBQ0YsQ0FBQyxLQUFLO0VBQ0osTUFBTTtJQUFFRjtFQUFZLENBQUMsR0FBR1IsY0FBYyxDQUFDLENBQUM7RUFFeEMsT0FDRUwsS0FBQTtJQUFLYyxTQUFTLEVBQUUsSUFBQW1CLFNBQUUsRUFDaEJwQixXQUFXLEtBQUssVUFBVSxHQUFHLE1BQU0sR0FBRyxXQUFXLEVBQ2pEQyxTQUNGLENBQUU7SUFBQWMsTUFBQTtJQUFBQyxRQUFBO01BQUFDLFFBQUEsRUFBQWxELFlBQUE7TUFBQW1ELFVBQUE7TUFBQUMsWUFBQTtJQUFBO0VBQUEsR0FDQ29CLEtBQUssSUFDSnBELEtBQUE7SUFBSWMsU0FBUyxFQUFDLHdDQUF3QztJQUFBYyxNQUFBO0lBQUFDLFFBQUE7TUFBQUMsUUFBQSxFQUFBbEQsWUFBQTtNQUFBbUQsVUFBQTtNQUFBQyxZQUFBO0lBQUE7RUFBQSxHQUFFb0IsS0FBVSxDQUNuRSxFQUNEcEQsS0FBQTtJQUFLYyxTQUFTLEVBQUUsSUFBQW1CLFNBQUUsRUFDaEJwQixXQUFXLEtBQUssWUFBWSxHQUFHLDBCQUEwQixHQUFHLG1DQUM5RCxDQUFFO0lBQUFlLE1BQUE7SUFBQUMsUUFBQTtNQUFBQyxRQUFBLEVBQUFsRCxZQUFBO01BQUFtRCxVQUFBO01BQUFDLFlBQUE7SUFBQTtFQUFBLEdBQ0NqQixRQUNFLENBQ0YsQ0FBQztBQUVWLENBQUM7O0FBRUQ7QUFBQW1CLE9BQUEsQ0FBQWlCLFNBQUEsR0FBQUEsU0FBQTtBQUNPLE1BQU1FLFFBQVEsR0FBQW5CLE9BQUEsQ0FBQW1CLFFBQUEsR0FBRzVDLElBQUk7QUFDckIsTUFBTTZDLE9BQU8sR0FBQXBCLE9BQUEsQ0FBQW9CLE9BQUEsR0FBR2pCLFdBQVc7QUFDM0IsTUFBTWtCLFNBQVMsR0FBQXJCLE9BQUEsQ0FBQXFCLFNBQUEsR0FBR04sV0FBVzs7QUFFcEM7QUFBQSxJQUFBTyxRQUFBLEdBQUF0QixPQUFBLENBQUEzQyxPQUFBLEdBQ2VrQixJQUFJIiwiaWdub3JlTGlzdCI6W119