{"version":3,"names":["_react","_interopRequireDefault","require","_utils","_button","_jsxRuntime","PaginationButton","onClick","disabled","active","children","className","jsx","Button","variant","size","cn","Pagination","info","onPageChange","onItemsPerPageChange","showItemsPerPage","itemsPerPageOptions","showTotal","showPageInfo","currentPage","totalPages","totalItems","itemsPerPage","hasNextPage","hasPreviousPage","getPageNumbers","pages","maxVisiblePages","i","push","pageNumbers","jsxs","value","onChange","e","Number","target","map","option","page","index","default","Fragment","exports","_default"],"sources":["pagination.tsx"],"sourcesContent":["import React from 'react';\nimport { cn } from '../../lib/utils';\nimport { Button } from './button';\n\n// 分页信息接口\nexport interface PaginationInfo {\n  currentPage: number;\n  totalPages: number;\n  totalItems: number;\n  itemsPerPage: number;\n  hasNextPage: boolean;\n  hasPreviousPage: boolean;\n}\n\n// 分页组件属性\ninterface PaginationProps {\n  info: PaginationInfo;\n  onPageChange: (page: number) => void;\n  onItemsPerPageChange?: (itemsPerPage: number) => void;\n  className?: string;\n  showItemsPerPage?: boolean;\n  itemsPerPageOptions?: number[];\n  showTotal?: boolean;\n  showPageInfo?: boolean;\n}\n\n// 分页按钮组件\ninterface PaginationButtonProps {\n  onClick: () => void;\n  disabled?: boolean;\n  active?: boolean;\n  children: React.ReactNode;\n  className?: string;\n}\n\nconst PaginationButton: React.FC<PaginationButtonProps> = ({\n  onClick,\n  disabled = false,\n  active = false,\n  children,\n  className\n}) => (\n  <Button\n    variant={active ? 'primary' : 'outline'}\n    size=\"sm\"\n    onClick={onClick}\n    disabled={disabled}\n    className={cn(\n      'min-w-[40px] h-10 px-3',\n      active && 'bg-primary text-primary-foreground',\n      className\n    )}\n  >\n    {children}\n  </Button>\n);\n\n// 主分页组件\nexport const Pagination: React.FC<PaginationProps> = ({\n  info,\n  onPageChange,\n  onItemsPerPageChange,\n  className,\n  showItemsPerPage = true,\n  itemsPerPageOptions = [10, 20, 50, 100],\n  showTotal = true,\n  showPageInfo = true\n}) => {\n  const { currentPage, totalPages, totalItems, itemsPerPage, hasNextPage, hasPreviousPage } = info;\n\n  // 生成页码数组\n  const getPageNumbers = () => {\n    const pages: (number | string)[] = [];\n    const maxVisiblePages = 7;\n\n    if (totalPages <= maxVisiblePages) {\n      // 如果总页数少于等于最大可见页数，显示所有页码\n      for (let i = 1; i <= totalPages; i++) {\n        pages.push(i);\n      }\n    } else {\n      // 否则显示部分页码，包含省略号\n      if (currentPage <= 4) {\n        // 当前页在前4页\n        for (let i = 1; i <= 5; i++) {\n          pages.push(i);\n        }\n        pages.push('...');\n        pages.push(totalPages);\n      } else if (currentPage >= totalPages - 3) {\n        // 当前页在后4页\n        pages.push(1);\n        pages.push('...');\n        for (let i = totalPages - 4; i <= totalPages; i++) {\n          pages.push(i);\n        }\n      } else {\n        // 当前页在中间\n        pages.push(1);\n        pages.push('...');\n        for (let i = currentPage - 1; i <= currentPage + 1; i++) {\n          pages.push(i);\n        }\n        pages.push('...');\n        pages.push(totalPages);\n      }\n    }\n\n    return pages;\n  };\n\n  const pageNumbers = getPageNumbers();\n\n  return (\n    <div className={cn('flex flex-col sm:flex-row items-center justify-between gap-4', className)}>\n      {/* 左侧信息 */}\n      <div className=\"flex items-center gap-4\">\n        {showTotal && (\n          <div className=\"text-sm text-gray-600\">\n            共 {totalItems} 条记录\n          </div>\n        )}\n        \n        {showItemsPerPage && onItemsPerPageChange && (\n          <div className=\"flex items-center gap-2\">\n            <span className=\"text-sm text-gray-600\">每页</span>\n            <select\n              value={itemsPerPage}\n              onChange={(e) => onItemsPerPageChange(Number(e.target.value))}\n              className=\"border border-gray-300 rounded-md px-2 py-1 text-sm\"\n            >\n              {itemsPerPageOptions.map(option => (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              ))}\n            </select>\n            <span className=\"text-sm text-gray-600\">条</span>\n          </div>\n        )}\n      </div>\n\n      {/* 分页导航 - 只有当总页数大于1时显示 */}\n      {totalPages > 1 && (\n        <div className=\"flex items-center gap-1\">\n          {/* 上一页 */}\n          <PaginationButton\n            onClick={() => onPageChange(currentPage - 1)}\n            disabled={!hasPreviousPage}\n            className=\"mr-2\"\n          >\n            上一页\n          </PaginationButton>\n\n          {/* 页码 */}\n          {pageNumbers.map((page, index) => (\n            <React.Fragment key={index}>\n              {page === '...' ? (\n                <span key={`ellipsis-${index}`} className=\"px-3 py-2 text-gray-500\">...</span>\n              ) : (\n                <PaginationButton\n                  onClick={() => onPageChange(page as number)}\n                  active={page === currentPage}\n                >\n                  {page}\n                </PaginationButton>\n              )}\n            </React.Fragment>\n          ))}\n\n          {/* 下一页 */}\n          <PaginationButton\n            onClick={() => onPageChange(currentPage + 1)}\n            disabled={!hasNextPage}\n            className=\"ml-2\"\n          >\n            下一页\n          </PaginationButton>\n        </div>\n      )}\n\n      {/* 右侧页面信息 */}\n      {showPageInfo && (\n        <div className=\"text-sm text-gray-600\">\n          第 {currentPage} 页，共 {totalPages} 页\n        </div>\n      )}\n    </div>\n  );\n};\n\n// 默认导出\nexport default Pagination;\n"],"mappings":"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","ignoreList":[]}