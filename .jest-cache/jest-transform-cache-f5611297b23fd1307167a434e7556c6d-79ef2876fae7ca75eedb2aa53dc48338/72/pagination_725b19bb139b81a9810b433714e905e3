5e12bb8263e202a7bf6adebce800d283
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Pagination = void 0;
var _react = _interopRequireDefault(require("react"));
var _utils = require("../../lib/utils");
var _button = require("./button");
var _jsxRuntime = require("react/jsx-runtime");
// 分页信息接口

// 分页组件属性

// 分页按钮组件

const PaginationButton = ({
  onClick,
  disabled = false,
  active = false,
  children,
  className
}) => /*#__PURE__*/(0, _jsxRuntime.jsx)(_button.Button, {
  variant: active ? 'primary' : 'outline',
  size: "sm",
  onClick: onClick,
  disabled: disabled,
  className: (0, _utils.cn)('min-w-[40px] h-10 px-3', active && 'bg-primary text-primary-foreground', className),
  children: children
});

// 主分页组件
const Pagination = ({
  info,
  onPageChange,
  onItemsPerPageChange,
  className,
  showItemsPerPage = true,
  itemsPerPageOptions = [10, 20, 50, 100],
  showTotal = true,
  showPageInfo = true
}) => {
  const {
    currentPage,
    totalPages,
    totalItems,
    itemsPerPage,
    hasNextPage,
    hasPreviousPage
  } = info;

  // 生成页码数组
  const getPageNumbers = () => {
    const pages = [];
    const maxVisiblePages = 7;
    if (totalPages <= maxVisiblePages) {
      // 如果总页数少于等于最大可见页数，显示所有页码
      for (let i = 1; i <= totalPages; i++) {
        pages.push(i);
      }
    } else {
      // 否则显示部分页码，包含省略号
      if (currentPage <= 4) {
        // 当前页在前4页
        for (let i = 1; i <= 5; i++) {
          pages.push(i);
        }
        pages.push('...');
        pages.push(totalPages);
      } else if (currentPage >= totalPages - 3) {
        // 当前页在后4页
        pages.push(1);
        pages.push('...');
        for (let i = totalPages - 4; i <= totalPages; i++) {
          pages.push(i);
        }
      } else {
        // 当前页在中间
        pages.push(1);
        pages.push('...');
        for (let i = currentPage - 1; i <= currentPage + 1; i++) {
          pages.push(i);
        }
        pages.push('...');
        pages.push(totalPages);
      }
    }
    return pages;
  };
  const pageNumbers = getPageNumbers();
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    className: (0, _utils.cn)('flex flex-col sm:flex-row items-center justify-between gap-4', className),
    children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "flex items-center gap-4",
      children: [showTotal && /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "text-sm text-gray-600",
        children: ["\u5171 ", totalItems, " \u6761\u8BB0\u5F55"]
      }), showItemsPerPage && onItemsPerPageChange && /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "flex items-center gap-2",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
          className: "text-sm text-gray-600",
          children: "\u6BCF\u9875"
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("select", {
          value: itemsPerPage,
          onChange: e => onItemsPerPageChange(Number(e.target.value)),
          className: "border border-gray-300 rounded-md px-2 py-1 text-sm",
          children: itemsPerPageOptions.map(option => /*#__PURE__*/(0, _jsxRuntime.jsx)("option", {
            value: option,
            children: option
          }, option))
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
          className: "text-sm text-gray-600",
          children: "\u6761"
        })]
      })]
    }), totalPages > 1 && /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "flex items-center gap-1",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(PaginationButton, {
        onClick: () => onPageChange(currentPage - 1),
        disabled: !hasPreviousPage,
        className: "mr-2",
        children: "\u4E0A\u4E00\u9875"
      }), pageNumbers.map((page, index) => /*#__PURE__*/(0, _jsxRuntime.jsx)(_react.default.Fragment, {
        children: page === '...' ? /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
          className: "px-3 py-2 text-gray-500",
          children: "..."
        }, `ellipsis-${index}`) : /*#__PURE__*/(0, _jsxRuntime.jsx)(PaginationButton, {
          onClick: () => onPageChange(page),
          active: page === currentPage,
          children: page
        })
      }, index)), /*#__PURE__*/(0, _jsxRuntime.jsx)(PaginationButton, {
        onClick: () => onPageChange(currentPage + 1),
        disabled: !hasNextPage,
        className: "ml-2",
        children: "\u4E0B\u4E00\u9875"
      })]
    }), showPageInfo && /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "text-sm text-gray-600",
      children: ["\u7B2C ", currentPage, " \u9875\uFF0C\u5171 ", totalPages, " \u9875"]
    })]
  });
};

// 默认导出
exports.Pagination = Pagination;
var _default = exports.default = Pagination;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,