20f1289421cea61e78cbc791bb94a53c
"use strict";

var _jsxFileName = "/Users/yanxiaoyu/projects/CyberNuwa/tests/components/ui/Dropdown.test.tsx";
// 模拟Button组件
_getJestObj().mock('../../../components/ui/button', () => {
  return function MockButton(_ref) {
    let {
        children,
        onClick,
        disabled,
        className
      } = _ref,
      props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
    return __jsx("button", (0, _extends2.default)({
      onClick: onClick,
      disabled: disabled,
      className: className,
      "data-testid": "dropdown-button"
    }, props, {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 10,
        columnNumber: 7
      }
    }), children);
  };
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = _interopRequireDefault(require("react"));
var _react2 = require("@testing-library/react");
var _dropdown = _interopRequireDefault(require("../../../components/ui/dropdown"));
const _excluded = ["children", "onClick", "disabled", "className"];
var __jsx = _react.default.createElement;
function _getJestObj() {
  const {
    jest
  } = require("@jest/globals");
  _getJestObj = () => jest;
  return jest;
}
describe('Dropdown Component', () => {
  const mockOptions = [{
    label: '选项 1',
    value: 'option1'
  }, {
    label: '选项 2',
    value: 'option2'
  }, {
    label: '选项 3',
    value: 'option3',
    disabled: true
  }, {
    type: 'divider'
  }, {
    label: '选项 4',
    value: 'option4',
    icon: '🌟'
  }];
  const mockOnSelect = jest.fn();
  const mockOnOpenChange = jest.fn();
  beforeEach(() => {
    jest.clearAllMocks();
  });
  describe('Basic Rendering', () => {
    it('renders dropdown trigger', () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 45,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 42,
          columnNumber: 9
        }
      }));
      expect(_react2.screen.getByText('点击我')).toBeInTheDocument();
    });
    it('renders with custom className', () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 57,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        className: "custom-dropdown",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 54,
          columnNumber: 9
        }
      }));
      const dropdown = _react2.screen.getByText('点击我').closest('div');
      expect(dropdown).toHaveClass('custom-dropdown');
    });
  });
  describe('Dropdown Menu', () => {
    it('shows dropdown menu when clicked', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 73,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 70,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        expect(_react2.screen.getByText('选项 1')).toBeInTheDocument();
        expect(_react2.screen.getByText('选项 2')).toBeInTheDocument();
        expect(_react2.screen.getByText('选项 3')).toBeInTheDocument();
        expect(_react2.screen.getByText('选项 4')).toBeInTheDocument();
      });
    });
    it('hides dropdown menu when clicking outside', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 93,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 90,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        expect(_react2.screen.getByText('选项 1')).toBeInTheDocument();
      });

      // 点击外部
      _react2.fireEvent.click(document.body);
      await (0, _react2.waitFor)(() => {
        expect(_react2.screen.queryByText('选项 1')).not.toBeInTheDocument();
      });
    });
    it('calls onOpenChange when dropdown state changes', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        onOpenChange: mockOnOpenChange,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 118,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 114,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        expect(mockOnOpenChange).toHaveBeenCalledWith(true);
      });
      _react2.fireEvent.click(document.body);
      await (0, _react2.waitFor)(() => {
        expect(mockOnOpenChange).toHaveBeenCalledWith(false);
      });
    });
  });
  describe('Option Selection', () => {
    it('calls onSelect when option is clicked', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 143,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 140,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        const option = _react2.screen.getByText('选项 1');
        _react2.fireEvent.click(option);
      });
      expect(mockOnSelect).toHaveBeenCalledWith('option1');
    });
    it('closes dropdown after selection', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 163,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 160,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        const option = _react2.screen.getByText('选项 1');
        _react2.fireEvent.click(option);
      });
      await (0, _react2.waitFor)(() => {
        expect(_react2.screen.queryByText('选项 1')).not.toBeInTheDocument();
      });
    });
    it('does not call onSelect for disabled options', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 185,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 182,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        const disabledOption = _react2.screen.getByText('选项 3');
        _react2.fireEvent.click(disabledOption);
      });
      expect(mockOnSelect).not.toHaveBeenCalled();
    });
    it('does not call onSelect for divider options', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 205,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 202,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        const divider = _react2.screen.getByText('选项 3').nextElementSibling;
        if (divider) {
          _react2.fireEvent.click(divider);
        }
      });
      expect(mockOnSelect).not.toHaveBeenCalled();
    });
  });
  describe('Option Types', () => {
    it('renders regular options correctly', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 229,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 226,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        const option = _react2.screen.getByText('选项 1');
        expect(option).toHaveClass('px-3', 'py-2');
      });
    });
    it('renders options with icons', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 247,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 244,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        expect(_react2.screen.getByText('🌟')).toBeInTheDocument();
        expect(_react2.screen.getByText('选项 4')).toBeInTheDocument();
      });
    });
    it('renders disabled options with correct styling', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 265,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 262,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        const disabledOption = _react2.screen.getByText('选项 3');
        expect(disabledOption).toHaveClass('opacity-50', 'cursor-not-allowed');
      });
    });
    it('renders dividers correctly', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 283,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 280,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        const divider = _react2.screen.getByText('选项 3').nextElementSibling;
        expect(divider).toHaveClass('border-t', 'border-gray-200');
      });
    });
  });
  describe('Placement and Alignment', () => {
    it('applies correct placement classes', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 303,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        placement: "top",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 300,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        const menu = _react2.screen.getByText('选项 1').closest('div');
        expect(menu).toHaveClass('bottom-full');
      });
    });
    it('applies correct alignment classes', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 322,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        alignment: "right",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 319,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        const menu = _react2.screen.getByText('选项 1').closest('div');
        expect(menu).toHaveClass('right-0');
      });
    });
  });
  describe('Width Control', () => {
    it('applies custom width when specified', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 343,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        width: "w-80",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 340,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        const menu = _react2.screen.getByText('选项 1').closest('div');
        expect(menu).toHaveClass('w-80');
      });
    });
    it('uses default width when not specified', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 362,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 359,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        const menu = _react2.screen.getByText('选项 1').closest('div');
        expect(menu).toHaveClass('w-56');
      });
    });
  });
  describe('Search Functionality', () => {
    it('shows search input when searchable is true', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 382,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        searchable: true,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 379,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        expect(_react2.screen.getByPlaceholderText('搜索...')).toBeInTheDocument();
      });
    });
    it('filters options based on search input', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 400,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        searchable: true,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 397,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        const searchInput = _react2.screen.getByPlaceholderText('搜索...');
        _react2.fireEvent.change(searchInput, {
          target: {
            value: '选项 1'
          }
        });
        expect(_react2.screen.getByText('选项 1')).toBeInTheDocument();
        expect(_react2.screen.queryByText('选项 2')).not.toBeInTheDocument();
      });
    });
    it('shows no results message when search has no matches', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 422,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        searchable: true,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 419,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        const searchInput = _react2.screen.getByPlaceholderText('搜索...');
        _react2.fireEvent.change(searchInput, {
          target: {
            value: '不存在'
          }
        });
        expect(_react2.screen.getByText('没有找到匹配的选项')).toBeInTheDocument();
      });
    });
  });
  describe('Keyboard Navigation', () => {
    it('closes dropdown on Escape key', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 445,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 442,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        expect(_react2.screen.getByText('选项 1')).toBeInTheDocument();
      });
      _react2.fireEvent.keyDown(document, {
        key: 'Escape'
      });
      await (0, _react2.waitFor)(() => {
        expect(_react2.screen.queryByText('选项 1')).not.toBeInTheDocument();
      });
    });
  });
  describe('Edge Cases', () => {
    it('handles empty options array', () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: [],
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 470,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 467,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      expect(_react2.screen.getByText('没有可用的选项')).toBeInTheDocument();
    });
    it('handles options with missing label', () => {
      const invalidOptions = [{
        value: 'option1'
      }, {
        label: '选项 2',
        value: 'option2'
      }];
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: invalidOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 490,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 487,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);

      // Should not crash and should render valid options
      expect(_react2.screen.getByText('选项 2')).toBeInTheDocument();
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,