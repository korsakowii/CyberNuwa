8207e7f903ec22302d1b2f161270a189
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _react2 = require("@testing-library/react");
var _tabs = _interopRequireWildcard(require("../../../components/ui/tabs"));
var _jsxFileName = "/Users/yanxiaoyu/projects/CyberNuwa/tests/components/ui/Tabs.test.tsx";
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
var __jsx = _react.default.createElement;
describe('Tabs Component', () => {
  const mockOnValueChange = jest.fn();
  beforeEach(() => {
    jest.clearAllMocks();
  });
  describe('Basic Tabs Rendering', () => {
    it('renders tabs with default value', () => {
      (0, _react2.render)(__jsx(_tabs.default, {
        value: "tab1",
        onValueChange: mockOnValueChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 15,
          columnNumber: 9
        }
      }, __jsx(_tabs.TabsList, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 16,
          columnNumber: 11
        }
      }, __jsx(_tabs.TabsTrigger, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 17,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 1"), __jsx(_tabs.TabsTrigger, {
        value: "tab2",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 18,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 2")), __jsx(_tabs.TabsContent, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 20,
          columnNumber: 11
        }
      }, "\u5185\u5BB9 1"), __jsx(_tabs.TabsContent, {
        value: "tab2",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 21,
          columnNumber: 11
        }
      }, "\u5185\u5BB9 2")));
      expect(_react2.screen.getByText('标签 1')).toBeInTheDocument();
      expect(_react2.screen.getByText('标签 2')).toBeInTheDocument();
      expect(_react2.screen.getByText('内容 1')).toBeInTheDocument();
      expect(_react2.screen.queryByText('内容 2')).not.toBeInTheDocument(); // 默认隐藏
    });
    it('renders with custom className', () => {
      (0, _react2.render)(__jsx(_tabs.default, {
        value: "tab1",
        onValueChange: mockOnValueChange,
        className: "custom-tabs",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 33,
          columnNumber: 9
        }
      }, __jsx(_tabs.TabsList, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 34,
          columnNumber: 11
        }
      }, __jsx(_tabs.TabsTrigger, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 35,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 1")), __jsx(_tabs.TabsContent, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 37,
          columnNumber: 11
        }
      }, "\u5185\u5BB9 1")));
      const tabsContainer = _react2.screen.getByText('标签 1').closest('div');
      expect(tabsContainer).toHaveClass('custom-tabs');
    });
  });
  describe('TabsList Component', () => {
    it('renders tabs list with correct styling', () => {
      (0, _react2.render)(__jsx(_tabs.default, {
        value: "tab1",
        onValueChange: mockOnValueChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 49,
          columnNumber: 9
        }
      }, __jsx(_tabs.TabsList, {
        className: "custom-list",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 50,
          columnNumber: 11
        }
      }, __jsx(_tabs.TabsTrigger, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 51,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 1"), __jsx(_tabs.TabsTrigger, {
        value: "tab2",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 52,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 2")), __jsx(_tabs.TabsContent, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 54,
          columnNumber: 11
        }
      }, "\u5185\u5BB9 1")));
      const tabsList = _react2.screen.getByText('标签 1').closest('div');
      expect(tabsList).toHaveClass('custom-list', 'inline-flex', 'h-10', 'items-center');
    });
    it('applies orientation classes correctly', () => {
      (0, _react2.render)(__jsx(_tabs.default, {
        value: "tab1",
        onValueChange: mockOnValueChange,
        orientation: "vertical",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 64,
          columnNumber: 9
        }
      }, __jsx(_tabs.TabsList, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 65,
          columnNumber: 11
        }
      }, __jsx(_tabs.TabsTrigger, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 66,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 1"), __jsx(_tabs.TabsTrigger, {
        value: "tab2",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 67,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 2")), __jsx(_tabs.TabsContent, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 69,
          columnNumber: 11
        }
      }, "\u5185\u5BB9 1")));
      const tabsList = _react2.screen.getByText('标签 1').closest('div');
      expect(tabsList).toHaveClass('flex-col', 'h-auto', 'w-auto');
    });
  });
  describe('TabsTrigger Component', () => {
    it('renders tab trigger with correct value', () => {
      (0, _react2.render)(__jsx(_tabs.default, {
        value: "tab1",
        onValueChange: mockOnValueChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 81,
          columnNumber: 9
        }
      }, __jsx(_tabs.TabsList, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 82,
          columnNumber: 11
        }
      }, __jsx(_tabs.TabsTrigger, {
        value: "tab1",
        "data-testid": "tab1-trigger",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 83,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 1"), __jsx(_tabs.TabsTrigger, {
        value: "tab2",
        "data-testid": "tab2-trigger",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 84,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 2")), __jsx(_tabs.TabsContent, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 86,
          columnNumber: 11
        }
      }, "\u5185\u5BB9 1"), __jsx(_tabs.TabsContent, {
        value: "tab2",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 87,
          columnNumber: 11
        }
      }, "\u5185\u5BB9 2")));
      const tab1Trigger = _react2.screen.getByTestId('tab1-trigger');
      const tab2Trigger = _react2.screen.getByTestId('tab2-trigger');
      expect(tab1Trigger).toHaveAttribute('data-state', 'active');
      expect(tab2Trigger).toHaveAttribute('data-state', 'inactive');
    });
    it('applies custom className to trigger', () => {
      (0, _react2.render)(__jsx(_tabs.default, {
        value: "tab1",
        onValueChange: mockOnValueChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 100,
          columnNumber: 9
        }
      }, __jsx(_tabs.TabsList, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 101,
          columnNumber: 11
        }
      }, __jsx(_tabs.TabsTrigger, {
        value: "tab1",
        className: "custom-trigger",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 102,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 1")), __jsx(_tabs.TabsContent, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 104,
          columnNumber: 11
        }
      }, "\u5185\u5BB9 1")));
      const trigger = _react2.screen.getByText('标签 1');
      expect(trigger).toHaveClass('custom-trigger');
    });
    it('calls onValueChange when clicked', () => {
      (0, _react2.render)(__jsx(_tabs.default, {
        value: "tab1",
        onValueChange: mockOnValueChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 114,
          columnNumber: 9
        }
      }, __jsx(_tabs.TabsList, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 115,
          columnNumber: 11
        }
      }, __jsx(_tabs.TabsTrigger, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 116,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 1"), __jsx(_tabs.TabsTrigger, {
        value: "tab2",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 117,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 2")), __jsx(_tabs.TabsContent, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 119,
          columnNumber: 11
        }
      }, "\u5185\u5BB9 1"), __jsx(_tabs.TabsContent, {
        value: "tab2",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 120,
          columnNumber: 11
        }
      }, "\u5185\u5BB9 2")));
      const tab2Trigger = _react2.screen.getByText('标签 2');
      _react2.fireEvent.click(tab2Trigger);
      expect(mockOnValueChange).toHaveBeenCalledWith('tab2');
    });
    it('applies disabled state correctly', () => {
      (0, _react2.render)(__jsx(_tabs.default, {
        value: "tab1",
        onValueChange: mockOnValueChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 132,
          columnNumber: 9
        }
      }, __jsx(_tabs.TabsList, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 133,
          columnNumber: 11
        }
      }, __jsx(_tabs.TabsTrigger, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 134,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 1"), __jsx(_tabs.TabsTrigger, {
        value: "tab2",
        disabled: true,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 135,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 2")), __jsx(_tabs.TabsContent, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 137,
          columnNumber: 11
        }
      }, "\u5185\u5BB9 1")));
      const disabledTrigger = _react2.screen.getByText('标签 2');
      expect(disabledTrigger).toBeDisabled();
      expect(disabledTrigger).toHaveClass('pointer-events-none', 'opacity-50');
    });
    it('does not call onValueChange when disabled', () => {
      (0, _react2.render)(__jsx(_tabs.default, {
        value: "tab1",
        onValueChange: mockOnValueChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 148,
          columnNumber: 9
        }
      }, __jsx(_tabs.TabsList, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 149,
          columnNumber: 11
        }
      }, __jsx(_tabs.TabsTrigger, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 150,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 1"), __jsx(_tabs.TabsTrigger, {
        value: "tab2",
        disabled: true,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 151,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 2")), __jsx(_tabs.TabsContent, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 153,
          columnNumber: 11
        }
      }, "\u5185\u5BB9 1")));
      const disabledTrigger = _react2.screen.getByText('标签 2');
      _react2.fireEvent.click(disabledTrigger);
      expect(mockOnValueChange).not.toHaveBeenCalled();
    });
  });
  describe('TabsContent Component', () => {
    it('shows content for active tab', () => {
      (0, _react2.render)(__jsx(_tabs.default, {
        value: "tab1",
        onValueChange: mockOnValueChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 167,
          columnNumber: 9
        }
      }, __jsx(_tabs.TabsList, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 168,
          columnNumber: 11
        }
      }, __jsx(_tabs.TabsTrigger, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 169,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 1"), __jsx(_tabs.TabsTrigger, {
        value: "tab2",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 170,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 2")), __jsx(_tabs.TabsContent, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 172,
          columnNumber: 11
        }
      }, "\u5185\u5BB9 1"), __jsx(_tabs.TabsContent, {
        value: "tab2",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 173,
          columnNumber: 11
        }
      }, "\u5185\u5BB9 2")));
      expect(_react2.screen.getByText('内容 1')).toBeInTheDocument();
      expect(_react2.screen.queryByText('内容 2')).not.toBeInTheDocument();
    });
    it('shows content when tab becomes active', () => {
      const {
        rerender
      } = (0, _react2.render)(__jsx(_tabs.default, {
        value: "tab1",
        onValueChange: mockOnValueChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 183,
          columnNumber: 9
        }
      }, __jsx(_tabs.TabsList, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 184,
          columnNumber: 11
        }
      }, __jsx(_tabs.TabsTrigger, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 185,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 1"), __jsx(_tabs.TabsTrigger, {
        value: "tab2",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 186,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 2")), __jsx(_tabs.TabsContent, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 188,
          columnNumber: 11
        }
      }, "\u5185\u5BB9 1"), __jsx(_tabs.TabsContent, {
        value: "tab2",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 189,
          columnNumber: 11
        }
      }, "\u5185\u5BB9 2")));

      // 切换到标签 2
      rerender(__jsx(_tabs.default, {
        value: "tab2",
        onValueChange: mockOnValueChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 195,
          columnNumber: 9
        }
      }, __jsx(_tabs.TabsList, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 196,
          columnNumber: 11
        }
      }, __jsx(_tabs.TabsTrigger, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 197,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 1"), __jsx(_tabs.TabsTrigger, {
        value: "tab2",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 198,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 2")), __jsx(_tabs.TabsContent, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 200,
          columnNumber: 11
        }
      }, "\u5185\u5BB9 1"), __jsx(_tabs.TabsContent, {
        value: "tab2",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 201,
          columnNumber: 11
        }
      }, "\u5185\u5BB9 2")));
      expect(_react2.screen.queryByText('内容 1')).not.toBeInTheDocument();
      expect(_react2.screen.getByText('内容 2')).toBeInTheDocument();
    });
    it('applies custom className to content', () => {
      (0, _react2.render)(__jsx(_tabs.default, {
        value: "tab1",
        onValueChange: mockOnValueChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 211,
          columnNumber: 9
        }
      }, __jsx(_tabs.TabsList, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 212,
          columnNumber: 11
        }
      }, __jsx(_tabs.TabsTrigger, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 213,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 1")), __jsx(_tabs.TabsContent, {
        value: "tab1",
        className: "custom-content",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 215,
          columnNumber: 11
        }
      }, "\u5185\u5BB9 1")));
      const content = _react2.screen.getByText('内容 1');
      expect(content).toHaveClass('custom-content');
    });
    it('applies correct data attributes', () => {
      (0, _react2.render)(__jsx(_tabs.default, {
        value: "tab1",
        onValueChange: mockOnValueChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 225,
          columnNumber: 9
        }
      }, __jsx(_tabs.TabsList, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 226,
          columnNumber: 11
        }
      }, __jsx(_tabs.TabsTrigger, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 227,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 1"), __jsx(_tabs.TabsTrigger, {
        value: "tab2",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 228,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 2")), __jsx(_tabs.TabsContent, {
        value: "tab1",
        "data-testid": "tab1-content",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 230,
          columnNumber: 11
        }
      }, "\u5185\u5BB9 1"), __jsx(_tabs.TabsContent, {
        value: "tab2",
        "data-testid": "tab2-content",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 231,
          columnNumber: 11
        }
      }, "\u5185\u5BB9 2")));
      const tab1Content = _react2.screen.getByTestId('tab1-content');
      const tab2Content = _react2.screen.getByTestId('tab2-content');
      expect(tab1Content).toHaveAttribute('data-state', 'active');
      expect(tab2Content).toHaveAttribute('data-state', 'inactive');
    });
  });
  describe('TabsGroup Component', () => {
    it('renders tabs group with correct styling', () => {
      (0, _react2.render)(__jsx(_tabs.default, {
        value: "tab1",
        onValueChange: mockOnValueChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 246,
          columnNumber: 9
        }
      }, __jsx(_tabs.TabsGroup, {
        className: "custom-group",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 247,
          columnNumber: 11
        }
      }, __jsx(_tabs.TabsList, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 248,
          columnNumber: 13
        }
      }, __jsx(_tabs.TabsTrigger, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 249,
          columnNumber: 15
        }
      }, "\u6807\u7B7E 1"), __jsx(_tabs.TabsTrigger, {
        value: "tab2",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 250,
          columnNumber: 15
        }
      }, "\u6807\u7B7E 2")), __jsx(_tabs.TabsContent, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 252,
          columnNumber: 13
        }
      }, "\u5185\u5BB9 1"), __jsx(_tabs.TabsContent, {
        value: "tab2",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 253,
          columnNumber: 13
        }
      }, "\u5185\u5BB9 2"))));
      const group = _react2.screen.getByText('标签 1').closest('div');
      expect(group).toHaveClass('custom-group', 'space-y-4');
    });
    it('applies orientation classes to group', () => {
      (0, _react2.render)(__jsx(_tabs.default, {
        value: "tab1",
        onValueChange: mockOnValueChange,
        orientation: "vertical",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 264,
          columnNumber: 9
        }
      }, __jsx(_tabs.TabsGroup, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 265,
          columnNumber: 11
        }
      }, __jsx(_tabs.TabsList, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 266,
          columnNumber: 13
        }
      }, __jsx(_tabs.TabsTrigger, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 267,
          columnNumber: 15
        }
      }, "\u6807\u7B7E 1"), __jsx(_tabs.TabsTrigger, {
        value: "tab2",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 268,
          columnNumber: 15
        }
      }, "\u6807\u7B7E 2")), __jsx(_tabs.TabsContent, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 270,
          columnNumber: 13
        }
      }, "\u5185\u5BB9 1"), __jsx(_tabs.TabsContent, {
        value: "tab2",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 271,
          columnNumber: 13
        }
      }, "\u5185\u5BB9 2"))));
      const group = _react2.screen.getByText('标签 1').closest('div');
      expect(group).toHaveClass('flex', 'space-x-4', 'space-y-0');
    });
  });
  describe('Orientation Support', () => {
    it('applies horizontal orientation by default', () => {
      (0, _react2.render)(__jsx(_tabs.default, {
        value: "tab1",
        onValueChange: mockOnValueChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 284,
          columnNumber: 9
        }
      }, __jsx(_tabs.TabsList, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 285,
          columnNumber: 11
        }
      }, __jsx(_tabs.TabsTrigger, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 286,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 1"), __jsx(_tabs.TabsTrigger, {
        value: "tab2",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 287,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 2")), __jsx(_tabs.TabsContent, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 289,
          columnNumber: 11
        }
      }, "\u5185\u5BB9 1")));
      const tabsList = _react2.screen.getByText('标签 1').closest('div');
      expect(tabsList).toHaveClass('inline-flex', 'h-10');
    });
    it('applies vertical orientation when specified', () => {
      (0, _react2.render)(__jsx(_tabs.default, {
        value: "tab1",
        onValueChange: mockOnValueChange,
        orientation: "vertical",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 299,
          columnNumber: 9
        }
      }, __jsx(_tabs.TabsList, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 300,
          columnNumber: 11
        }
      }, __jsx(_tabs.TabsTrigger, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 301,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 1"), __jsx(_tabs.TabsTrigger, {
        value: "tab2",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 302,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 2")), __jsx(_tabs.TabsContent, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 304,
          columnNumber: 11
        }
      }, "\u5185\u5BB9 1")));
      const tabsList = _react2.screen.getByText('标签 1').closest('div');
      expect(tabsList).toHaveClass('flex-col', 'h-auto', 'w-auto');
    });
  });
  describe('Accessibility', () => {
    it('applies correct ARIA attributes', () => {
      (0, _react2.render)(__jsx(_tabs.default, {
        value: "tab1",
        onValueChange: mockOnValueChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 316,
          columnNumber: 9
        }
      }, __jsx(_tabs.TabsList, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 317,
          columnNumber: 11
        }
      }, __jsx(_tabs.TabsTrigger, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 318,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 1"), __jsx(_tabs.TabsTrigger, {
        value: "tab2",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 319,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 2")), __jsx(_tabs.TabsContent, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 321,
          columnNumber: 11
        }
      }, "\u5185\u5BB9 1"), __jsx(_tabs.TabsContent, {
        value: "tab2",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 322,
          columnNumber: 11
        }
      }, "\u5185\u5BB9 2")));
      const tab1Trigger = _react2.screen.getByText('标签 1');
      const tab2Trigger = _react2.screen.getByText('标签 2');
      expect(tab1Trigger).toHaveAttribute('aria-selected', 'true');
      expect(tab2Trigger).toHaveAttribute('aria-selected', 'false');
    });
    it('applies role attributes correctly', () => {
      (0, _react2.render)(__jsx(_tabs.default, {
        value: "tab1",
        onValueChange: mockOnValueChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 335,
          columnNumber: 9
        }
      }, __jsx(_tabs.TabsList, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 336,
          columnNumber: 11
        }
      }, __jsx(_tabs.TabsTrigger, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 337,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 1")), __jsx(_tabs.TabsContent, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 339,
          columnNumber: 11
        }
      }, "\u5185\u5BB9 1")));
      const tabsList = _react2.screen.getByText('标签 1').closest('div');
      const content = _react2.screen.getByText('内容 1');
      expect(tabsList).toHaveAttribute('role', 'tablist');
      expect(content).toHaveAttribute('role', 'tabpanel');
    });
  });
  describe('Edge Cases', () => {
    it('handles no tabs gracefully', () => {
      (0, _react2.render)(__jsx(_tabs.default, {
        value: "tab1",
        onValueChange: mockOnValueChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 354,
          columnNumber: 9
        }
      }, __jsx(_tabs.TabsList, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 355,
          columnNumber: 11
        }
      })));

      // Should render without crashing
      expect(_react2.screen.getByRole('tablist')).toBeInTheDocument();
    });
    it('handles no content gracefully', () => {
      (0, _react2.render)(__jsx(_tabs.default, {
        value: "tab1",
        onValueChange: mockOnValueChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 365,
          columnNumber: 9
        }
      }, __jsx(_tabs.TabsList, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 366,
          columnNumber: 11
        }
      }, __jsx(_tabs.TabsTrigger, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 367,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 1"))));

      // Should render without crashing
      expect(_react2.screen.getByText('标签 1')).toBeInTheDocument();
    });
    it('handles invalid value gracefully', () => {
      (0, _react2.render)(__jsx(_tabs.default, {
        value: "invalid",
        onValueChange: mockOnValueChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 378,
          columnNumber: 9
        }
      }, __jsx(_tabs.TabsList, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 379,
          columnNumber: 11
        }
      }, __jsx(_tabs.TabsTrigger, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 380,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 1"), __jsx(_tabs.TabsTrigger, {
        value: "tab2",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 381,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 2")), __jsx(_tabs.TabsContent, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 383,
          columnNumber: 11
        }
      }, "\u5185\u5BB9 1"), __jsx(_tabs.TabsContent, {
        value: "tab2",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 384,
          columnNumber: 11
        }
      }, "\u5185\u5BB9 2")));

      // Should render without crashing, no tab should be active
      expect(_react2.screen.getByText('标签 1')).toHaveAttribute('aria-selected', 'false');
      expect(_react2.screen.getByText('标签 2')).toHaveAttribute('aria-selected', 'false');
    });
  });
  describe('Keyboard Navigation', () => {
    it('supports keyboard navigation', () => {
      (0, _react2.render)(__jsx(_tabs.default, {
        value: "tab1",
        onValueChange: mockOnValueChange,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 397,
          columnNumber: 9
        }
      }, __jsx(_tabs.TabsList, {
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 398,
          columnNumber: 11
        }
      }, __jsx(_tabs.TabsTrigger, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 399,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 1"), __jsx(_tabs.TabsTrigger, {
        value: "tab2",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 400,
          columnNumber: 13
        }
      }, "\u6807\u7B7E 2")), __jsx(_tabs.TabsContent, {
        value: "tab1",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 402,
          columnNumber: 11
        }
      }, "\u5185\u5BB9 1"), __jsx(_tabs.TabsContent, {
        value: "tab2",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 403,
          columnNumber: 11
        }
      }, "\u5185\u5BB9 2")));
      const tab1Trigger = _react2.screen.getByText('标签 1');
      tab1Trigger.focus();

      // 按右箭头键应该切换到下一个标签
      _react2.fireEvent.keyDown(tab1Trigger, {
        key: 'ArrowRight'
      });
      expect(mockOnValueChange).toHaveBeenCalledWith('tab2');
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,