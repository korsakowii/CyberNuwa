{"version":3,"names":["cov_2ba82t3x9j","actualCoverage","React","cn","Button","s","PaginationButton","onClick","disabled","b","active","children","className","f","__jsx","variant","size","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Pagination","info","onPageChange","onItemsPerPageChange","showItemsPerPage","itemsPerPageOptions","showTotal","showPageInfo","currentPage","totalPages","totalItems","itemsPerPage","hasNextPage","hasPreviousPage","getPageNumbers","pages","maxVisiblePages","i","push","pageNumbers","value","onChange","e","Number","target","map","option","key","page","index","Fragment"],"sources":["pagination.tsx"],"sourcesContent":["import React from 'react';\nimport { cn } from '../../lib/utils';\nimport Button from './button';\n\n// 分页信息接口\nexport interface PaginationInfo {\n  currentPage: number;\n  totalPages: number;\n  totalItems: number;\n  itemsPerPage: number;\n  hasNextPage: boolean;\n  hasPreviousPage: boolean;\n}\n\n// 分页组件属性\ninterface PaginationProps {\n  info: PaginationInfo;\n  onPageChange: (page: number) => void;\n  onItemsPerPageChange?: (itemsPerPage: number) => void;\n  className?: string;\n  showItemsPerPage?: boolean;\n  itemsPerPageOptions?: number[];\n  showTotal?: boolean;\n  showPageInfo?: boolean;\n}\n\n// 分页按钮组件\ninterface PaginationButtonProps {\n  onClick: () => void;\n  disabled?: boolean;\n  active?: boolean;\n  children: React.ReactNode;\n  className?: string;\n}\n\nconst PaginationButton: React.FC<PaginationButtonProps> = ({\n  onClick,\n  disabled = false,\n  active = false,\n  children,\n  className\n}) => (\n  <Button\n    variant={active ? 'default' : 'outline'}\n    size=\"sm\"\n    onClick={onClick}\n    disabled={disabled}\n    className={cn(\n      'min-w-[40px] h-10 px-3',\n      active && 'bg-primary text-primary-foreground',\n      className\n    )}\n  >\n    {children}\n  </Button>\n);\n\n// 主分页组件\nexport const Pagination: React.FC<PaginationProps> = ({\n  info,\n  onPageChange,\n  onItemsPerPageChange,\n  className,\n  showItemsPerPage = true,\n  itemsPerPageOptions = [10, 20, 50, 100],\n  showTotal = true,\n  showPageInfo = true\n}) => {\n  const { currentPage, totalPages, totalItems, itemsPerPage, hasNextPage, hasPreviousPage } = info;\n\n  // 生成页码数组\n  const getPageNumbers = () => {\n    const pages: (number | string)[] = [];\n    const maxVisiblePages = 7;\n\n    if (totalPages <= maxVisiblePages) {\n      // 如果总页数少于等于最大可见页数，显示所有页码\n      for (let i = 1; i <= totalPages; i++) {\n        pages.push(i);\n      }\n    } else {\n      // 否则显示部分页码，包含省略号\n      if (currentPage <= 4) {\n        // 当前页在前4页\n        for (let i = 1; i <= 5; i++) {\n          pages.push(i);\n        }\n        pages.push('...');\n        pages.push(totalPages);\n      } else if (currentPage >= totalPages - 3) {\n        // 当前页在后4页\n        pages.push(1);\n        pages.push('...');\n        for (let i = totalPages - 4; i <= totalPages; i++) {\n          pages.push(i);\n        }\n      } else {\n        // 当前页在中间\n        pages.push(1);\n        pages.push('...');\n        for (let i = currentPage - 1; i <= currentPage + 1; i++) {\n          pages.push(i);\n        }\n        pages.push('...');\n        pages.push(totalPages);\n      }\n    }\n\n    return pages;\n  };\n\n  const pageNumbers = getPageNumbers();\n\n  return (\n    <div className={cn('flex flex-col sm:flex-row items-center justify-between gap-4', className)}>\n      {/* 左侧信息 */}\n      <div className=\"flex items-center gap-4\">\n        {showTotal && (\n          <div className=\"text-sm text-gray-600\">\n            共 {totalItems} 条记录\n          </div>\n        )}\n        \n        {showItemsPerPage && onItemsPerPageChange && (\n          <div className=\"flex items-center gap-2\">\n            <span className=\"text-sm text-gray-600\">每页</span>\n            <select\n              value={itemsPerPage}\n              onChange={(e) => onItemsPerPageChange(Number(e.target.value))}\n              className=\"border border-gray-300 rounded-md px-2 py-1 text-sm\"\n            >\n              {itemsPerPageOptions.map(option => (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              ))}\n            </select>\n            <span className=\"text-sm text-gray-600\">条</span>\n          </div>\n        )}\n      </div>\n\n      {/* 分页导航 */}\n      <div className=\"flex items-center gap-1\">\n        {/* 上一页 */}\n        <PaginationButton\n          onClick={() => onPageChange(currentPage - 1)}\n          disabled={!hasPreviousPage}\n          className=\"mr-2\"\n        >\n          上一页\n        </PaginationButton>\n\n        {/* 页码 */}\n        {pageNumbers.map((page, index) => (\n          <React.Fragment key={index}>\n            {page === '...' ? (\n              <span className=\"px-3 py-2 text-gray-500\">...</span>\n            ) : (\n              <PaginationButton\n                onClick={() => onPageChange(page as number)}\n                active={page === currentPage}\n              >\n                {page}\n              </PaginationButton>\n            )}\n          </React.Fragment>\n        ))}\n\n        {/* 下一页 */}\n        <PaginationButton\n          onClick={() => onPageChange(currentPage + 1)}\n          disabled={!hasNextPage}\n          className=\"ml-2\"\n        >\n          下一页\n        </PaginationButton>\n      </div>\n\n      {/* 右侧页面信息 */}\n      {showPageInfo && (\n        <div className=\"text-sm text-gray-600\">\n          第 {currentPage} 页，共 {totalPages} 页\n        </div>\n      )}\n    </div>\n  );\n};\n\n// 默认导出\nexport default Pagination;\n"],"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","ignoreList":[]}