86ec75d98161820d8a416bafa4e4364f
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _react2 = require("@testing-library/react");
var _table = require("../../../components/ui/table");
var _jsxRuntime = require("react/jsx-runtime");
describe('Table Components', () => {
  const mockData = [{
    id: 1,
    name: 'John Doe',
    email: 'john@example.com'
  }, {
    id: 2,
    name: 'Jane Smith',
    email: 'jane@example.com'
  }];
  describe('Table', () => {
    it('renders with default variant', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_table.Table, {
        "data-testid": "table",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)("tbody", {
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("tr", {
            children: /*#__PURE__*/(0, _jsxRuntime.jsx)("td", {
              children: "Test"
            })
          })
        })
      }));
      const table = _react2.screen.getByTestId('table');
      expect(table).toBeInTheDocument();
      expect(table).toHaveClass('w-full', 'border-collapse');
    });
    it('renders with bordered variant', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_table.Table, {
        variant: "bordered",
        "data-testid": "table",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)("tbody", {
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("tr", {
            children: /*#__PURE__*/(0, _jsxRuntime.jsx)("td", {
              children: "Test"
            })
          })
        })
      }));
      const table = _react2.screen.getByTestId('table');
      expect(table).toHaveClass('border', 'border-gray-200');
    });
    it('applies custom className', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_table.Table, {
        className: "custom-class",
        "data-testid": "table",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)("tbody", {
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("tr", {
            children: /*#__PURE__*/(0, _jsxRuntime.jsx)("td", {
              children: "Test"
            })
          })
        })
      }));
      const table = _react2.screen.getByTestId('table');
      expect(table).toHaveClass('custom-class');
    });
  });
  describe('TableHeader', () => {
    it('renders with correct styling', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_table.Table, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableHeader, {
          "data-testid": "header",
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("tr", {
            children: /*#__PURE__*/(0, _jsxRuntime.jsx)("th", {
              children: "Header"
            })
          })
        })
      }));
      const header = _react2.screen.getByTestId('header');
      expect(header).toBeInTheDocument();
      expect(header).toHaveClass('bg-gray-50');
    });
  });
  describe('TableBody', () => {
    it('renders with correct styling', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_table.Table, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableBody, {
          "data-testid": "body",
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("tr", {
            children: /*#__PURE__*/(0, _jsxRuntime.jsx)("td", {
              children: "Body"
            })
          })
        })
      }));
      const body = _react2.screen.getByTestId('body');
      expect(body).toBeInTheDocument();
      expect(body).toHaveClass('divide-y', 'divide-gray-200');
    });
  });
  describe('TableRow', () => {
    it('renders with hover effect by default', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_table.Table, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableBody, {
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableRow, {
            "data-testid": "row",
            children: /*#__PURE__*/(0, _jsxRuntime.jsx)("td", {
              children: "Test"
            })
          })
        })
      }));
      const row = _react2.screen.getByTestId('row');
      expect(row).toHaveClass('hover:bg-gray-50');
    });
    it('renders without hover effect when disabled', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_table.Table, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableBody, {
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableRow, {
            hover: false,
            "data-testid": "row",
            children: /*#__PURE__*/(0, _jsxRuntime.jsx)("td", {
              children: "Test"
            })
          })
        })
      }));
      const row = _react2.screen.getByTestId('row');
      expect(row).not.toHaveClass('hover:bg-gray-50');
    });
    it('renders with selected state', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_table.Table, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableBody, {
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableRow, {
            selected: true,
            "data-testid": "row",
            children: /*#__PURE__*/(0, _jsxRuntime.jsx)("td", {
              children: "Test"
            })
          })
        })
      }));
      const row = _react2.screen.getByTestId('row');
      expect(row).toHaveClass('bg-blue-50');
    });
  });
  describe('TableHead', () => {
    it('renders with default styling', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_table.Table, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableHeader, {
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("tr", {
            children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableHead, {
              "data-testid": "head",
              children: "Name"
            })
          })
        })
      }));
      const head = _react2.screen.getByTestId('head');
      expect(head).toBeInTheDocument();
      expect(head).toHaveClass('px-6', 'py-3', 'text-left');
    });
    it('renders as sortable when specified', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_table.Table, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableHeader, {
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("tr", {
            children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableHead, {
              sortable: true,
              "data-testid": "head",
              children: "Name"
            })
          })
        })
      }));
      const head = _react2.screen.getByTestId('head');
      expect(head).toHaveClass('cursor-pointer', 'select-none');
    });
    it('shows sort direction indicators', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_table.Table, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableHeader, {
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("tr", {
            children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableHead, {
              sortable: true,
              sortDirection: "asc",
              "data-testid": "head",
              children: "Name"
            })
          })
        })
      }));
      const head = _react2.screen.getByTestId('head');
      expect(head).toHaveTextContent('â†‘');
    });
    it('calls onSort when clicked', () => {
      const mockOnSort = jest.fn();
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_table.Table, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableHeader, {
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("tr", {
            children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableHead, {
              sortable: true,
              onSort: mockOnSort,
              "data-testid": "head",
              children: "Name"
            })
          })
        })
      }));
      const head = _react2.screen.getByTestId('head');
      _react2.fireEvent.click(head);
      expect(mockOnSort).toHaveBeenCalledTimes(1);
    });
  });
  describe('TableCell', () => {
    it('renders with default alignment', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_table.Table, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableBody, {
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableRow, {
            children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableCell, {
              "data-testid": "cell",
              children: "Test"
            })
          })
        })
      }));
      const cell = _react2.screen.getByTestId('cell');
      expect(cell).toBeInTheDocument();
      expect(cell).toHaveClass('text-left');
    });
    it('renders with center alignment', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_table.Table, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableBody, {
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableRow, {
            children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableCell, {
              align: "center",
              "data-testid": "cell",
              children: "Test"
            })
          })
        })
      }));
      const cell = _react2.screen.getByTestId('cell');
      expect(cell).toHaveClass('text-center');
    });
    it('renders with right alignment', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_table.Table, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableBody, {
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableRow, {
            children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableCell, {
              align: "right",
              "data-testid": "cell",
              children: "Test"
            })
          })
        })
      }));
      const cell = _react2.screen.getByTestId('cell');
      expect(cell).toHaveClass('text-right');
    });
  });
  describe('TableFooter', () => {
    it('renders with correct styling', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_table.Table, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableFooter, {
          "data-testid": "footer",
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("tr", {
            children: /*#__PURE__*/(0, _jsxRuntime.jsx)("td", {
              children: "Footer"
            })
          })
        })
      }));
      const footer = _react2.screen.getByTestId('footer');
      expect(footer).toBeInTheDocument();
      expect(footer).toHaveClass('bg-gray-50');
    });
  });
  describe('TableCaption', () => {
    it('renders with correct styling', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsxs)(_table.Table, {
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableCaption, {
          "data-testid": "caption",
          children: "Table Description"
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("tbody", {
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("tr", {
            children: /*#__PURE__*/(0, _jsxRuntime.jsx)("td", {
              children: "Test"
            })
          })
        })]
      }));
      const caption = _react2.screen.getByTestId('caption');
      expect(caption).toBeInTheDocument();
      expect(caption).toHaveClass('mt-4', 'text-sm', 'text-gray-500');
    });
  });
  describe('Complete Table Integration', () => {
    it('renders a complete table with all components', () => {
      (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsxs)(_table.Table, {
        "data-testid": "table",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableCaption, {
          children: "User List"
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableHeader, {
          children: /*#__PURE__*/(0, _jsxRuntime.jsxs)(_table.TableRow, {
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableHead, {
              children: "ID"
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableHead, {
              children: "Name"
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableHead, {
              children: "Email"
            })]
          })
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableBody, {
          children: mockData.map(user => /*#__PURE__*/(0, _jsxRuntime.jsxs)(_table.TableRow, {
            children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableCell, {
              children: user.id
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableCell, {
              children: user.name
            }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableCell, {
              children: user.email
            })]
          }, user.id))
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableFooter, {
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_table.TableRow, {
            children: /*#__PURE__*/(0, _jsxRuntime.jsxs)(_table.TableCell, {
              colSpan: 3,
              children: ["Total: ", mockData.length, " users"]
            })
          })
        })]
      }));
      expect(_react2.screen.getByTestId('table')).toBeInTheDocument();
      expect(_react2.screen.getByText('User List')).toBeInTheDocument();
      expect(_react2.screen.getByText('ID')).toBeInTheDocument();
      expect(_react2.screen.getByText('John Doe')).toBeInTheDocument();
      expect(_react2.screen.getByText('jane@example.com')).toBeInTheDocument();
      expect(_react2.screen.getByText('Total: 2 users')).toBeInTheDocument();
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,