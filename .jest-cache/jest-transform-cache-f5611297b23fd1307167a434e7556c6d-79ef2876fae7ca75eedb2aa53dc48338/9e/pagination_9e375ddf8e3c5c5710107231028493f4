26869f7e750ce18479d7da958490c61e
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Pagination = void 0;
var _react = _interopRequireDefault(require("react"));
var _utils = require("../../lib/utils");
var _button = require("@/components/ui/button");
var _jsxFileName = "/Users/yanxiaoyu/projects/CyberNuwa/components/ui/pagination.tsx";
var __jsx = _react.default.createElement;
// 分页信息接口

// 分页组件属性

// 分页按钮组件

const PaginationButton = ({
  onClick,
  disabled = false,
  active = false,
  children,
  className
}) => __jsx(_button.Button, {
  variant: active ? 'primary' : 'outline',
  size: "sm",
  onClick: onClick,
  disabled: disabled,
  className: (0, _utils.cn)('min-w-[40px] h-10 px-3', active && 'bg-primary text-primary-foreground', className),
  __self: void 0,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 43,
    columnNumber: 3
  }
}, children);

// 主分页组件
const Pagination = ({
  info,
  onPageChange,
  onItemsPerPageChange,
  className,
  showItemsPerPage = true,
  itemsPerPageOptions = [10, 20, 50, 100],
  showTotal = true,
  showPageInfo = true
}) => {
  const {
    currentPage,
    totalPages,
    totalItems,
    itemsPerPage,
    hasNextPage,
    hasPreviousPage
  } = info;

  // 生成页码数组
  const getPageNumbers = () => {
    const pages = [];
    const maxVisiblePages = 7;
    if (totalPages <= maxVisiblePages) {
      // 如果总页数少于等于最大可见页数，显示所有页码
      for (let i = 1; i <= totalPages; i++) {
        pages.push(i);
      }
    } else {
      // 否则显示部分页码，包含省略号
      if (currentPage <= 4) {
        // 当前页在前4页
        for (let i = 1; i <= 5; i++) {
          pages.push(i);
        }
        pages.push('...');
        pages.push(totalPages);
      } else if (currentPage >= totalPages - 3) {
        // 当前页在后4页
        pages.push(1);
        pages.push('...');
        for (let i = totalPages - 4; i <= totalPages; i++) {
          pages.push(i);
        }
      } else {
        // 当前页在中间
        pages.push(1);
        pages.push('...');
        for (let i = currentPage - 1; i <= currentPage + 1; i++) {
          pages.push(i);
        }
        pages.push('...');
        pages.push(totalPages);
      }
    }
    return pages;
  };
  const pageNumbers = getPageNumbers();
  return __jsx("div", {
    className: (0, _utils.cn)('flex flex-col sm:flex-row items-center justify-between gap-4', className),
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 115,
      columnNumber: 5
    }
  }, __jsx("div", {
    className: "flex items-center gap-4",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 117,
      columnNumber: 7
    }
  }, showTotal && __jsx("div", {
    className: "text-sm text-gray-600",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 119,
      columnNumber: 11
    }
  }, "\u5171 ", totalItems, " \u6761\u8BB0\u5F55"), showItemsPerPage && onItemsPerPageChange && __jsx("div", {
    className: "flex items-center gap-2",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 125,
      columnNumber: 11
    }
  }, __jsx("span", {
    className: "text-sm text-gray-600",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 126,
      columnNumber: 13
    }
  }, "\u6BCF\u9875"), __jsx("select", {
    value: itemsPerPage,
    onChange: e => onItemsPerPageChange(Number(e.target.value)),
    className: "border border-gray-300 rounded-md px-2 py-1 text-sm",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 127,
      columnNumber: 13
    }
  }, itemsPerPageOptions.map(option => __jsx("option", {
    key: option,
    value: option,
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 133,
      columnNumber: 17
    }
  }, option))), __jsx("span", {
    className: "text-sm text-gray-600",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 138,
      columnNumber: 13
    }
  }, "\u6761"))), totalPages > 1 && __jsx("div", {
    className: "flex items-center gap-1",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 145,
      columnNumber: 9
    }
  }, __jsx(PaginationButton, {
    onClick: () => onPageChange(currentPage - 1),
    disabled: !hasPreviousPage,
    className: "mr-2",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 147,
      columnNumber: 11
    }
  }, "\u4E0A\u4E00\u9875"), pageNumbers.map((page, index) => __jsx(_react.default.Fragment, {
    key: index,
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 157,
      columnNumber: 13
    }
  }, page === '...' ? __jsx("span", {
    key: `ellipsis-${index}`,
    className: "px-3 py-2 text-gray-500",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 159,
      columnNumber: 17
    }
  }, "...") : __jsx(PaginationButton, {
    onClick: () => onPageChange(page),
    active: page === currentPage,
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 161,
      columnNumber: 17
    }
  }, page))), __jsx(PaginationButton, {
    onClick: () => onPageChange(currentPage + 1),
    disabled: !hasNextPage,
    className: "ml-2",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 172,
      columnNumber: 11
    }
  }, "\u4E0B\u4E00\u9875")), showPageInfo && __jsx("div", {
    className: "text-sm text-gray-600",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 184,
      columnNumber: 9
    }
  }, "\u7B2C ", currentPage, " \u9875\uFF0C\u5171 ", totalPages, " \u9875"));
};

// 默认导出
exports.Pagination = Pagination;
var _default = exports.default = Pagination;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl91dGlscyIsIl9idXR0b24iLCJfanN4RmlsZU5hbWUiLCJfX2pzeCIsImRlZmF1bHQiLCJjcmVhdGVFbGVtZW50IiwiUGFnaW5hdGlvbkJ1dHRvbiIsIm9uQ2xpY2siLCJkaXNhYmxlZCIsImFjdGl2ZSIsImNoaWxkcmVuIiwiY2xhc3NOYW1lIiwiQnV0dG9uIiwidmFyaWFudCIsInNpemUiLCJjbiIsIl9fc2VsZiIsIl9fc291cmNlIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwiY29sdW1uTnVtYmVyIiwiUGFnaW5hdGlvbiIsImluZm8iLCJvblBhZ2VDaGFuZ2UiLCJvbkl0ZW1zUGVyUGFnZUNoYW5nZSIsInNob3dJdGVtc1BlclBhZ2UiLCJpdGVtc1BlclBhZ2VPcHRpb25zIiwic2hvd1RvdGFsIiwic2hvd1BhZ2VJbmZvIiwiY3VycmVudFBhZ2UiLCJ0b3RhbFBhZ2VzIiwidG90YWxJdGVtcyIsIml0ZW1zUGVyUGFnZSIsImhhc05leHRQYWdlIiwiaGFzUHJldmlvdXNQYWdlIiwiZ2V0UGFnZU51bWJlcnMiLCJwYWdlcyIsIm1heFZpc2libGVQYWdlcyIsImkiLCJwdXNoIiwicGFnZU51bWJlcnMiLCJ2YWx1ZSIsIm9uQ2hhbmdlIiwiZSIsIk51bWJlciIsInRhcmdldCIsIm1hcCIsIm9wdGlvbiIsImtleSIsInBhZ2UiLCJpbmRleCIsIkZyYWdtZW50IiwiZXhwb3J0cyIsIl9kZWZhdWx0Il0sInNvdXJjZXMiOlsicGFnaW5hdGlvbi50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNuIH0gZnJvbSAnLi4vLi4vbGliL3V0aWxzJztcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gJ0AvY29tcG9uZW50cy91aS9idXR0b24nO1xuXG4vLyDliIbpobXkv6Hmga/mjqXlj6NcbmV4cG9ydCBpbnRlcmZhY2UgUGFnaW5hdGlvbkluZm8ge1xuICBjdXJyZW50UGFnZTogbnVtYmVyO1xuICB0b3RhbFBhZ2VzOiBudW1iZXI7XG4gIHRvdGFsSXRlbXM6IG51bWJlcjtcbiAgaXRlbXNQZXJQYWdlOiBudW1iZXI7XG4gIGhhc05leHRQYWdlOiBib29sZWFuO1xuICBoYXNQcmV2aW91c1BhZ2U6IGJvb2xlYW47XG59XG5cbi8vIOWIhumhtee7hOS7tuWxnuaAp1xuaW50ZXJmYWNlIFBhZ2luYXRpb25Qcm9wcyB7XG4gIGluZm86IFBhZ2luYXRpb25JbmZvO1xuICBvblBhZ2VDaGFuZ2U6IChwYWdlOiBudW1iZXIpID0+IHZvaWQ7XG4gIG9uSXRlbXNQZXJQYWdlQ2hhbmdlPzogKGl0ZW1zUGVyUGFnZTogbnVtYmVyKSA9PiB2b2lkO1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG4gIHNob3dJdGVtc1BlclBhZ2U/OiBib29sZWFuO1xuICBpdGVtc1BlclBhZ2VPcHRpb25zPzogbnVtYmVyW107XG4gIHNob3dUb3RhbD86IGJvb2xlYW47XG4gIHNob3dQYWdlSW5mbz86IGJvb2xlYW47XG59XG5cbi8vIOWIhumhteaMiemSrue7hOS7tlxuaW50ZXJmYWNlIFBhZ2luYXRpb25CdXR0b25Qcm9wcyB7XG4gIG9uQ2xpY2s6ICgpID0+IHZvaWQ7XG4gIGRpc2FibGVkPzogYm9vbGVhbjtcbiAgYWN0aXZlPzogYm9vbGVhbjtcbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZTtcbiAgY2xhc3NOYW1lPzogc3RyaW5nO1xufVxuXG5jb25zdCBQYWdpbmF0aW9uQnV0dG9uOiBSZWFjdC5GQzxQYWdpbmF0aW9uQnV0dG9uUHJvcHM+ID0gKHtcbiAgb25DbGljayxcbiAgZGlzYWJsZWQgPSBmYWxzZSxcbiAgYWN0aXZlID0gZmFsc2UsXG4gIGNoaWxkcmVuLFxuICBjbGFzc05hbWVcbn0pID0+IChcbiAgPEJ1dHRvblxuICAgIHZhcmlhbnQ9e2FjdGl2ZSA/ICdwcmltYXJ5JyA6ICdvdXRsaW5lJ31cbiAgICBzaXplPVwic21cIlxuICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgZGlzYWJsZWQ9e2Rpc2FibGVkfVxuICAgIGNsYXNzTmFtZT17Y24oXG4gICAgICAnbWluLXctWzQwcHhdIGgtMTAgcHgtMycsXG4gICAgICBhY3RpdmUgJiYgJ2JnLXByaW1hcnkgdGV4dC1wcmltYXJ5LWZvcmVncm91bmQnLFxuICAgICAgY2xhc3NOYW1lXG4gICAgKX1cbiAgPlxuICAgIHtjaGlsZHJlbn1cbiAgPC9CdXR0b24+XG4pO1xuXG4vLyDkuLvliIbpobXnu4Tku7ZcbmV4cG9ydCBjb25zdCBQYWdpbmF0aW9uOiBSZWFjdC5GQzxQYWdpbmF0aW9uUHJvcHM+ID0gKHtcbiAgaW5mbyxcbiAgb25QYWdlQ2hhbmdlLFxuICBvbkl0ZW1zUGVyUGFnZUNoYW5nZSxcbiAgY2xhc3NOYW1lLFxuICBzaG93SXRlbXNQZXJQYWdlID0gdHJ1ZSxcbiAgaXRlbXNQZXJQYWdlT3B0aW9ucyA9IFsxMCwgMjAsIDUwLCAxMDBdLFxuICBzaG93VG90YWwgPSB0cnVlLFxuICBzaG93UGFnZUluZm8gPSB0cnVlXG59KSA9PiB7XG4gIGNvbnN0IHsgY3VycmVudFBhZ2UsIHRvdGFsUGFnZXMsIHRvdGFsSXRlbXMsIGl0ZW1zUGVyUGFnZSwgaGFzTmV4dFBhZ2UsIGhhc1ByZXZpb3VzUGFnZSB9ID0gaW5mbztcblxuICAvLyDnlJ/miJDpobXnoIHmlbDnu4RcbiAgY29uc3QgZ2V0UGFnZU51bWJlcnMgPSAoKSA9PiB7XG4gICAgY29uc3QgcGFnZXM6IChudW1iZXIgfCBzdHJpbmcpW10gPSBbXTtcbiAgICBjb25zdCBtYXhWaXNpYmxlUGFnZXMgPSA3O1xuXG4gICAgaWYgKHRvdGFsUGFnZXMgPD0gbWF4VmlzaWJsZVBhZ2VzKSB7XG4gICAgICAvLyDlpoLmnpzmgLvpobXmlbDlsJHkuo7nrYnkuo7mnIDlpKflj6/op4HpobXmlbDvvIzmmL7npLrmiYDmnInpobXnoIFcbiAgICAgIGZvciAobGV0IGkgPSAxOyBpIDw9IHRvdGFsUGFnZXM7IGkrKykge1xuICAgICAgICBwYWdlcy5wdXNoKGkpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyDlkKbliJnmmL7npLrpg6jliIbpobXnoIHvvIzljIXlkKvnnIHnlaXlj7dcbiAgICAgIGlmIChjdXJyZW50UGFnZSA8PSA0KSB7XG4gICAgICAgIC8vIOW9k+WJjemhteWcqOWJjTTpobVcbiAgICAgICAgZm9yIChsZXQgaSA9IDE7IGkgPD0gNTsgaSsrKSB7XG4gICAgICAgICAgcGFnZXMucHVzaChpKTtcbiAgICAgICAgfVxuICAgICAgICBwYWdlcy5wdXNoKCcuLi4nKTtcbiAgICAgICAgcGFnZXMucHVzaCh0b3RhbFBhZ2VzKTtcbiAgICAgIH0gZWxzZSBpZiAoY3VycmVudFBhZ2UgPj0gdG90YWxQYWdlcyAtIDMpIHtcbiAgICAgICAgLy8g5b2T5YmN6aG15Zyo5ZCONOmhtVxuICAgICAgICBwYWdlcy5wdXNoKDEpO1xuICAgICAgICBwYWdlcy5wdXNoKCcuLi4nKTtcbiAgICAgICAgZm9yIChsZXQgaSA9IHRvdGFsUGFnZXMgLSA0OyBpIDw9IHRvdGFsUGFnZXM7IGkrKykge1xuICAgICAgICAgIHBhZ2VzLnB1c2goaSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIOW9k+WJjemhteWcqOS4remXtFxuICAgICAgICBwYWdlcy5wdXNoKDEpO1xuICAgICAgICBwYWdlcy5wdXNoKCcuLi4nKTtcbiAgICAgICAgZm9yIChsZXQgaSA9IGN1cnJlbnRQYWdlIC0gMTsgaSA8PSBjdXJyZW50UGFnZSArIDE7IGkrKykge1xuICAgICAgICAgIHBhZ2VzLnB1c2goaSk7XG4gICAgICAgIH1cbiAgICAgICAgcGFnZXMucHVzaCgnLi4uJyk7XG4gICAgICAgIHBhZ2VzLnB1c2godG90YWxQYWdlcyk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHBhZ2VzO1xuICB9O1xuXG4gIGNvbnN0IHBhZ2VOdW1iZXJzID0gZ2V0UGFnZU51bWJlcnMoKTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtjbignZmxleCBmbGV4LWNvbCBzbTpmbGV4LXJvdyBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIGdhcC00JywgY2xhc3NOYW1lKX0+XG4gICAgICB7Lyog5bem5L6n5L+h5oGvICovfVxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBnYXAtNFwiPlxuICAgICAgICB7c2hvd1RvdGFsICYmIChcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtc20gdGV4dC1ncmF5LTYwMFwiPlxuICAgICAgICAgICAg5YWxIHt0b3RhbEl0ZW1zfSDmnaHorrDlvZVcbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKX1cbiAgICAgICAgXG4gICAgICAgIHtzaG93SXRlbXNQZXJQYWdlICYmIG9uSXRlbXNQZXJQYWdlQ2hhbmdlICYmIChcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGdhcC0yXCI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJ0ZXh0LXNtIHRleHQtZ3JheS02MDBcIj7mr4/pobU8L3NwYW4+XG4gICAgICAgICAgICA8c2VsZWN0XG4gICAgICAgICAgICAgIHZhbHVlPXtpdGVtc1BlclBhZ2V9XG4gICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gb25JdGVtc1BlclBhZ2VDaGFuZ2UoTnVtYmVyKGUudGFyZ2V0LnZhbHVlKSl9XG4gICAgICAgICAgICAgIGNsYXNzTmFtZT1cImJvcmRlciBib3JkZXItZ3JheS0zMDAgcm91bmRlZC1tZCBweC0yIHB5LTEgdGV4dC1zbVwiXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHtpdGVtc1BlclBhZ2VPcHRpb25zLm1hcChvcHRpb24gPT4gKFxuICAgICAgICAgICAgICAgIDxvcHRpb24ga2V5PXtvcHRpb259IHZhbHVlPXtvcHRpb259PlxuICAgICAgICAgICAgICAgICAge29wdGlvbn1cbiAgICAgICAgICAgICAgICA8L29wdGlvbj5cbiAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICA8L3NlbGVjdD5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRleHQtc20gdGV4dC1ncmF5LTYwMFwiPuadoTwvc3Bhbj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKX1cbiAgICAgIDwvZGl2PlxuXG4gICAgICB7Lyog5YiG6aG15a+86IiqIC0g5Y+q5pyJ5b2T5oC76aG15pWw5aSn5LqOMeaXtuaYvuekuiAqL31cbiAgICAgIHt0b3RhbFBhZ2VzID4gMSAmJiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTFcIj5cbiAgICAgICAgICB7Lyog5LiK5LiA6aG1ICovfVxuICAgICAgICAgIDxQYWdpbmF0aW9uQnV0dG9uXG4gICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBvblBhZ2VDaGFuZ2UoY3VycmVudFBhZ2UgLSAxKX1cbiAgICAgICAgICAgIGRpc2FibGVkPXshaGFzUHJldmlvdXNQYWdlfVxuICAgICAgICAgICAgY2xhc3NOYW1lPVwibXItMlwiXG4gICAgICAgICAgPlxuICAgICAgICAgICAg5LiK5LiA6aG1XG4gICAgICAgICAgPC9QYWdpbmF0aW9uQnV0dG9uPlxuXG4gICAgICAgICAgey8qIOmhteeggSAqL31cbiAgICAgICAgICB7cGFnZU51bWJlcnMubWFwKChwYWdlLCBpbmRleCkgPT4gKFxuICAgICAgICAgICAgPFJlYWN0LkZyYWdtZW50IGtleT17aW5kZXh9PlxuICAgICAgICAgICAgICB7cGFnZSA9PT0gJy4uLicgPyAoXG4gICAgICAgICAgICAgICAgPHNwYW4ga2V5PXtgZWxsaXBzaXMtJHtpbmRleH1gfSBjbGFzc05hbWU9XCJweC0zIHB5LTIgdGV4dC1ncmF5LTUwMFwiPi4uLjwvc3Bhbj5cbiAgICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgICA8UGFnaW5hdGlvbkJ1dHRvblxuICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gb25QYWdlQ2hhbmdlKHBhZ2UgYXMgbnVtYmVyKX1cbiAgICAgICAgICAgICAgICAgIGFjdGl2ZT17cGFnZSA9PT0gY3VycmVudFBhZ2V9XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAge3BhZ2V9XG4gICAgICAgICAgICAgICAgPC9QYWdpbmF0aW9uQnV0dG9uPlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICApKX1cblxuICAgICAgICAgIHsvKiDkuIvkuIDpobUgKi99XG4gICAgICAgICAgPFBhZ2luYXRpb25CdXR0b25cbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IG9uUGFnZUNoYW5nZShjdXJyZW50UGFnZSArIDEpfVxuICAgICAgICAgICAgZGlzYWJsZWQ9eyFoYXNOZXh0UGFnZX1cbiAgICAgICAgICAgIGNsYXNzTmFtZT1cIm1sLTJcIlxuICAgICAgICAgID5cbiAgICAgICAgICAgIOS4i+S4gOmhtVxuICAgICAgICAgIDwvUGFnaW5hdGlvbkJ1dHRvbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICApfVxuXG4gICAgICB7Lyog5Y+z5L6n6aG16Z2i5L+h5oGvICovfVxuICAgICAge3Nob3dQYWdlSW5mbyAmJiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1zbSB0ZXh0LWdyYXktNjAwXCI+XG4gICAgICAgICAg56ysIHtjdXJyZW50UGFnZX0g6aG177yM5YWxIHt0b3RhbFBhZ2VzfSDpobVcbiAgICAgICAgPC9kaXY+XG4gICAgICApfVxuICAgIDwvZGl2PlxuICApO1xufTtcblxuLy8g6buY6K6k5a+85Ye6XG5leHBvcnQgZGVmYXVsdCBQYWdpbmF0aW9uO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsSUFBQUEsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsTUFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsT0FBQSxHQUFBRixPQUFBO0FBQWdELElBQUFHLFlBQUE7QUFB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bEJvQixXQUFXLENBQUNNLEdBQUcsQ0FBQyxDQUFDRyxJQUFJLEVBQUVDLEtBQUssS0FDM0IvQyxLQUFBLENBQUNOLE1BQUEsQ0FBQU8sT0FBSyxDQUFDK0MsUUFBUTtJQUFDSCxHQUFHLEVBQUVFLEtBQU07SUFBQWxDLE1BQUE7SUFBQUMsUUFBQTtNQUFBQyxRQUFBLEVBQUFoQixZQUFBO01BQUFpQixVQUFBO01BQUFDLFlBQUE7SUFBQTtFQUFBLEdBQ3hCNkIsSUFBSSxLQUFLLEtBQUssR0FDYjlDLEtBQUE7SUFBTTZDLEdBQUcsRUFBRSxZQUFZRSxLQUFLLEVBQUc7SUFBQ3ZDLFNBQVMsRUFBQyx5QkFBeUI7SUFBQUssTUFBQTtJQUFBQyxRQUFBO01BQUFDLFFBQUEsRUFBQWhCLFlBQUE7TUFBQWlCLFVBQUE7TUFBQUMsWUFBQTtJQUFBO0VBQUEsR0FBQyxLQUFTLENBQUMsR0FFOUVqQixLQUFBLENBQUNHLGdCQUFnQjtJQUNmQyxPQUFPLEVBQUVBLENBQUEsS0FBTWdCLFlBQVksQ0FBQzBCLElBQWMsQ0FBRTtJQUM1Q3hDLE1BQU0sRUFBRXdDLElBQUksS0FBS3BCLFdBQVk7SUFBQWIsTUFBQTtJQUFBQyxRQUFBO01BQUFDLFFBQUEsRUFBQWhCLFlBQUE7TUFBQWlCLFVBQUE7TUFBQUMsWUFBQTtJQUFBO0VBQUEsR0FFNUI2QixJQUNlLENBRU4sQ0FDakIsQ0FBQyxFQUdGOUMsS0FBQSxDQUFDRyxnQkFBZ0I7SUFDZkMsT0FBTyxFQUFFQSxDQUFBLEtBQU1nQixZQUFZLENBQUNNLFdBQVcsR0FBRyxDQUFDLENBQUU7SUFDN0NyQixRQUFRLEVBQUUsQ0FBQ3lCLFdBQVk7SUFDdkJ0QixTQUFTLEVBQUMsTUFBTTtJQUFBSyxNQUFBO0lBQUFDLFFBQUE7TUFBQUMsUUFBQSxFQUFBaEIsWUFBQTtNQUFBaUIsVUFBQTtNQUFBQyxZQUFBO0lBQUE7RUFBQSxHQUNqQixvQkFFaUIsQ0FDZixDQUNOLEVBR0FRLFlBQVksSUFDWHpCLEtBQUE7SUFBS1EsU0FBUyxFQUFDLHVCQUF1QjtJQUFBSyxNQUFBO0lBQUFDLFFBQUE7TUFBQUMsUUFBQSxFQUFBaEIsWUFBQTtNQUFBaUIsVUFBQTtNQUFBQyxZQUFBO0lBQUE7RUFBQSxHQUFDLFNBQ25DLEVBQUNTLFdBQVcsRUFBQyxzQkFBSyxFQUFDQyxVQUFVLEVBQUMsU0FDN0IsQ0FFSixDQUFDO0FBRVYsQ0FBQzs7QUFFRDtBQUFBc0IsT0FBQSxDQUFBL0IsVUFBQSxHQUFBQSxVQUFBO0FBQUEsSUFBQWdDLFFBQUEsR0FBQUQsT0FBQSxDQUFBaEQsT0FBQSxHQUNlaUIsVUFBVSIsImlnbm9yZUxpc3QiOltdfQ==