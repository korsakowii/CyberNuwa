8a1dfaf77c2c80c04f63e28007dfe6f5
"use strict";

var _jsxFileName = "/Users/yanxiaoyu/projects/CyberNuwa/tests/components/ui/Dropdown.test.tsx";
// 模拟Button组件
_getJestObj().mock('../../../components/ui/button', () => {
  return function MockButton(_ref) {
    let {
        children,
        onClick,
        disabled,
        className
      } = _ref,
      props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
    return __jsx("button", (0, _extends2.default)({
      onClick: onClick,
      disabled: disabled,
      className: className,
      "data-testid": "dropdown-button"
    }, props, {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 10,
        columnNumber: 7
      }
    }), children);
  };
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = _interopRequireDefault(require("react"));
var _react2 = require("@testing-library/react");
var _dropdown = _interopRequireDefault(require("../../../components/ui/dropdown"));
const _excluded = ["children", "onClick", "disabled", "className"];
var __jsx = _react.default.createElement;
function _getJestObj() {
  const {
    jest
  } = require("@jest/globals");
  _getJestObj = () => jest;
  return jest;
}
describe('Dropdown Component', () => {
  const mockOptions = [{
    label: '选项 1',
    value: 'option1'
  }, {
    label: '选项 2',
    value: 'option2'
  }, {
    label: '选项 3',
    value: 'option3',
    disabled: true
  }, {
    label: '',
    value: 'divider',
    divider: true
  }, {
    label: '选项 4',
    value: 'option4',
    icon: '🌟'
  }];
  const mockOnSelect = jest.fn();
  beforeEach(() => {
    jest.clearAllMocks();
  });
  describe('Basic Rendering', () => {
    it('renders dropdown trigger', () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 44,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 41,
          columnNumber: 9
        }
      }));
      expect(_react2.screen.getByText('点击我')).toBeInTheDocument();
    });
    it('renders with custom className', () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 56,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        className: "custom-dropdown",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 53,
          columnNumber: 9
        }
      }));
      const dropdown = _react2.screen.getByText('点击我').closest('div')?.parentElement;
      expect(dropdown).toHaveClass('custom-dropdown');
    });
  });
  describe('Dropdown Menu', () => {
    it('shows dropdown menu when clicked', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 72,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 69,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        expect(_react2.screen.getByText('选项 1')).toBeInTheDocument();
        expect(_react2.screen.getByText('选项 2')).toBeInTheDocument();
        expect(_react2.screen.getByText('选项 3')).toBeInTheDocument();
        expect(_react2.screen.getByText('选项 4')).toBeInTheDocument();
      });
    });
    it('hides dropdown menu when clicking outside', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 92,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 89,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        expect(_react2.screen.getByText('选项 1')).toBeInTheDocument();
      });

      // 点击外部
      _react2.fireEvent.mouseDown(document.body);
      await (0, _react2.waitFor)(() => {
        expect(_react2.screen.queryByText('选项 1')).not.toBeInTheDocument();
      });
    });
  });
  describe('Option Selection', () => {
    it('calls onSelect when option is clicked', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 118,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 115,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        const option = _react2.screen.getByText('选项 1');
        _react2.fireEvent.click(option);
      });
      expect(mockOnSelect).toHaveBeenCalledWith(mockOptions[0]);
    });
    it('closes dropdown after selection', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 138,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 135,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        const option = _react2.screen.getByText('选项 1');
        _react2.fireEvent.click(option);
      });
      await (0, _react2.waitFor)(() => {
        expect(_react2.screen.queryByText('选项 1')).not.toBeInTheDocument();
      });
    });
    it('does not call onSelect for disabled options', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 160,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 157,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        const disabledOption = _react2.screen.getByText('选项 3');
        _react2.fireEvent.click(disabledOption);
      });
      expect(mockOnSelect).not.toHaveBeenCalled();
    });
    it('does not call onSelect for divider options', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 180,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 177,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        const divider = _react2.screen.getByText('选项 3').nextElementSibling?.querySelector('div');
        if (divider) {
          _react2.fireEvent.click(divider);
        }
      });
      expect(mockOnSelect).not.toHaveBeenCalled();
    });
  });
  describe('Option Types', () => {
    it('renders regular options correctly', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 204,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 201,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        const option = _react2.screen.getByText('选项 1').closest('div');
        expect(option).toHaveClass('px-4', 'py-3');
      });
    });
    it('renders options with icons', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 222,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 219,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        expect(_react2.screen.getByText('🌟')).toBeInTheDocument();
        expect(_react2.screen.getByText('选项 4')).toBeInTheDocument();
      });
    });
    it('renders disabled options with correct styling', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 240,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 237,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        const disabledOption = _react2.screen.getByText('选项 3').closest('div');
        expect(disabledOption).toHaveClass('text-gray-400', 'cursor-not-allowed');
      });
    });
    it('renders dividers correctly', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 258,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 255,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        const divider = _react2.screen.getByText('选项 3').nextElementSibling?.querySelector('div');
        expect(divider).toHaveClass('h-px', 'bg-gray-200');
      });
    });
  });
  describe('Placement and Alignment', () => {
    it('applies correct placement classes', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 278,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        placement: "top",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 275,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        const menu = _react2.screen.getByText('选项 1').closest('div')?.parentElement?.parentElement;
        expect(menu).toHaveClass('bottom-full');
      });
    });
    it('applies correct alignment classes', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 297,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        align: "end",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 294,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        const menu = _react2.screen.getByText('选项 1').closest('div')?.parentElement?.parentElement;
        expect(menu).toHaveClass('right-0');
      });
    });
  });
  describe('Width Control', () => {
    it('applies custom width when specified', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 318,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        width: "xl",
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 315,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        const menu = _react2.screen.getByText('选项 1').closest('div')?.parentElement?.parentElement;
        expect(menu).toHaveClass('w-80');
      });
    });
    it('uses default width when not specified', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 337,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 334,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        const menu = _react2.screen.getByText('选项 1').closest('div')?.parentElement?.parentElement;
        expect(menu).toHaveClass('w-56');
      });
    });
  });
  describe('Search Functionality', () => {
    it('shows search input when searchable is true', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 357,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        searchable: true,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 354,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        expect(_react2.screen.getByPlaceholderText('搜索...')).toBeInTheDocument();
      });
    });
    it('filters options based on search input', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 375,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        searchable: true,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 372,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        const searchInput = _react2.screen.getByPlaceholderText('搜索...');
        _react2.fireEvent.change(searchInput, {
          target: {
            value: '选项 1'
          }
        });
        expect(_react2.screen.getByText('选项 1')).toBeInTheDocument();
        expect(_react2.screen.queryByText('选项 2')).not.toBeInTheDocument();
      });
    });
    it('shows no results message when search has no matches', async () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: mockOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 397,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        searchable: true,
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 394,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);
      await (0, _react2.waitFor)(() => {
        const searchInput = _react2.screen.getByPlaceholderText('搜索...');
        _react2.fireEvent.change(searchInput, {
          target: {
            value: '不存在'
          }
        });
        expect(_react2.screen.getByText('无搜索结果')).toBeInTheDocument();
      });
    });
  });
  describe('Edge Cases', () => {
    it('handles empty options array', () => {
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: [],
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 420,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 417,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);

      // 空选项数组时，下拉菜单应该为空，不显示任何提示
      expect(_react2.screen.queryByText('没有可用的选项')).not.toBeInTheDocument();
    });
    it('handles options with missing label', () => {
      const invalidOptions = [{
        label: '',
        value: 'option1'
      }, {
        label: '选项 2',
        value: 'option2'
      }];
      (0, _react2.render)(__jsx(_dropdown.default, {
        options: invalidOptions,
        onSelect: mockOnSelect,
        trigger: __jsx("button", {
          __self: void 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 441,
            columnNumber: 20
          }
        }, "\u70B9\u51FB\u6211"),
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 438,
          columnNumber: 9
        }
      }));
      const trigger = _react2.screen.getByText('点击我');
      _react2.fireEvent.click(trigger);

      // Should not crash and should render valid options
      expect(_react2.screen.getByText('选项 2')).toBeInTheDocument();
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,